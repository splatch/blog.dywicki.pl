<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Porady on Splatch&#39;s devblog</title>
    <link>https://blog.dywicki.pl/category/porady/</link>
    <description>Recent content in Porady on Splatch&#39;s devblog</description>
    <generator>Hugo -- 0.147.0</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 03 Dec 2008 16:06:42 +0000</lastBuildDate>
    <atom:link href="https://blog.dywicki.pl/category/porady/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EasyMock i IAnswer, recepta na zachowanie metod</title>
      <link>https://blog.dywicki.pl/2008/12/03/easymock-inaswer-as-method-behaviour-recipe/</link>
      <pubDate>Wed, 03 Dec 2008 16:06:42 +0000</pubDate>
      <guid>https://blog.dywicki.pl/2008/12/03/easymock-inaswer-as-method-behaviour-recipe/</guid>
      <description>Złym zwyczajem jest modyfikowanie argumentów zamiast zwracania nowej wartości, jakkolwiek trafiają się sytuacje gdy testowany kod powinien weryfikować takie wywołania. W EasyMock mamy do dyspozycji w takim przypadku interfejs IAnswer. Jego użycie jest w miarę proste - dobieramy się do tablicy argumentów i robimy z nią co potrzeba.</description>
    </item>
    <item>
      <title>Testowanie tablic argumentów z EasyMock</title>
      <link>https://blog.dywicki.pl/2008/11/26/testing-array-parameters-with-easymock/</link>
      <pubDate>Wed, 26 Nov 2008 06:00:02 +0000</pubDate>
      <guid>https://blog.dywicki.pl/2008/11/26/testing-array-parameters-with-easymock/</guid>
      <description>Często zdarza się że metody, które piszemy i później testujemy mają argumenty w postaci tablic. EasyMock wówczas potrafi zgłosić wyjątek, że przekazana tablica jest różna od oczekiwanej mimo, że zawartość tablic jest identyczna.</description>
    </item>
    <item>
      <title>Uruchom inny język w Javie</title>
      <link>https://blog.dywicki.pl/2008/11/24/scripting-inside-java/</link>
      <pubDate>Mon, 24 Nov 2008 06:00:02 +0000</pubDate>
      <guid>https://blog.dywicki.pl/2008/11/24/scripting-inside-java/</guid>
      <description>Do Javy 6.0 zostało dołączone API ( &lt;a href=&#34;http://www.jcp.org/en/jsr/detail?id=223&#34;&gt;JSR 223&lt;/a&gt;) umożliwiające wywoływanie różnych języków wewnątrz wirtualnej maszyny. Można w ten sposób przesunąć chociażby moment kompilowania kodu na później bądź od razu podpiąć język interpretowany.</description>
    </item>
    <item>
      <title>Interfejs InitializingBean</title>
      <link>https://blog.dywicki.pl/2008/11/21/interfejs-initializingbean/</link>
      <pubDate>Fri, 21 Nov 2008 06:00:27 +0000</pubDate>
      <guid>https://blog.dywicki.pl/2008/11/21/interfejs-initializingbean/</guid>
      <description>Każdy z obiektów który jest konfigurowany w kontekście Springa ma szansę zweryfikować swój stan tuż po zainicjowaniu wszystkich wartości, które zostały mu przekazane. Wynika to z tego, że czasami obiekty potrafią działać na kilku różnych zasobach i można wstrzyknąć do nich tylko jeden rodzaj tegoż. Czasami po prostu potrzebujemy sprawdzić czy są przekazane wszystkie ustawienia konfiguracyjne bądź zainicjować połączenie do bazy danych na podstawie przekazanych parametrów.</description>
    </item>
    <item>
      <title>Odwołanie do klasy Properties w kontekście springa</title>
      <link>https://blog.dywicki.pl/2008/11/20/odwolanie-do-klasy-properties-w-kontekscie-springa/</link>
      <pubDate>Thu, 20 Nov 2008 06:00:46 +0000</pubDate>
      <guid>https://blog.dywicki.pl/2008/11/20/odwolanie-do-klasy-properties-w-kontekscie-springa/</guid>
      <description>&lt;em&gt;Jako, że nie zawsze mam czas pisać dłuższe noty, a nie wszyscy znają Springa postanowiłem publikować krótkie porady, które mogą kiedyś komuś się przydać.&lt;/em&gt;</description>
    </item>
  </channel>
</rss>
