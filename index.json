[{"content":"Ostatni wpis na tym blogu miał miejsce ponad 7 lat temu. W sumie nic dziwnego, ponieważ w poprzedniej notce pojawiła się informacja o jego przeniesieniu. Martwi mnie ilość linków dodanych nie tylko w postach, ale przede wszystkim w komentarzach, które są od bardzo dawna nieaktualne.\nJuż w chwili pisania poprzedniego posta musiałem dość mocno przefiltrować odnośniki do polecanych stron znajomych, którzy zajmowali się programowaniem. Teraz chyba z dużym powodzeniem mógłbym usunąć wszystkie linki które podawali autorzy komentarzy, ponieważ praktycznie wszyscy przestali prowadzić i utrzymywać swoje strony.\nOczywiście sam nie jestem lepszy, ponieważ ta wersja bloga nie jest pierwszą. Jeśli dobrze kojarzę to od 2003 roku prowadziłem 2 blogi, aby ostatecznie wylądować tutaj. Treść poprzednich nie została zarchiwizowana, przepadła. Spora część treści na tym blogu również utraciła swoją wartość jako że jest (w chwili pisania tego zdania) w wieku od 13 do około 10 lat, nie mniej jest ona cały czas utrzymywana online, jako swego rodzaju pamiątka a także punkt odniesienia dla wizytujących. PHP, o którym jest sporo notatek ewoluowało, chociaż mimo utraconego kontaktu z tym językiem, wciąż widzę sporo z jego dawnych bolączek.\nPamiętam jak w 2006 lub siódmym roku, kiedy pracowałem stacjonarnie w jednej z firm zajmującej się telematyką odwiedziłem kolegę. Jego syn miał wówczas kilka lub kilkanaście miesięcy. Nie dalej jak w czerwcu tego roku spotkałem go na konferencji wraz z synem, który również pasjonuje się programowaniem. Wspominam o tym, ponieważ gro z nas, osób które publikowały 10 lat temu, ma lub planuje mieć dzieci. Nasi rodzice i ich przyjaciele mieli wspomnienia z tego jak wspinali się po drzewach, chodzili na zabawy lub koncerty i wspólnie spędzali czas. My również w dużej mierze takie wspomnienia mamy. W tym wszystkim jest jednak jeszcze jedna, dość istotna rzecz. Nasi rodzice mieli po kilka fotografii z kluczowych dla ich, lub ich bliskich życia, momentów. Można powiedzieć, że te papierowe, czasami już wyblakłe zdjęcia są niczym analogowe przełączniki. Utkwiły w jednym stanie. Sam z rozrzewnieniem rozpamiętuję \u0026ldquo;stan otoczenia\u0026rdquo;, moich bliskich lub mnie samego utrwalone dzięki kliszy, gdy jakieś zamierzchłe fotki wpadają mi w ręce. W dobie cyfryzacji mamy tak wiele zdjęć w tak wielu momentach, że ich wartość kompletnie się zdezawuowała. Są one w dużej mierze bezwartościowe. Co więcej, owe cyfrowo utrwalone stany są podatne na wiele zagrożeń, które atakują systemy. Mamy więc wszelkiego rodzaju niebezpieczeństwa typu ransomware, uszkodzenie telefonu czy też dysku lub bardziej prozaiczne - takie jak utracone hasło do serwera gdzie cyfrowa kopia została zapisana.\nDlatego tak ważne jest pielęgnowanie cyfrowych materiałów, które są wokół nas. Nie tylko fotografie, które są rozmazane i niewyraźne, ale również nasze cyfrowe przemyślenia, zamierzchły kod i nieudane programy mogą przetrwać i stać się naszym dziedzictwem. Dalekie od doskonałości są świadectwem naszego człowieczeństwa.\n","permalink":"https://blog.dywicki.pl/2018/09/27/blog-7-lat-pozniej/","summary":"Ostatni wpis na tym blogu miał miejsce ponad 7 lat temu. W sumie nic dziwnego, ponieważ w poprzedniej notce pojawiła się informacja o jego przeniesieniu. Martwi mnie ilość linków dodanych nie tylko w postach, ale przede wszystkim w komentarzach, które są od bardzo dawna nieaktualne.","title":"7 lat później"},{"content":"Po dłuższym czasie braku aktywności na tym blogu - postanowiłem przenieść część z postów, które zostały na nim opublikowane do nowego blogu, który tyczy się kwestii java, middleware itd. pod adresem dywicki.pl. Być może zawitają tam inne języki :), kto wie może i PHP? Wszystkie pozostałe posty są i nadal będą dostępne. Przy okazji zwijania tego bloga raz jeszcze chciałbym podziękować wszystkim tym, którzy dorzucili się do odzyskania zrzutu bazy danych z OVH w 2006 roku.\nDla osób, które jeszcze subskrybują kanały RSS z tego bloga - proszę o przepięcie na nowy adres - dywicki.pl, na pewno nie pożałujecie. Nowy blog z pewnością będzie aktualizowany częściej niż ten. :)\n","permalink":"https://blog.dywicki.pl/2011/06/10/przeprowadzka/","summary":"\u003cp\u003ePo dłuższym czasie braku aktywności na tym blogu - postanowiłem przenieść część z postów, które zostały na nim opublikowane do nowego blogu, który tyczy się kwestii java, middleware itd. pod adresem \u003ca href=\"http://dywicki.pl\"\u003edywicki.pl\u003c/a\u003e. Być może zawitają tam inne języki :), kto wie może i PHP? Wszystkie pozostałe posty są i nadal będą dostępne. Przy okazji zwijania tego bloga raz jeszcze chciałbym podziękować wszystkim tym, którzy dorzucili się do odzyskania zrzutu bazy danych z OVH w \u003ca href=\"/2006/11/22/powrot/\"\u003e2006 roku\u003c/a\u003e.\u003c/p\u003e","title":"Przeprowadzka"},{"content":"Bardzo dużo czasu minęło od ostatniej noty, tym czasem ja w dalszym ciągu nie mam kiedy publikować not technicznych a tym bardziej \u0026ldquo;prywatnych\u0026rdquo;. Wynika to między innymi z tego, że rozpocząłem działalność gospodarczą. Moja firma nazywa się Code-House i zajmuje się doradztwem, szkoleniami jak i wytwarzaniem oprogramowania. Szczegóły oferty znajdziecie na stronie firmowej jeśli zostanie w końcu uruchomiona. ;) No a tak na co dzień jestem pracownikiem kontraktowym.\nW jednym z komentarzy Tomasz Bartczak zapytał o nowiny z życia takiej firmy. Tych którzy są zainteresowani tym tematem zapraszam na oficjalny blog mojej firmy. Jako że jest on oficjalny raczej nie znajdziecie na nim przemyśleń o naturze polityków, ale z pewnością od czasu do czasu będę tam publikował noty techniczne oprócz nowin z firmy. Jeśli ktoś będzie zainteresowany wyłącznie technologią proszę subskrybować kanały odpowiednie dla danych kategorii. :-)\nWażnym pytaniem jest - co się stanie z tym blogiem? W sieci istnieje cała masa notatników która nie była aktualizowana od wieków, wszystko wskazuje na to że ten stanie się kolejnym. Może od czasu do czasu coś tu się pojawi ale ani tego nie obiecuję (jak zwykłem do tej pory robić) ani nie planuję.\n","permalink":"https://blog.dywicki.pl/2009/06/05/pare-slow-o-tym-co-sie-dzieje/","summary":"Bardzo dużo czasu minęło od ostatniej noty, tym czasem ja w dalszym ciągu nie mam kiedy publikować not technicznych a tym bardziej \u0026ldquo;prywatnych\u0026rdquo;. Wynika to między innymi z tego, że rozpocząłem działalność gospodarczą. Moja firma nazywa się \u003ca href=\"http://code-house.org/\"\u003eCode-House\u003c/a\u003e i zajmuje się doradztwem, szkoleniami jak i wytwarzaniem oprogramowania. Szczegóły oferty znajdziecie na stronie firmowej jeśli zostanie w końcu uruchomiona. ;) No a tak na co dzień jestem pracownikiem kontraktowym.","title":"Parę słów o tym co się dzieje"},{"content":"Dnia wczorajszego na InfoQ o tym, że został udostępniony szkic specyfikacji Servlet API 3.0. Największe nowości to\u0026hellip; adnotacje, które będą mogły być użyte w miejsce interfejsów i dziedziczenia.\nŁatwiejsze tworzenie, ang. Ease of Development (Eod): W wcześniejszym szkicu zostały zaprezentowane adnotacje jako sposób na stworzenie Servletu - POJO. Jakkolwiek po dyskusji i odpowiedzi społeczności adnotacje @GET i @POST na poziomie metod zostały wycofane. Zostają jednak adnotacje dla typów - deklaracja sevletu @WebServlet oraz deklaracja filtru @ServletFilter, @WebServletContextListener będzie alternatywnym sposobem na zdefiniowanie context listenera. Dodatkowo adnotacje takie jak @Resouorce będą wspierane w aplikacjach webowych będą zachowywać się tak jak w starszej wersji specyfikacji (2.5). Rozszerzalność: szkielety webowe zbudowane na bazie servletów są bardzo popularne. Jest ich bardzo wiele, do wyboru w zależności od problemów, które mają rozwiązywać. Specyfikacja będzie umożliwiała łatwiejszą konfigurację tychże szkieletów. Przetwarzanie asynchroniczne: największym wyzwaniem i zmianą jaką podjęli autorzy specyfikacji. W poprzedniej wersji zostały zdefiniowane operacje zatrzymania (suspend) oraz wznowienia (resume). Po publikacji grupa ekspertów podjęła dyskusję na temat przypadków użycia takiego rozwiązania. Na łamach InfoQ są fragmenty dyskusji na temat fragmentów specyfikacji. Ludzie z JBossa krytykują Jetty, inni krytykują grupę która pracuje nad specyfikacją, że kiepsko współpracuje ze społecznością.\nMam osobiście nadzieję, że ta burza mózgów wyjdzie nam na dobre i adnotacje w Servlet API 3.0 nie będą jedyną nowością. :-)\n","permalink":"https://blog.dywicki.pl/2008/12/22/java-servlet-api-3/","summary":"Dnia wczorajszego na \u003ca href=\"http://infoq.com\"\u003eInfoQ\u003c/a\u003e o tym, że został udostępniony \u003ca href=\"http://www.infoq.com/news/2008/12/servlet3_debate\"\u003eszkic specyfikacji\u003c/a\u003e Servlet API 3.0. Największe nowości to\u0026hellip; adnotacje, które będą mogły być użyte w miejsce interfejsów i dziedziczenia.","title":"Java Servlet API 3.0"},{"content":"Java od wersji 5.0 zawiera możliwość definiowania typów wyliczeniowych. Jednym z praktycznych przykładów zastosowania tego mechanizmu jest TimeUnit. Enum ten służy do konwertowania jednostek czasu pomiędzy różnymi wielkościami - na przykład z minut na sekundy.\n[sourcecode lang=\u0026ldquo;java\u0026rdquo;] import java.util.concurrent.TimeUnit; // \u0026hellip; TimeUnit.MINUTES.toSeconds(55); [/sourcecode]\nFajna sprawa - jeśli mamy do czynienia z konwersjami. Inny pożyteczny przykład to przekazywanie czasu jako argumentu: [sourcecode lang=\u0026ldquo;java\u0026rdquo;] package org.code_house.concurrent;\nimport java.util.Date; import java.util.concurrent.TimeUnit;\npublic class Lock { void lock(TimeUnit unit, long value) throws InterruptedException { Thread.sleep(unit.toMillis(value)); }\npublic static void main(String[] args) throws Exception { System.out.println(\u0026ldquo;before \u0026quot; + new Date());\nnew Lock().lock(TimeUnit.SECONDS, 30);\nSystem.out.println(\u0026ldquo;after \u0026quot; + new Date()); }\n} [/sourcecode] Programista, który używa takiej klasy nie musi się więc przejmować konwertowaniem jednostek na milisekundy, które są podstawą do wywołania metody Thread.sleep.\nTimeUnit obsługuje następujące wielkości:\nnanosekundy mikrosekundy milisekundy sekundy minuty godziny dni Posługując się kodem z Javy postanowiłem sobie przypomnieć nieco PHP i napisałem wersję tego typu wyliczeniowego dla PHP: [sourcecode lang=\u0026ldquo;php\u0026rdquo;]\u0026lt;?php // namespace org\\code_house\\util; /\\\\ \\* A simple class for converting between time units. \\* \\* @author Łukasz Dywicki luke@code-house.org */ class TimeUnit {\n/\\\\ \\* Nanoseconds. */ const NANOS = 0;\n/\\\\ \\* Microseconds. */ const MICROS = 1;\n/\\\\ \\* Milliseconds */ const MILLIS = 2;\n/\\\\ \\* Seconds. */ const SECONDS = 3;\n/\\\\ \\* Minutes. */ const MINUTES = 4;\n/\\\\ \\* Hours. */ const HOURS = 5;\n/\\\\ \\* Days. */ const DAYS = 6;\n/\\\\ \\* Conversion table between time units. \\* @var array */ private static $modifiers = array( self::NANOS =\u0026gt; 0.000000001, self::MICROS =\u0026gt; 0.000001, self::MILLIS =\u0026gt; 0.001, self::SECONDS =\u0026gt; 1, self::MINUTES =\u0026gt; 60, self::HOURS =\u0026gt; 3600, self::DAYS =\u0026gt; 86400, );\n/\\\\ \\* Constructs new time unit. \\* \\* @param $type TimeUnit Time unit base. */ public function __construct($type) { if ($type \u0026lt; TimeUnit::NANOS || $type \u0026gt; TimeUnit::DAYS) { throw new RuntimeException(\u0026lsquo;Time unit base is out of range\u0026rsquo;); } $this-\u0026gt;type = $type; }\npublic function toNanos($value) { return TimeUnit::convert($this-\u0026gt;type, $value, TimeUnit::NANOS); }\npublic function toMicros($value) { return TimeUnit::convert($this-\u0026gt;type, $value, TimeUnit::MICROS); }\npublic function toMilis($value) { return TimeUnit::convert($this-\u0026gt;type, $value, TimeUnit::MILLIS); }\npublic function toSeconds($value) { return TimeUnit::convert($this-\u0026gt;type, $value, TimeUnit::SECONDS); }\npublic function toMinutes($value) { return TimeUnit::convert($this-\u0026gt;type, $value, TimeUnit::MINUTES); }\npublic function toHours($value) { return TimeUnit::convert($this-\u0026gt;type, $value, TimeUnit::HOURS); }\npublic function toDays($value) { return TimeUnit::convert($this-\u0026gt;type, $value, TimeUnit::DAYS); }\n/\\\\ \\* Convert method. \\* \\* @param $from Time unit \\* @param $value Number of values. \\* @param $to Time unit \\* @return decimal */ private final static function convert($from, $value, $to) { if ($from === $to) { return $value; }\n$value *= self::$modifiers[$from]; return $value / self::$modifiers[$to]; } }\n// przykład użycia $unit = new TimeUnit(TimeUnit::SECONDS); echo $unit-\u0026gt;toMinutes(60) .\u0026rdquo;\\n\u0026rdquo;;\n$unit = new TimeUnit(TimeUnit::HOURS); echo $unit-\u0026gt;toMinutes(1) .\u0026quot;\\n\u0026quot;;\n?\u0026gt;[/sourcecode]\nNiestety brak pól z modyfikatorami public static final w PHP uniemożliwił zastosowanie choćby czegoś podobnego do typu wyliczeniowego.. Kod klasy dla PHP jest wolnodostępny. :-)\n","permalink":"https://blog.dywicki.pl/2008/12/09/timeunit-enum-in-java-and-class-inphp/","summary":"Java od wersji 5.0 zawiera możliwość definiowania typów wyliczeniowych. Jednym z praktycznych przykładów zastosowania tego mechanizmu jest \u003ca href=\"http://www.docjar.com/docs/api/java/util/concurrent/TimeUnit.html\"\u003eTimeUnit\u003c/a\u003e. Enum ten służy do konwertowania jednostek czasu pomiędzy różnymi wielkościami - na przykład z minut na sekundy.","title":"Typ wyliczeniowy TimeUnit w Javie oraz klasa w PHP"},{"content":"Złym zwyczajem jest modyfikowanie argumentów zamiast zwracania nowej wartości, jakkolwiek trafiają się sytuacje gdy testowany kod powinien weryfikować takie wywołania. W EasyMock mamy do dyspozycji w takim przypadku interfejs IAnswer. Jego użycie jest w miarę proste - dobieramy się do tablicy argumentów i robimy z nią co potrzeba.\nOto przykład - interfejs Populator dodaje do przekazanej tablicy określoną wartość w puste miejsca. Zwraca też ilość zmian, które zaprowadził. Całość jest oparta na bardzo prostym kodzie, zaledwie jedna pętla, jakkolwiek na potrzeby przykładu jest to wystarczające. Pragnę jednak nadmienić, że w podobny sposób można testować bardziej złożony kod, gdzie kolaborują ze sobą dwa obiekty - tj. Observator i Observable czy też Visitor i Visitable.\n[sourcecode lang=\u0026ldquo;java\u0026rdquo;]package org.code_house.test.mock;\ninterface Populator { int fill(String value, String[] arguments); } [/sourcecode]\nImplementacja interfejsu jest bardzo prosta: [sourcecode lang=\u0026ldquo;java\u0026rdquo;]package org.code_house.test.mock;\nclass FillAnswer implements IAnswer { public Integer answer() throws Throwable { // pobranie argumentow Object[] arguments = EasyMock.getCurrentArguments(); String name = (String) arguments[0]; Object[] values = (Object[]) arguments[1];\n// logika potrzebna do testu int populated = 0; for (int i = 0; i \u0026lt; values.length; i++) { if (values[i] == null) { populated++; values[i] = name; } } return populated; } } [/sourcecode]\nTest jest również niezbyt skomplikowany - bazuje on na poprzedniej nocie - \u0026ldquo;Testowanie tablic argumentów z EasyMock\u0026rdquo;:\n[sourcecode lang=\u0026ldquo;java\u0026rdquo;]package org.code_house.test.mock;\nimport static org.easymock.EasyMock.*; import org.easymock.IAnswer;\nimport java.util.Arrays;\nimport junit.framework.TestCase;\npublic class AnswerTest extends TestCase {\npublic void testPopulate() { Populator populator = createMock(Populator.class); expect(populator.fill(eq(\u0026ldquo;Code House\u0026rdquo;), aryEq(new String[3]))) .andAnswer(new FillAnswer()); expect(populator.fill(eq(\u0026ldquo;Code House\u0026rdquo;), aryEq(new String[] {\u0026ldquo;1\u0026rdquo;}))) .andAnswer(new FillAnswer()); replay(populator);\n// tablica do wypełnienia String[] populated = new String[3]; int added = populator.fill(\u0026ldquo;Code House\u0026rdquo;, populated); assertEquals(3, added); // w odpowiedzi oczekujemy dodania 3 nowych elementów assertTrue(Arrays.equals( new String[] {\u0026ldquo;Code House\u0026rdquo;, \u0026ldquo;Code House\u0026rdquo;, \u0026ldquo;Code House\u0026rdquo;}, populated ));\n// w tym przypadku nie oczekujemy nowości added = populator.fill(\u0026ldquo;Code House\u0026rdquo;, new String[] {\u0026ldquo;1\u0026rdquo;}); assertEquals(0, added); } } [/sourcecode]\n","permalink":"https://blog.dywicki.pl/2008/12/03/easymock-inaswer-as-method-behaviour-recipe/","summary":"Złym zwyczajem jest modyfikowanie argumentów zamiast zwracania nowej wartości, jakkolwiek trafiają się sytuacje gdy testowany kod powinien weryfikować takie wywołania. W EasyMock mamy do dyspozycji w takim przypadku interfejs IAnswer. Jego użycie jest w miarę proste - dobieramy się do tablicy argumentów i robimy z nią co potrzeba.","title":"EasyMock i IAnswer, recepta na zachowanie metod"},{"content":"Często zdarza się że metody, które piszemy i później testujemy mają argumenty w postaci tablic. EasyMock wówczas potrafi zgłosić wyjątek, że przekazana tablica jest różna od oczekiwanej mimo, że zawartość tablic jest identyczna.\n[sourcecode lang=\u0026ldquo;java\u0026rdquo;]java.lang.AssertionError: Unexpected method call find([Ljava.lang.String;@1ad77a7): find([Ljava.lang.String;@b8f82d): expected: 1, actual: 0 [/sourcecode]\n[sourcecode lang=\u0026ldquo;java\u0026rdquo;] package org.code_house.test.mock;\nimport static org.easymock.EasyMock.aryEq; import static org.easymock.EasyMock.createMock; import static org.easymock.EasyMock.expect; import static org.easymock.EasyMock.replay;\nimport java.util.Collections; import java.util.List;\nimport junit.framework.TestCase;\ninterface Finder { List find(String[] names); }\npublic class FinderTest extends TestCase {\npublic void testFind() { Finder mock = createMock(Finder.class); expect(mock.find(aryEq(new String[] {\u0026ldquo;Amy\u0026rdquo;, \u0026ldquo;Luke\u0026rdquo;}))).andReturn( Collections.EMPTY_LIST); replay(mock);\nList list = mock.find(new String[] {\u0026ldquo;Amy\u0026rdquo;, \u0026ldquo;Luke\u0026rdquo;}); assertTrue(list.isEmpty()); } }\n[/sourcecode]\nRozwiązaniem tych problemów jest użycie mechanizmu \u0026ldquo;matcherów\u0026rdquo;, które są wbudowane w sam szkielet. Najprostszym sposobem na ich użycie jest odwołanie przy pomocy statycznego wywołania którejś z metod EasyMock. Poniżej znajduje się lista dostępnych matcherów. Wartość \u0026ldquo;given\u0026rdquo; to argument przekazany w wywołaniu metody.\neq(X value)\nArgument pasuje jeśli wyrażenie value.equals(given) zwróci true. Dostępny dla wszystkich typów prostych i obiektów.\nanyBoolean(), anyByte(), anyChar(), anyDouble(), anyFloat(), anyInt(), anyLong(), anyObject(), anyShort()\nDowolna wartość zostanie przepuszczona niezależnie od tego co będzie przekazane. Dostępny dla wszystkich typów.\neq(X value, X delta)\nPasuje jeśli aktualna jeśli wyrażenie given jest równe value z dokładnością do delta. Dostępne dla typów float oraz double.\naryEq(X value)\nPasuje jeśli wyrażenie Arrays.equals(value, given) zwraca true. Dostępne dla tablic typów prostych jak i dla obiektów.\nisNull()\nPasuje jeśli given == null. Dostępne tylko dla obiektów.\nnotNull()\nPasuje jeśli given != null. Dostępne tylko dla obiektów.\nsame(X value)\nPasuje jeśli wyrażenie value == given jest prawdziwe. Dostępne tylko dla obiektów.\nisA(Class clazz)\nPasuje jeśli given instanceof clazz zwraca true. Given może być instancję clazz jak i pochodną.\nlt(X value), leq(X value), geq(X value), gt(X value)\nZwraca true jeśli given jest mniejsze, mniejsze równe, większe równe bądź większe niż value. Dostępne dla wszystkich numerycznych typów prostych.\nstartsWith(String prefix), contains(String substring), endsWith(String suffix)\nZwraca true jeśli given zaczyna się, zawiera bądź kończy się daną wartością. Dostępne dla argumentów typu String.\nmatches(String regex), find(String regex)\nPasuje jeśli given pasuje w całości do wyrażenia/fragment pasuje. Dostępne dla argumentów typu String.\nand(X first, X second)\nZwraca true jeśli matcher first oraz second zwracają prawdę.\nor(X first, X second)\nZwraca true jeśli matcher first bądź second pasuje.\nnot(X value)\nZwraca true jeśli matcher value zwrócił fałsz.\nUzbrojeni w taki zestaw matcherów możemy poprawić kod testu tak by był on poprawny: [sourcecode lang=\u0026ldquo;java\u0026rdquo;]\npublic class FinderTest extends TestCase {\npublic void testFind() { Finder mock = createMock(Finder.class); expect(mock.find(aryEq(new String[] {\u0026ldquo;Amy\u0026rdquo;, \u0026ldquo;Luke\u0026rdquo;}))).andReturn( Collections.EMPTY_LIST); replay(mock);\nList list = mock.find(new String[] {\u0026ldquo;Amy\u0026rdquo;, \u0026ldquo;Luke\u0026rdquo;}); assertTrue(list.isEmpty()); } } [/sourcecode]\nInny przykład: [sourcecode lang=\u0026ldquo;java\u0026rdquo;] public class FinderTest extends TestCase {\npublic void testFind() { Finder mock = createMock(Finder.class); expect(mock.find(\u0026ldquo;Lucy\u0026rdquo;, aryEq(new String[] {\u0026ldquo;Amy\u0026rdquo;, \u0026ldquo;Luke\u0026rdquo;}))).andReturn( Collections.EMPTY_LIST); replay(mock);\nList list = mock.find(\u0026ldquo;Lucy\u0026rdquo;, new String[] {\u0026ldquo;Amy\u0026rdquo;, \u0026ldquo;Luke\u0026rdquo;}); assertTrue(list.isEmpty()); } } [/sourcecode]\nWarto zwrócić uwagę na to, że jeśli korzystamy dla matchera aby dopasować argument to musimy zrobić to dla wszystkich, inaczej poleci wyjątek: [sourcecode lang=\u0026ldquo;java\u0026rdquo;] java.lang.IllegalStateException: 2 matchers expected, 1 recorded. [/sourcecode]\nStąd nasz test w końcowej postaci powinien wyglądać następująco: [sourcecode lang=\u0026ldquo;java\u0026rdquo;] package org.code_house.test.mock;\nimport static org.easymock.EasyMock.aryEq; import static org.easymock.EasyMock.createMock; import static org.easymock.EasyMock.eq; import static org.easymock.EasyMock.expect; import static org.easymock.EasyMock.replay;\nimport java.util.Collections; import java.util.List;\nimport junit.framework.TestCase;\ninterface Finder { List find(String[] names);\nList find(String name, String[] names); }\npublic class FinderTest extends TestCase {\npublic void testFind() { Finder mock = createMock(Finder.class); expect(mock.find(eq(\u0026ldquo;Lucy\u0026rdquo;), aryEq(new String[] {\u0026ldquo;Amy\u0026rdquo;, \u0026ldquo;Luke\u0026rdquo;}))).andReturn( Collections.EMPTY_LIST); replay(mock);\nList list = mock.find(\u0026ldquo;Lucy\u0026rdquo;, new String[] {\u0026ldquo;Amy\u0026rdquo;, \u0026ldquo;Luke\u0026rdquo;}); assertTrue(list.isEmpty()); } } [/sourcecode]\n","permalink":"https://blog.dywicki.pl/2008/11/26/testing-array-parameters-with-easymock/","summary":"Często zdarza się że metody, które piszemy i później testujemy mają argumenty w postaci tablic. EasyMock wówczas potrafi zgłosić wyjątek, że przekazana tablica jest różna od oczekiwanej mimo, że zawartość tablic jest identyczna.","title":"Testowanie tablic argumentów z EasyMock"},{"content":"Do Javy 6.0 zostało dołączone API ( JSR 223) umożliwiające wywoływanie różnych języków wewnątrz wirtualnej maszyny. Można w ten sposób przesunąć chociażby moment kompilowania kodu na później bądź od razu podpiąć język interpretowany.\nPoniżej przykład: [sourcecode lang=\u0026ldquo;java\u0026rdquo;] package org.code_house.scripting;\nimport javax.script.ScriptEngine; import javax.script.ScriptEngineFactory; import javax.script.ScriptEngineManager;\npublic class JSMain {\npublic static void main(String[] args) throws Exception { ScriptEngineManager manager = new ScriptEngineManager();\nSystem.out.println(\u0026ldquo;Dostępne języki\u0026rdquo;); for (ScriptEngineFactory engine : manager.getEngineFactories()) { System.out.println(engine.getNames()); }\nScriptEngine engine = manager.getEngineByName(\u0026ldquo;js\u0026rdquo;); engine.put(\u0026ldquo;y\u0026rdquo;, 12);\nif (engine != null) { engine.eval(\u0026ldquo;var x = 1; print(x + y);\u0026rdquo;); } }\n} [/sourcecode]\nW taki oto sposób na naszej konsoli powinno wylądować coś takiego: [sourcecode lang=\u0026ldquo;java\u0026rdquo;] [js, rhino, JavaScript, javascript, ECMAScript, ecmascript] 13 [/sourcecode]\nMożemy również uruchomić plik js. Wystarczy do metody eval przekazać FileReader. Po uruchomieniu kodu który jest niżej powinno pokazać się okienko podobne do tego, które widzicie przy tym akapicie.\n[sourcecode lang=\u0026ldquo;java\u0026rdquo;]package org.code_house.scripting;\nimport java.io.*; import javax.script.*;\npublic class JavaScriptMain { public static void main(String[] args) throws Exception { ScriptEngineManager manager = new ScriptEngineManager(); ScriptEngine engine = manager.getEngineByName(\u0026ldquo;js\u0026rdquo;); engine.eval(new FileReader(new File(\u0026ldquo;print.js\u0026rdquo;))); } }[/sourcecode] [sourcecode lang=\u0026ldquo;js\u0026rdquo;] frame = new javax.swing.JFrame; frame.defaultCloseOperation = javax.swing.JFrame.EXIT_ON_CLOSE; frame.title = \u0026ldquo;Test\u0026rdquo; frame.setSize(new java.awt.Dimension(180, 80));\nbutton = new javax.swing.JButton(\u0026ldquo;Kliknij mnie\u0026rdquo;) button.addActionListener(function(event) { print(event.source); }); frame.add(button);\nframe.show() [/sourcecode]\nZ dodatkowych języków można podpiąć między innymi PHP, Java FX, Groovy, BeanShell i wiele innych. Aby to zrobić należy ściągnąć ze strony scripting.dev.java.net rozszerzenia (dostępne w sekcji Documents \u0026amp; files) i dodać JAR dla języka którego potrzebujemy do classpath.\n","permalink":"https://blog.dywicki.pl/2008/11/24/scripting-inside-java/","summary":"Do Javy 6.0 zostało dołączone API ( \u003ca href=\"http://www.jcp.org/en/jsr/detail?id=223\"\u003eJSR 223\u003c/a\u003e) umożliwiające wywoływanie różnych języków wewnątrz wirtualnej maszyny. Można w ten sposób przesunąć chociażby moment kompilowania kodu na później bądź od razu podpiąć język interpretowany.","title":"Uruchom inny język w Javie"},{"content":"Każdy z obiektów który jest konfigurowany w kontekście Springa ma szansę zweryfikować swój stan tuż po zainicjowaniu wszystkich wartości, które zostały mu przekazane. Wynika to z tego, że czasami obiekty potrafią działać na kilku różnych zasobach i można wstrzyknąć do nich tylko jeden rodzaj tegoż. Czasami po prostu potrzebujemy sprawdzić czy są przekazane wszystkie ustawienia konfiguracyjne bądź zainicjować połączenie do bazy danych na podstawie przekazanych parametrów.\nMamy wówczas do wyboru dwie metody. Pierwszą z nich jest implementacja interfejsu org.springframework.beans.factory.InitializingBean. Jeśli wyrzuci ona jakiś wyjątek to Spring wyrzuci wyjątek wyżej i wstrzyma powoływanie kontekstu. Oto przykład:\n[sourcecode lang=\u0026ldquo;java\u0026rdquo;] package org.code_house.samples.spring;\nimport java.util.Properties;\nimport org.springframework.beans.factory.BeanInitializationException; import org.springframework.beans.factory.InitializingBean;\npublic class PropertiesConfiguration implements InitializingBean {\n/\\\\ \\* Ustawienia konfiguracyjne. */ private Properties properties;\npublic void setProperties(Properties props) { this.properties = props; }\npublic void afterPropertiesSet() throws Exception { if (properties == null) { throw new BeanInitializationException(\u0026ldquo;Nie przekazano ustawień \u0026quot; +\u0026ldquo;konfiguracyjnych. Pole properties jest wymagane.\u0026rdquo;); } } } [/sourcecode]\nSpring nie wymusza jednak implementowania interfejsu. Jeśli nasz kod już istnieje i jest metoda która weryfikuje stan obiektu możemy użyć atrybutu init-method dla znacznika bean: [sourcecode lang=\u0026ldquo;xml\u0026rdquo;] [/sourcecode]\n","permalink":"https://blog.dywicki.pl/2008/11/21/interfejs-initializingbean/","summary":"Każdy z obiektów który jest konfigurowany w kontekście Springa ma szansę zweryfikować swój stan tuż po zainicjowaniu wszystkich wartości, które zostały mu przekazane. Wynika to z tego, że czasami obiekty potrafią działać na kilku różnych zasobach i można wstrzyknąć do nich tylko jeden rodzaj tegoż. Czasami po prostu potrzebujemy sprawdzić czy są przekazane wszystkie ustawienia konfiguracyjne bądź zainicjować połączenie do bazy danych na podstawie przekazanych parametrów.","title":"Interfejs InitializingBean"},{"content":"Jako, że nie zawsze mam czas pisać dłuższe noty, a nie wszyscy znają Springa postanowiłem publikować krótkie porady, które mogą kiedyś komuś się przydać.\nKlasa java.util.Properties to jeden z najprostszych sposobów na odwołanie do prostych ustawień konfiguracyjnych. Składnia pliku properties jest zbliżona do ini i wygląda następująco: [sourcecode language=\u0026ldquo;properties\u0026rdquo;] nazwa.wlasnosci wartosc inna.nazwa.wlasnosci=costam # to jest komentarz jeszcze.cos.nowego [/sourcecode]\nJeśli chcemy przekazać obiekt klasy Properties do jakiegoś innego obiektu możemy skorzystać z poniższej wstawki w kontekście springa: [sourcecode language=\u0026ldquo;xml\u0026rdquo;] [/sourcecode]\n","permalink":"https://blog.dywicki.pl/2008/11/20/odwolanie-do-klasy-properties-w-kontekscie-springa/","summary":"\u003cem\u003eJako, że nie zawsze mam czas pisać dłuższe noty, a nie wszyscy znają Springa postanowiłem publikować krótkie porady, które mogą kiedyś komuś się przydać.\u003c/em\u003e","title":"Odwołanie do klasy Properties w kontekście springa"},{"content":"Ostatnimi czasy odbyłem kilka spotkań w większych i mniejszych firmach. To co mnie zastanowiło po jednej z ostatniej rozmów to zdanie:\nKorzystamy z profesjonalnych narzędzi takich jak Tibco, WebMethods, czasami Bea.\nCo łączy wymienione produkty? Otóż wszystkie są rozwiązaniami z klasy EAI i \u0026hellip; są płatne. Zdanie to usłyszałem w odniesieniu do Apache Service Mix, którym się interesuję. Wniosek z tej wypowiedzi jaki udało mi się wysnuć od razu stał się tematem tej noty, czyli jeśli coś nie jest komercyjne nie jest też profesjonalne. Tak jakby OSS był gorszym rozwiązaniem od kupienia licencji na pudełkowe rozwiązanie od jakiegoś producenta.\nTrudno mi się z tym zgodzić ponieważ od początku swojej pracy obracam się w otwartym kodzie i niejeden raz korzystałem z wolnodostępnych narzędzi. Pamiętam jedną z sytuacji, gdzie w jednej z bardzo dużych międzynarodowych firm projekt przez pracowników był uważany za profesjonalny ponieważ był kupiony Oracle oraz licencja na jakiś przestarzały serwer. Kuriozalne, im więcej wydasz pieniędzy na licencję tym bardziej projekt jest profesjonalny. Klient dopiero wydając masę pieniędzy na licencję ma prawo powiedzieć, że kupił profesjonalny, będący na wysokim poziomie, produkt.\nZainspirowany tym wszystkim sięgnąłem do słownika języka polskiego PWN w poszukiwania hasła profesjonalny:\nprofesjonalny 1. będący specjalistą w jakiejś dziedzinie 2. uprawiany jako zawód 3. będący na wysokim poziomie w danej dziedzinie 4. spełniający wymagania profesjonalistów\nDefinicja słownikowa nie wspomina nic o pieniądzach, ale dodajmy ją w myśl pierwszego, zacytowanego zdania: 1. Jeśli chcesz być specjalistą w jakiejś dziedzinie musisz korzystać z komercyjnych rozwiązań. 3. Wysoki poziom w danej dziedzinie osiągniesz korzystając tylko z komercyjnych produktów. 4. Produkt jest profesjonalny jeśli spełnia wymagania profesjonalistów, a jednym z kryteriów doboru tego narzędzia zgodnie z punktem 1 jest płatność.\nCzy zgadzacie się z takimi założeniami? Ja - w ogóle. Nie jestem maniakiem Open Source ani fanatykiem wolnego oprogramowania. Nie jestem też nadmiernym zwolennikiem komercyjnych rozwiązań, ale to co powinno być kluczowe dla każdego programisty a tym bardziej firmy świadczącej usługi programistyczne to szukanie skutecznego rozwiązania problemu a nie wydania pieniędzy.\nReasumując, moje zdanie to:\nNie wszędzie pasuje OSS. Nie wszędzie konieczne są rozwiązania komercyjne. Nie zawsze nabycie produktu rozwiązuje wszystkie problemy. Czasami rodzi też nowe. Warto zwrócić uwagę na to, że producenci oprogramowania czasami mamią i zarzucają nas całą masą marketingu, hasłami i wszelakimi buzzworld typu SOA, AJAX itp. podczas gdy rozwiązania oparte na OSS nie są reklamowane, a zdarza się sytuacje że mają funkcjonalność zbliżoną bądź nawet większą niż komercyjne.\nJakie jest, drodzy czytelnicy, wasze zdanie na temat - czy OSS może być profesjonalny? Co czyni produkt profesjonalnym?\n","permalink":"https://blog.dywicki.pl/2008/11/19/jesli-cos-nie-jest-komercyjne-nie-jest-tez-profesjonalne/","summary":"\u003cp\u003eOstatnimi czasy odbyłem kilka spotkań w większych i mniejszych firmach. To co mnie zastanowiło po jednej z ostatniej rozmów to zdanie:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eKorzystamy z profesjonalnych narzędzi takich jak \u003ca href=\"http://www.tibco.com/\"\u003eTibco\u003c/a\u003e, \u003ca href=\"http://www.softwareag.com/Corporate/products/wm/default.asp\"\u003eWebMethods\u003c/a\u003e, czasami \u003ca href=\"http://www.bea.com/framework.jsp?CNT=index.htm\u0026amp;FP=/content/products/aqualogic/service_bus/\"\u003eBea\u003c/a\u003e.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eCo łączy wymienione produkty? Otóż wszystkie są rozwiązaniami z klasy EAI i \u0026hellip; są płatne. Zdanie to usłyszałem w odniesieniu do \u003ca href=\"http://servicemix.apache.org\"\u003eApache Service Mix\u003c/a\u003e, którym się interesuję. Wniosek z tej wypowiedzi jaki udało mi się wysnuć od razu stał się tematem tej noty, czyli jeśli coś nie jest komercyjne nie jest też profesjonalne. Tak jakby OSS był gorszym rozwiązaniem od kupienia licencji na pudełkowe rozwiązanie od jakiegoś producenta.\u003c/p\u003e\n","title":"Jeśli coś nie jest komercyjne nie jest też profesjonalne"},{"content":"Log4j jest najpopularniejszą biblioteką do logowania dla Javy. Została ona wydana już jakiś czas temu i w chwili obecnej rozwija się znacznie wolniej niż kiedyś, warto jednak nadmienić że społeczność wciąż dostarcza nowych możliwości. Może najpierw o samej strukturze log4j.\nNajważniejsze elementy Log4j ma kilka składowych:\nAppender Layout Category Dzisiaj skupię się tylko na dwóch pierwszych. Appender jest odpowiedzialny za zapis bądź wysyłanie komunikatów do wybranego miejsca podczas gdy Layout konwertuje wpis do określonego formatu.\nZ najciekawszych Appenderów wymienię\nRollingFileAppender rotuje logi do określonego rozmiaru, po osiągnięciu np 10mb kopiuje stary plik zgodnie ze schematem i zaczyna zapisywać do nowego.\nDailyRollingFileAppender zachowuje się podobnie jak wyżej wymieniony z tym, że umożliwia zapis z podziałem na lata, miesiące, dni czy nawet minuty.\nSyslogAppender, który wysyła komunikaty do Sysloga\nLF5Appender wyświetlający logi w okienku tworzonym przy pomocy Swinga.\nSMTPAppender wysyłający maile z komunikatami. Jeśli się go źle skonfiguruje gwarantowane zapchanie skrzynki ;-)\nNagiosAppender przesyłający komunikaty do Nagiosa, narzędzia służącego do monitorowania.\nMając już appender, który wie gdzie zapisywać wypada powiedzieć Log4j też co powinien zapisywać.\nHTMLLayout produkujący tabelę HTML PatternLayout posiadający możliwość określenia \u0026ldquo;szablonu\u0026rdquo; wpisu. Więcej Layoutów można znaleźć w Javadocu Log4j.\nJako, że zdecydowanie najczęściej używa się PatternLayout dodam parę słów na temat tego co potrafi. We wzorze który będzie później użyty do stworzenia komunikatu możemy używać następujących wyrażeń:\n%c kategoria zdarzenia %C nazwa klasy z której zostało wysłane zdarzenie %d data zdarzenia (przykład: %d{HH:mm:ss,SSS} ) %m komunikat wysłany z aplikacji %n separator lini %p priorytet zdarzenia %r ilość milisekund, które zdążyły upłynąć od startu aplikacji %t nazwa wątku z którego zostało wysłane zdarzenie %x kontekst diagnostyczny powiązany z wątkiem (wie ktokolwiek co to znaczy?) %% pojedynczy znak % %M nazwa metody z której zostało wysłane zdarzenie (uwaga, bardzo wolne) %L numer linii z której zdarzenie pochodzi (uwaga, bardzo wolne) %F nazwa pliku z którego pochodzi zdarzenie (uwaga, bardzo wolne) %l informacja o wywołującym zdarzenie (uwaga, bardzo wolne, wskazuje na lokalizację z naszego kodu) Przykłady modyfikatorów:\n%20c dodaje spacje z lewej strony jeśli nazwa kategorii jest krótsza niż 20 znaków %-20c dodaje spacje z prawej strony jeśli nazwa kategorii jest krótsza niż 20 znaków %.30c przycina kategorię pozostawiając ostatnie 30 znaków %20.30c wypełnia z lewej strony nazwę kategorię spacjami do 20 znaków oraz przycina początkowe znaki jeżeli jest dłuższa on 30 znaków %-20.30c analogicznie jak wyżej, z tym że znaki zostaną dodane z prawej strony. Ze swojej strony polecam używanie formatu np %-20.20, co zagwarantuje że element będzie miał zawsze 20 znaków. Jeśli pozostawimy -20.30 to element będzie miał 20 znaków jeśli kategoria jest zbyt krótka a 30 gdy będzie za długa Przykład konfiguracji Log4j można konfigurować na kilka sposobów. Programowo, przez plik properties oraz konfigurację XML. Zdecydowanie najpopularniejszy jest plik properties. Jego użycie jest banalnie proste. Włączamy log4j.jar do tak by był on dostępny w classpathu, a następnie tworzymy plik log4j.properties, który domyślnie jest poszukiwany przez bibliotekę jeśli nie została przekazana żadna konfiguracja. Aby jednak to się stało nasz kod musi spróbować wysłać jakąś wiadomość do Log4j.\n[sourcecode lang=\u0026ldquo;properties\u0026rdquo;] log4j.rootLogger DEBUG, out\n# loggery log4j.logger.org.springframework INFO log4j.logger.org.apache.activemq INFO log4j.logger.org.apache.activemq.spring WARN log4j.logger.org.apache.servicemix DEBUG, stdout\n#appendery log4j.appender.stdout org.apache.log4j.ConsoleAppender log4j.appender.stdout.layout org.apache.log4j.PatternLayout log4j.appender.stdout.layout.ConversionPattern %d{ABSOLUTE} | %-5p | %t | %c | %m%n\nlog4j.appender.out org.apache.log4j.DailyRollingFileAppender log4j.appender.out.DatePattern \u0026lsquo;-\u0026lsquo;yyyy-MM-dd\u0026rsquo;.log\u0026rsquo;\u0026quot;/\u0026gt; log4j.appender.out.layout org.apache.log4j.PatternLayout log4j.appender.out.layout.ConversionPattern %d{ABSOLUTE} | %-5p | %t | %c | %m%n log4j.appender.out.file E:/fuse-esb/data/log/servicemix [/sourcecode]\nZałożenie powyższej konfiguracji jest następujące. Domyślny poziom logowania jest ustawiony na DEBUG a komunikaty są zapisywane do pliku (rootLogger). Zdefiniowane są dwa appendery stdout oraz out. Pierwszy jest użyty tylko dla paczki org.apache.servicemix. Pozostałe loggery mają określony tylko poziom logowania. Pliki z logami będą dzielone na dni, także w lokalizacji E:/fuse-esb/data/log/ po 3 dniach działania od 13 do 15 października będziemy mieli 3 pliki:\nservicemix - logi z bierzącego dnia servicemix-2008.10.14.log - logi z 14 października servicemix-2008.10.13.log - logi z 13 października Mam nadzieję że od dzisiaj Log4j będzie Wam drodzy czytelnicy mówił więcej i prościej. Jeśli są jakieś kwestie które pozostają niewyjaśnione - proszę pytać.\n","permalink":"https://blog.dywicki.pl/2008/10/15/log4j-przejrzyste-komunikaty/","summary":"\u003ca href=\"http://logging.apache.org/log4j/\"\u003eLog4j\u003c/a\u003e jest najpopularniejszą biblioteką do logowania dla Javy. Została ona wydana już jakiś czas temu i w chwili obecnej rozwija się znacznie wolniej niż kiedyś, warto jednak nadmienić że społeczność wciąż dostarcza nowych możliwości. Może najpierw o samej strukturze log4j.","title":"Log4j, przejrzyste komunikaty"},{"content":"Pamiętam, jak jakiś już czas temu, kiedy pracowałem w PZU dyskutowałem z kolegą na temat Springa. Obaj podziwialiśmy wówczas jego jakość. Chyba wszyscy ludzie którzy mieli styczność z tym narzędziem przyznają, że jest to na prawdę porządnie napisany kawałek kodu. Połączenie bardzo dobrej dokumentacji oraz duża społeczność sprzyjały cały czas Springowi w odnoszeniu kolejnych sukcesów.\nDo dnia 17 września, kiedy to SpringSource ogłosiło zmianę zasad - i poniekąd konieczność wykupywania subskrypcji. Wiadomość ta zaiste zelektryzowała społeczność.\nTrudno poniekąd dziwić się zmianom w SpringSource ponieważ w czerwcu tego roku do grona właścicieli dołączyła kolejna spółka typu venture capital. Chyba podobnie tak jak w przypadku przejęcia BEA przez Oracle konieczne było odbicie sobie kosztów podnosząc ceny. Póki co Spring Application Platform nie ma wielkiego przebicia na rynku serwerów, ponieważ jest (chyba?) rozwiązaniem zbyt rewolucyjnym, na wsparcie wielu klientów się nie decydowało, szkolenia organizuje nie tylko SpringSource ale też cała masa innych firm, więc de-facto źródeł dochodów producent Springa nie miał wielu. Po prostu ilość użytkowników tego frameworka nie przekładała się w widoczny sposób na zasobność kiesy. Inwestorzy wykorzystując popularność narzędzia chcą skierować wielki strumień pieniędzy prosto do swojej kieszeni. Oczywiście pieniądze te nie będą przeznaczone tylko na honoraria ale również na dalszą ekspansję na rynku. Już teraz wiadomo, że Spring 3.0 będzie zgodny ze specyfikacją EJB 3.1, co zwiastuje koniec wojny EJB vs Spring. Pod w/w linkiem jest też kilka komentarzy na temat zmian:\nTo smutne, ale kończę wierzyć marzyć, pora spojrzeć na wszystko trzeźwo, standardy nie są złe, są oparte na idei Springa, dzięki Bogu.\nNie będę płacił myta za korzystanie z kontenera DI. Jeśli będię potrzebował portfolio SpringSource pomyślę czy zapłacić, ale żebym musiał płacić za sam kontener DI? Nie ma mowy, wolę poczekać na \u0026ldquo;STANDARD\u0026rdquo; EJB 3.1 albo przesiąść się na Guice czy nawet kontener DI z Tapestry 5\nJak ktoś już powiedział kontener DI Springa nie jest jakimś nadzwyczajnym wynalazkiem, może powinniśmy zacząć używać Guice bądź nadchodzącego EJB 3.1?\nPi** SpringSource!! TO wszystko co powiem. Jesteśmy społecznością i to my pomogliśmy wyrosnąć Spinrgowi a traz oni wbijają nam nóż w plecy. Witam EJB 3.1 jako standard i myślę, że powinienem zacząć poważnie myśleć o Seamie bądź innej alternatywie, może Guice? SpringSource tylko się pogrąża. Panie Rod, miałem Cię za naszego zbawiciela ale okazałeś się takim samym du*** jak wszystko w Open Source\nNiestety, sterowany marketingiem szum (\u0026ldquo;the de facto standard in enterprise Java\u0026rdquo;) wokół Springa w końcu dobiegł końca. Świetnie!\nWięcej opinii znajdziecie jeszcze na The Server Side: New Spring maintenance policy.\nMoim skromnym zdaniem Nie pisał bym o tym wszystkim gdybym nie miał na to własnego zdania. Oczywiście szkoda, że losy Springa teraz idą w kierunku niezbyt sprzyjającym dla większości z nas. Z drugiej jednak strony gwarancja łatania dziur w celu zapewnienia stabilności działania aplikacji produkcyjnych jest kusząca i odciąża developerów. Jakkolwiek nie ma tu już równowagi, ponieważ wg. nowych założeń albo płacisz i masz wszystkie poprawki albo nie płacisz i masz tylko główne wydania (major releases). Czy znajdzie się ktoś kto zacznie rozwijać alternatywę dla Springa?\nNie chodzi mi tu o sam kontener DI bo zdaję sobie doskonale sprawę z tego, że Spring już od bardzo dawna przestał być tylko nośnikiem DI. Masa modułów - wspierających pracę z bazami danych, zarządzanie transakcjami, moduły do JMS, web services, EJB czy nawet integracji. To wszystko miało swoich nabywców. Osobiście zmiana ta średnio mi odpowiada, ponieważ dosłownie zmusza do wykupienia wsparcia (wyobraża sobie ktoś korzystanie ze Springa tylko w wersjach 2.5, 2.0, 1.2, 1.1, 1.0?). W tej chwili nie ma żadnego zastępnika dla Springa i jego inwestorzy doskonale sobie z tego zdają sprawę. Po wejściu EJB 3.1 wszystko się rozmyje, a póki co jest bardzo dobra okazja do łowienia klientów.\nModel licencjonowania w przypadku Service Mixa jest jasny - jest za darmo. Ma dokumentację jaką ma, ma dziury, są z nim oczywiście problemy, ale Iona na jego bazie dostarcza produkt i wsparcie do niego. Nikt nie ma obowiązku korzystania z usług Iony, w ogóle nie musi o jej istnieniu wiedzieć. Jeśli ktoś będzie potrzebował wsparcia to je i tak przecież kupi!\nRóżnicą i to znaczną są wyraźne ambicje SpringSource by walczyć o miano pretendenta na rynku serwerów z IBM i BEA. Problem w tym, że w tym momencie jest on pozbawiony silnego argumentu, jakim był kod Open Source, w obecnej formie jest to po prostu wypaczenie idei otwierania kodu. Społeczność zdaje się, że jest zniesmaczona, ale cóż zrobić.\nZa jakość się płaci i nauczka jest taka że w przypadku Springa przychodzi nam płacić po znacznie dłuższym czasie.\n","permalink":"https://blog.dywicki.pl/2008/09/28/spring-commercial-source-replaces-open-source/","summary":"\u003cp\u003ePamiętam, jak jakiś już czas temu, kiedy pracowałem w \u003ca href=\"http://pzu.pl\"\u003ePZU\u003c/a\u003e dyskutowałem z kolegą na temat \u003ca href=\"http://www.springframework.org/\"\u003eSpringa\u003c/a\u003e. Obaj podziwialiśmy wówczas jego jakość. Chyba wszyscy ludzie którzy mieli styczność z tym narzędziem przyznają, że jest to na prawdę porządnie napisany kawałek kodu. Połączenie bardzo dobrej dokumentacji oraz duża społeczność sprzyjały cały czas Springowi w odnoszeniu kolejnych sukcesów.\u003c/p\u003e\n\u003cp\u003eDo dnia 17 września, kiedy to \u003ca href=\"http://springsource.com\"\u003eSpringSource\u003c/a\u003e ogłosiło zmianę zasad - i poniekąd \u003ca href=\"http://www.springsource.com/node/558\"\u003ekonieczność wykupywania subskrypcji\u003c/a\u003e. Wiadomość ta zaiste zelektryzowała społeczność.\u003c/p\u003e\n","title":"Spring \"Commercial\" Source zastępuje Open Source"},{"content":"W nawiązaniu do poprzedniej noty o CXFie, którą napisałem jakiś czas temu, gonię aby uzupełnić brak konfiguracji klienta. Sam proces jest bardzo zbliżony do tworzenia klienta w oparciu o XFire. Nie jest wymagana duża ilość kodu Javy, a w zasadzie tylko dwa pliki XML (client.xml, myservice.xml).\nPierwszy z nich odpowiada za wczytanie wymaganych rozszerzeń CXFa oraz definicję bazowej konfiguracji fabryki z interceptorami. W interceptorach możemy skonfigurować logowanie, obsługę załączników czy standardów WS-Security etc. Wszystkie te ustawienia będą dziedziczone, a fabryki docelowych usług będą dodawać tylko adres, do odpytywania. Na koniec bean klienta będzie miał określony autowire by nie przekazywać mu wszystkich własności.\nOto najważniejsze wstawki kodu oraz ich opis: [sourcecode language=\u0026ldquo;xml\u0026rdquo;]org.code-house.cxfparent1.0-SNAPSHOT4.0.0org.code-house.cxfclient1.0-SNAPSHOTCode House.Org - CXF - Clientlog4jlog4j1.2.12org.code-house.cxfcontract1.0-SNAPSHOTorg.apache.cxfcxf-rt-frontend-jaxwsorg.apache.cxfcxf-rt-transports-httporg.apache.cxfcxf-rt-transports-http-jetty${code-house.cxf.version}org.springframeworkspring-core${code-house.spring.version}org.springframeworkspring-test${code-house.spring.version}testorg.springframeworkspring-beans${code-house.spring.version}org.springframeworkspring-core${code-house.spring.version}org.springframeworkspring-context${code-house.spring.version}[/sourcecode]\nDeskryptor nie jest zbyt złożony, istotny jest tylko kawałek z kontraktem, który jak wskazuje nazwa jest definicją używanych typów: [sourcecode language=\u0026ldquo;xml\u0026rdquo;]org.code-house.cxfcontract1.0-SNAPSHOT[/sourcecode]\nTeraz kolej na jedyną wstawkę Javy, która się pojawia w projekcie. Jest to zwykły bean, który będzie miał później wstrzykiwane obiekty pośredniczące w wywoływaniu usług.\n[sourcecode language=\u0026ldquo;java\u0026rdquo;]package org.code_house.cxf.client;\nimport org.code_house.services.maven.MavenArtifactType;\n/\\\\ \\* Klient usług Code-House. \\* \\* @author Łukasz Dywicki email \\* \\* $Id$ */ public class Client {\n/\\\\ \\* Usługa do obsługi wyszukiwania artefaktów Mavena. */ private MavenArtifactType maven;\n/\\\\ \\* Pobranie wartości pola maven. \\* \\* @return Wartość maven. */ public MavenArtifactType getMaven() { return maven; }\n/\\\\ \\* Ustawienie wartości pola maven. \\* \\* @param maven Nowa wartość pola maven. */ public void setMaven(MavenArtifactType maven) { this.maven = maven; } }[/sourcecode]\nResztę magii załatwia Spring: [sourcecode language=\u0026ldquo;xml\u0026rdquo;][/sourcecode]\nZgodnie ze wstawką w linii 20 konieczna jest jeszcze konfiguracja usługi. Sztuczka polega na użyciu części konfiguracji zdefiniowanej wcześniej - baseClientFactory. [sourcecode language=\u0026ldquo;xml\u0026rdquo;][/sourcecode]\nUstawienia, które mogą ulec zmianie, to znaczy użytkownik, hasło oraz adres usługi są wyodrębnione do pliku client.properties: [sourcecode language=\u0026ldquo;properties\u0026rdquo;] # Placeholdery dla kontekstow springa # Adresy uslug server.port = 8080 host = localhost org.code_house.cxf.service.maven http://${host}:${server.port}/webapp/services/maven\n# Autoryzacja org.code_house.cxf.user org.code_house.cxf.password [/sourcecode]\nNo i na koniec opcjonalny test, który odpytuje usługę: [sourcecode lang=\u0026ldquo;java\u0026rdquo;] package org.code_house.cxf.client; import org.code_house.services.maven.definition.ArtifactInfo; import org.code_house.services.maven.types.FindArtifactRequest; import org.code_house.services.maven.types.FindArtifactRespose; import org.springframework.test.AbstractDependencyInjectionSpringContextTests;\n/\\\\ \\* Proste wywołanie klasy klienta. \\* \\* @author Łukasz Dywicki email \\* \\* $Id$ */ public class MainTest extends AbstractDependencyInjectionSpringContextTests {\n/\\\\ \\* Wstrzyknięty klient. */ private Client client;\n@Override protected String[] getConfigLocations() { return new String[] {\u0026ldquo;classpath:client.xml\u0026rdquo;}; }\npublic void testOne() { FindArtifactRequest request = new FindArtifactRequest(); ArtifactInfo artifact = new ArtifactInfo(); artifact.setGroupId(\u0026ldquo;org.code_house.cxf\u0026rdquo;); artifact.setArtifactId(\u0026ldquo;contract\u0026rdquo;); request.setQuery(artifact);\nFindArtifactRespose respose = client.getMaven().findArtifact(request); System.out.println(respose.getDownloadURL()); }\n/\\\\ \\* Ustawienie wartości pola client. \\* \\* @param client Nowa wartość pola client. */ public void setClient(Client client) { this.client = client; }\n}[/sourcecode]\nTo by było na tyle. Cały działający kod projektu jest już zamieszczony przy poprzedniej nocie, paczka ze wszystkimi listingami gotowa do pobrania.\nTeraz chyba pora zacząć opisywać mechanizmy Springa. :)\n","permalink":"https://blog.dywicki.pl/2008/09/03/budowanie-klienta-uslugi-sieciowej-w-oparciu-o-apache-cxf/","summary":"\u003cp\u003eW nawiązaniu do \u003ca href=\"http://blog.dywicki.pl/2008/07/23/budowanie-uslugi-sieciowej-w-oparciu-o-apache-cxf/\"\u003epoprzedniej noty o CXFie\u003c/a\u003e, którą napisałem jakiś czas temu, gonię aby uzupełnić brak konfiguracji klienta. Sam proces jest bardzo zbliżony do tworzenia klienta w oparciu o XFire. Nie jest wymagana duża ilość kodu Javy, a w zasadzie tylko dwa pliki XML (client.xml, \u003cem\u003emyservice.xml\u003c/em\u003e).\u003c/p\u003e\n\u003cp\u003ePierwszy z nich odpowiada za wczytanie wymaganych rozszerzeń CXFa oraz definicję bazowej konfiguracji fabryki z interceptorami. W interceptorach możemy skonfigurować logowanie, obsługę załączników czy standardów WS-Security etc. Wszystkie te ustawienia będą dziedziczone, a fabryki docelowych usług będą dodawać tylko adres, do odpytywania. Na koniec bean klienta będzie miał określony \u003cstrong\u003eautowire\u003c/strong\u003e by nie przekazywać mu wszystkich własności.\u003c/p\u003e\n","title":"Budowanie klienta usługi sieciowej w oparciu o Apache CXF"},{"content":" Temat testów jednostkowych nie pojawiał się na tym blogu tak często jak PHP czy JAXB, jakkolwiek temat ten poruszałem w 2 notach - o testach oraz o singletonie.\nTych, którzy chcieliby dowiedzieć się więcej o testach na przykładzie JUnit i Javy zapraszam się do zapoznania z bardzo dobrą pozycją na temat testów jednostkowych, z którą miałem przyjemność się zetknąć.\nJUnit. Pragmatyczne testy jednostkowe w Javie to tłumaczenie książki Pragmatic Unit Testing in Java z serii The Pragmatic Programmers. Nie wspominam tu o tej książce jak i całej serii przypadkowo, ponieważ pragmatyzm jest główną domeną tego bloga.\nTytuł ten traktuje o rzeczy bardzo ważnej, jaką są bez wątpienia testy jednostkowe. Nie jest to sucha referencja opisująca możliwości JUnit ale przewodnik i poradnik - czyli nie tylko o tym czym testować ale po co i w jaki sposób to robić. Sam język w którymś momencie schodzi na drugi plan a ważna staje się na prawdę idea i szczytny cel, jakim jest wykluczanie błędów przed wdrożeniem aplikacji, tak by nie musiał się o nich w ogóle dowiadywać klient.\nW książce znajduje się wiele przykładów i rozważań, pisanych lekkim językiem, całość czyta się lekko i przyjemnie. Jest to bodajże najczęściej wypożyczana pozycja z mojej domowej biblioteczki. W każdej kolejnej pracy (a troszkę ich w międzyczasie było :)) staram się komuś polecić tą pozycję i odzew jest zawsze pozytywny, co dowodzi, że praca autora włożona w tytuł była bardzo przemyślana. Z najważniejszych elementów, które zostają w książce omówione należy wymienić definiowanie warunków brzegowych, wykorzystanie \u0026ldquo;obiektów imitacji\u0026rdquo; (ang. mock objects) z użyciem biblioteki Easy Mock oraz projektowanie kodu przyjaznego dla testów. Chyba wszyscy się ze mną zgodzą że są to elementy nieodzowne podczas tworzenia testów.\nNa zakończenie przytoczę dwa akapity które najbardziej zapamiętałem z całej pozycji.\nGdyby architekci sprawdzali mosty w taki sam sposób jak większość programistów to na świeżo wybudowanym moście środkiem jezdni przejeżdżałby jeden malutki samochód w ciepły dzień, bez jakiegokolwiek wiatru i innych zakłóceń atmosferycznych. (o warunkach brzegowych)\nZ testami jednostkowymi jest jak ze strzyżeniem trawnika. Jeśli jest on dobrze utrzymany to jego uporządkowanie nie jest zadaniem trudnym. Jeśli jednak nasz trawnik zarośnie (w projekcie nie będzie testów jednostkowych) i pojawią się chwasty (błędy) to jego uporządkowanie (wprowadzenie testów) będzie zadaniem bardzo czasochłonnym. (o filozofii testowania)\nKoniec końców, siejąc pragmatyczną propagandę na rzecz testów :), zachęcam wszystkich do zapoznania się z opisywaną książką. Dla praktyków zawiera ona kilka trafnych spostrzeżeń a dla laików będzie znakomitym sposobem na wdrożenie się w temat testów.\nSzkic tej noty czekał na publikację ponad rok, stąd może być on troszkę nieskładny.\n","permalink":"https://blog.dywicki.pl/2008/09/02/junit-pragmatyczne-testy-jednostkowe-w-javie/","summary":"\u003cp\u003e\u003ca href=\"http://blog.dywicki.pl/wp-content/uploads/2008/09/junit.jpg\"\u003e\u003cimg alt=\"Okładka książki\" loading=\"lazy\" src=\"http://blog.dywicki.pl/wp-content/uploads/2008/09/junit-209x300.jpg\"\u003e\u003c/a\u003e\nTemat testów jednostkowych nie pojawiał się na tym blogu tak często jak \u003ca href=\"http://blog.dywicki.pl/category/php\"\u003ePHP\u003c/a\u003e czy \u003ca href=\"http://blog.dywicki.pl/category/jaxb\"\u003eJAXB\u003c/a\u003e, jakkolwiek temat ten poruszałem w 2 notach - \u003ca href=\"http://blog.dywicki.pl/2007/04/22/testy-jednostkowe/\"\u003eo testach\u003c/a\u003e oraz \u003ca href=\"http://blog.dywicki.pl/2007/02/01/singleton/\"\u003eo singletonie\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eTych, którzy chcieliby dowiedzieć się więcej o testach na przykładzie \u003ca href=\"http://junit.org\"\u003eJUnit\u003c/a\u003e i Javy zapraszam się do zapoznania z bardzo dobrą pozycją na temat testów jednostkowych, z którą miałem przyjemność się zetknąć.\u003c/p\u003e\n","title":"JUnit. Pragmatyczne testy jednostkowe w Javie"},{"content":"Od jakiegoś czasu w pracy do tworzenia usług sieciowych korzystam z Apache CXF. Jako że biblioteka jest stosunkowo nowa i nie najlepiej udokumentowana postanowiłem przedstawić na blogu jak wygląda proces tworzenia.\nCXF jest połączeniem kilku bibliotek - YOKO, Celtixa oraz XFire. Każda z nich wcześniej realizowała pewien fragment obecnej funkcjonalności CXF - YOKO obsługuje Corbę a XFire usługi sieciowe. Obecne CXF jest gotowy do używania \u0026ldquo;produkcyjnego\u0026rdquo;, ponieważ niedawno wyszedł z fazy inkubacji. :)\nArchitektura CXF ma dosyć elastyczną budowę. Zgodnie z dokumentacją można wyróżnić najważniejsze składowe:\nBus, jest trzonem architektury CXF w którym definiuje i konfiguruje się rozszerzenia. Messaging \u0026amp; Interceptors, zapewniają niskopoziomowy dostęp do komunikatów oraz warstwę na której jest oparta większość funkcjonalności. Front ends, frontendy są interfejsami programistycznymi do tworzenia usług (np. JAX-WS). Services, usługi zapewniają model wraz z opisem Bidings, element ten jest odpowiedzialny za obsługę konkretnego protokołu (SOAP, REST, Corba etc). Transports, warstwa abstrakcji ułatwiająca zmianę sposobu transportu do/z usług. Markieting :) CXF oferuje infrastrukturę konieczną do budowania usług, z najważniejszy zalet można wymienić:\nWsparcie dla różnych protokołów. Obsługa standardów WS-*, tj. WS-Addressing, WS-Security, WS-ReliableMessaging, oraz WS-Policy. Obsługa wielu transportów. Dołączane data-bindingi (np JAXB, Aegis). Jasny podział front endów takich jak JAX-WS od najważniejszego kodu. Wysoka wydajność. Możliwość osadzania w różnych środowiskach. Z dodatkowych zalet, mogę dodać - bardzo łatwą integrację ze Springiem.\nPierwsza usługa Do budowania projektów będziemy używać Mavena. Implementowana usługa będzie oparta o frontend JAX-WS z ręcznie pisanym deskryptorem usługi (WSDL first). Jakkolwiek w bardzo prosty sposób można odwrócić kolejność i przy pomocy pluginu CXF do Mavena wygenerować deskryptor.\nStruktura projektów będzie następująca:\nparent\nRodzic projektu ze zdefiniowanymi wersjami bibliotek i raportami.\ncontract\nDefinicje używane zarówno przez klienta jak i serwer - WSDL oraz konfiguracja pluginu CXF.\nclient\nProsta biblioteka kliencka oparta o mechanizmy CXFa (JaxWSProxyFactoryBean).\nserver\nPrzykładowa implementacja usługi z bardzo prostym wykorzystaniem Springa.\nwebapp\nKonfiguracja transporty CXF - w tym konkretnym przypadku servletu CXF.\nParent Poniżej znajduje się deskryptor projektu, który jest używany do budowania całości. [sourcecode lang=\u0026ldquo;xml\u0026rdquo;] 4.0.0org.code-house.cxfparentCode House.Org - CXF1.0-SNAPSHOTpomRodzic projektu, zawiera wszystkie moduly.cxf-clientcxf-contractcxf-servercxf-webapp2.1.12.1.32.5.4maven-compiler-plugin1.5 1.5org.apache.cxfcxf-rt-frontend-jaxws${code-house.cxf.version}org.apache.cxfcxf-rt-transports-http${code-house.cxf.version}org.apache.cxfcxf-rt-transports-http-jetty${code-house.cxf.version}com.sun.xml.bindjaxb-impl${code-house.jaxb.version}javax.xml.bindjaxb-api2.1 [/sourcecode]\nContract Zgodnie z tym, co napisałem wcześniej - przyjąłem podejście, że WSDL jest pisany ręcznie, głównie dlatego że dla większych projektów można w prosty sposób narzucić jakąś organizację i podział plików, z których są następnie generowane źródła.\nNajistotniejsza wstawka, która powinna znaleźć się w pomie: [sourcecode lang=\u0026ldquo;xml\u0026rdquo;] org.apache.cxfcxf-codegen-plugingenerate-sources${basedir}/target/jaxws ${basedir}/src/main/resources/maven.wsdl -quietwsdl2java [/sourcecode]\nPo dodaniu tej wstawki do sekcji build/plugins możemy przejść do tworzenia deskryptora usługi. W moim przypadku przyjąłem następujący podział:\nmaven.wsdl - definicje metod oraz komunikatów w rozumieniu WSDL (messages). Można z powodzeniem wyłączyć z tego pliku same koperty i pozostawić metody a to co potrzebne włączyć dyrektywą wsdl:import. types.xsd - typy używane do komunikacji - zazwyczaj pary request+response używane bezpośrednio w definiowaniu elementów wsdl:part. definition.xsd - definicje typów złożonych, niezależnych od usług, tj. opis domain-modelu z którym usługa pracuje. Każdy z tych plików ma inną przestrzeń nazw.\nmaven.wsdl [sourcecode lang=\u0026ldquo;xml\u0026rdquo;]\n[/sourcecode]\ntypes.xsd [sourcecode lang=\u0026ldquo;xml\u0026rdquo;]\n[/sourcecode]\ndefinition.xsd [sourcecode lang=\u0026ldquo;xml\u0026rdquo;]\n[/sourcecode]\nPo odpaleniu polecenia mvn:install powinniśmy otrzymać w konsoli fragment podobny do tego: [sourcecode] [INFO] [cxf-codegen:wsdl2java {execution: default}] [/sourcecode] Jest to informacja, że plugin CXF został poprawnie skonfigurowany i uruchomiony.\nSerwer Sercem naszej usługi jest oczywiście jej implementacja dlatego też nie możemy obejść się bez niej. :) Projekt ten ma tylko dwie zależności - contract oraz artefakt cxf-rt-frontend-jaxws.\nKonfiguracja serwera odbywa się w oparciu o springa: [sourcecode lang=\u0026ldquo;xml\u0026rdquo;]\n[/sourcecode]\nSerwer zawiera w zasadzie niewiele kodu, oto i on: [sourcecode lang=\u0026ldquo;java\u0026rdquo;] package org.code_house.services.maven;\nimport java.net.URISyntaxException;\nimport javax.jws.WebService;\nimport org.code_house.services.maven.definition.ArtifactInfo; import org.code_house.services.maven.types.FindArtifactRequest; import org.code_house.services.maven.types.FindArtifactRespose;\n/\\\\ \\* Implementacja usługi. */ @WebService(serviceName = \u0026ldquo;MavenService\u0026rdquo;, endpointInterface = \u0026ldquo;org.code_house.services.maven.MavenArtifactType\u0026rdquo;, targetNamespace = \u0026ldquo;http://code-house.org/services/maven\u0026quot; ) public class MavenArtifactTypeImpl implements MavenArtifactType {\n/\\\\ \\* Bean zawierający implementację logiki biznesowej. */ private MavenSearchService service;\npublic FindArtifactRespose findArtifact(FindArtifactRequest request) { ArtifactInfo info = request.getQuery(); // pobranie struktury przekazanej od klienta\n// sformuowanie odpowiedzi FindArtifactRespose response = new FindArtifactRespose(); try { response.setDownloadURL(service.find(info).toURI().toString()); } catch (URISyntaxException e) { throw new RuntimeException(e); } return response; }\n/\\\\ \\* Ustawienie wartości pola service. \\* \\* @param service Nowa wartość pola service. */ public void setService(MavenSearchService service) { this.service = service; } } [/sourcecode]\nDodatkowy kod, który nie jest konieczny do implementacji usługi to definicja interfejsu MavenSearchService. Dzięki zastosowaniu takiego rozwiązania można w prostszy sposób testować działanie usługi poprzez przekazywanie jej mocka stworzonego np. przy pomocy easy mocka. Kod takiego testu pominąłem ze względu na to, że notka i tak już jest za długa w tym momencie a jesteśmy ledwo w połowie drogi. :)\nPrzykładowa implementacja wcześniej wspomnianego intefejsu nie zawiera żadnej logiki i zawsze zwraca tą samą wartość. [sourcecode lang=\u0026ldquo;java\u0026rdquo;] package org.code_house.services.maven;\nimport java.net.MalformedURLException; import java.net.URL;\nimport org.code_house.services.maven.definition.ArtifactInfo;\n// Najprostsza implementacja tylko po to żeby sprawdzić działanie usługi public class DummyMavenSearchServiceImpl implements MavenSearchService {\npublic URL find(ArtifactInfo info) { try { return new URL(\u0026ldquo;http://repo1.maven.org/maven2/org/apache/apache/4/apache-4.pom\u0026quot;); } catch (MalformedURLException e) { throw new RuntimeException(e); } }\n} [/sourcecode]\nZanim odpalimy serwer konieczna będzie jeszcze jedna rzecz - konfiguracja transporu, w naszym przypadku servletu CXF.\nWebapp Webapp posiada bezpośrednie zależności do 2 artefaktów CXFa: cxf-rt-transports-http oraz cxf-rt-bindings-http. Druga jest opcjonalna, bez niej CXF nie będzie wyświetlał dostępnych usług w postaci tabelki html.\nPrzydatna może być wtyczka jetty (sekcja build/plugins), która pozwala na uruchomienie aplikacji bez konieczności instalowania kontenera servletów: [sourcecode lang=\u0026ldquo;xml\u0026rdquo;] org.mortbay.jettymaven-jetty-plugin6.1.1110808060000 [/sourcecode]\nOstatnia zależność odnosi się do implementacji usługi - czyli naszego artefaktu server. Najistotniejsze elementy konfiguracji webappa to web.xml oraz cxf-beans.xml.\nweb.xml Warto zauważyć w poniższym listingu fajną możliwość, którą daje nam Spring w postaci wildcardów określających położenie konfiguracji - w tym przypadku classpath:/module/*-context.xml. Oznacza to, że Spring przeskanuje wszystkie biblioteki od których zależy projekt i dołączy ich konfigurację do głownej, dzięki czemu będziemy mogli uzyskać bardziej modułową i elastyczną budowę aplikacji. Może Dynamic Modules to nie jest ale na codzień w zupełności wystarcza :).\n[sourcecode lang=\u0026ldquo;xml\u0026rdquo;] Maven Search Services :: WebappFrontend indeksera.contextConfigLocation /WEB-INF/security.xml\n/WEB-INF/cxf-beans.xml\n/WEB-INF/applicationContext.xml\nclasspath:/module/*-context.xml CXFServletorg.apache.cxf.transport.servlet.CXFServlet1CXFServlet/services/*org.springframework.web.context.ContextLoaderListener [/sourcecode]\ncxf-beans.xml Plik ten zawiera definicje konfiguracyjne CXFa. W poniższej formie włączana jest tylko część modułów CXF w celu zmniejszenia użycia zasobów. [sourcecode lang=\u0026ldquo;xml\u0026rdquo;]\n[/sourcecode]\nPozostałe pliki konfiguracyjne są praktycznie puste, ponieważ tyczą się obszarów niezwiązanych z tematem tego wpisu. Po tym wszystkim możemy uruchomić naszą aplikację poleceniem mvn jetty:run. Po wejściu na adres http://localhost:8080/webapp/services naszym oczom powinna ukazać się lista podobna do poniższej: Nie wiem niestety dlaczego CXF generuje zły adres usługi (pomijający mapowanie servletu) oraz ma problemy z wystawieniem WSDLa. Jakkolwiek i bez tego wszystko działa poprawnie - znaczy wywoływanie usług rzecz jasna. :)\nW tym momencie możemy uruchomić Soap UI i wykonać jedyną dostępną metodę - findArtifact.\nClient Ostatnim z elementów, który pozostał do omówienia jest klient. Niestety z racji na to, że ta nota już się wystarczająco rozrosła zrobię to w kolejnym wpisie. Mam nadzieję, że nota ta nieco ułatwi przyszłym użytkownikom CXFa jego poznanie. :) Dla tych, którym nie chce się wpisywać tego wszystkiego w edytorze zamieszczam źródła razem z działającym klientem. Projekty nie są nadzwyczajnie dopieszczone, ale w zupełności wystarczą do startu. Znajduje się też tam w pełni działający klient stworzonej usługi. Pozdrawiam i życzę miłej zabawy!\n","permalink":"https://blog.dywicki.pl/2008/07/23/budowanie-uslugi-sieciowej-w-oparciu-o-apache-cxf/","summary":"\u003cp\u003eOd jakiegoś czasu w pracy do tworzenia usług sieciowych korzystam z \u003ca href=\"http://cxf.apache.org\"\u003eApache CXF\u003c/a\u003e. Jako że biblioteka jest stosunkowo nowa i nie najlepiej udokumentowana postanowiłem przedstawić na blogu jak wygląda proces tworzenia.\u003c/p\u003e\n\u003cp\u003eCXF jest połączeniem kilku bibliotek - \u003ca href=\"http://cwiki.apache.org/YOKO/\"\u003eYOKO\u003c/a\u003e, \u003ca href=\"http://celtix.objectweb.org/\"\u003eCeltixa\u003c/a\u003e oraz \u003ca href=\"http://xfire.codehaus.org/\"\u003eXFire\u003c/a\u003e. Każda z nich wcześniej realizowała pewien fragment obecnej funkcjonalności CXF - YOKO obsługuje Corbę a XFire usługi sieciowe. Obecne CXF jest gotowy do używania \u0026ldquo;produkcyjnego\u0026rdquo;, ponieważ niedawno wyszedł z fazy inkubacji. :)\u003c/p\u003e\n","title":"Budowanie usługi sieciowej w oparciu o Apache CXF"},{"content":"Jakiś czas temu, jeszcze podczas pracy w poprzedniej firmie przypadło mi zadanie podpięcia się pod magistralę usług opartą o Apache Service Mix (SMX). Był to wówczas dla mnie temat zupełnie nowy, ba nawet nie wiedziałem z czym to się je. :) Koniec końców jednak podpięcie pod ESB (Enterprises Service Bus) nie było w ogóle trudne. Po jakimś czasie i drobnych przetasowaniach na płaszczyźnie zawodowej zająłem się SMX-em nie jako klient magistrali a osoba implementująca usługi na szynie a ten wpis jest drobną przeróbką prezentacji, którą przygotowałem w pracy.\nCzym jest ESB Jednoznaczne określenie terminu ESB nie jest łatwe, ponieważ wokół tego tematu rozpętana została burza marketingowa. Jedni uważają je za oś SOA (Service Oriented Architecture) inni jako zło konieczne w dużych instytucjach.\nDlatego pomijając teorię przejdźmy do najistotniejszych cech, jakie oferuje ESB, niezależnie od producenta oraz osoby definiującej pojęcie. Sam nie chciałbym wdawać się w dyskusję na temat postrzegania i ESB i SOA.\nŹródło - CodePlex\nNa załączonym wyżej obrazku widać typową strukturę logiczną w oparciu o ESB. Z lewej strony mamy komercyjne rozwiązanie – MQ Series firmy IBM, dalej idąc dołem, widzimy bazę danych, serwer pocztowy a na końcu mainframe. U góry natomiast pojawiają się klienci.\nCiąg dalszy Na bazie tego obrazku można powiedzieć co nieco o tym, czym owa niebieska rurka symbolizująca ESB jest:\nJest to z pewnością centralny rejestr usług firmy, dzięki któremu nie jest konieczne wiązanie aplikacji między sobą. Wiąże się je tylko i wyłącznie z jednym elementem – z magistralą. Kolejny ważny punkt, to most pomiędzy protokołami. W dobie, gdy wszyscy żyją już Web Services nie można zapomnieć o innych sposobach komunikacji – poczynając od poczciwej Corby po kolejki JMS czy też odczyt zasobów z FTP. Transformacja komunikatów to opcjonalna czynność, której nie widać na wyżej wymienionym obrazku. Jest ona wykonywana pod maską, wewnątrz magistrali, w zależności od potrzeb. W chwili gdy mamy komunikaty z systemu A do systemu B możemy wszystko sprowadzić do jednego uniwersalnego API danych. Inteligentny router informacji. Większość magistral ma coś wspólnego z pojęciem EIP, czyli Enterprise Integration Patterns. Jednym z tych wzorców jest Content Based Router, to znaczy w zależności od kształtu, zawartości komunikatu, nagłówka, fragmentu, czegokolwiek możemy odbijać komunikat w różnych kierunkach. Dalej z wzorców można wymienić Message Filter, Recipient List, Routing Slip, Wire Tap, Splitter, Resequencer itd. Integrator procesów biznesowych (bardziej marketingowo) – po pierwsze odwzorowanie usług magistrali do czynności biznesowych w organizacji a po drugie wsparcie dla procesorów reguł biznesowych ( WS-BPEL). Service Mix jako ESB Mając zestaw wyżej wymienionych cech możemy przejść do omówienia projektu Apache Service Mix. Może na początku kilka słów o tym, czym jest JBI, ponieważ pojawia się sam skrót, ale nie ma jego omówienia. Otóż, JBI w rozwinięciu oznacza Java Business Integration. Jest to standard przyjęty w ramach Java Community Process w celu określenia norm budowania rozwiązań SOA (znów buzzword). Pomijając politykę wielkich korporacji oraz marketing przejdźmy do elementów, które standard ten określa: Źródło Open ESB Starter Kit\nTypy komponentów: Service Engine (SE) – backend do obsługi zapytań. Binding Components (BC) – frontend, do nasłuchiwania w danym standardzie. Shared Libraries (SL) – kod współdzielony przez w/w komponenty. Service Assembly (SA) – zbiór usług rozumianych jako jedność przez magistralę (zwykle para BC+SE). Normalized Message Router – jest to serce rozwiązania opartego o JBI, ponieważ w nim są transportowane komunikaty. To on zapewnia przepływ informacji z komponentów bindujących do silników. Message Exchange Patterns – w oparciu o definicję dla SOAP JBI przewiduje następujące typy komunikatów: In-Only – tylko wejście, usługa nie zwraca żadnej odpowiedzi\nRebust In-Only – zwrócony zostanie status po obsłudze zapytania bądź wyjątek.\nIn-Out – standardowa obsługa wejście-wyjście.\nIn Optional-Out – wejście z niewiążącą (nieobowiązkową) odpowiedzią.\nDostępnych jest kilka implementacji JBI:\nOpen ESB Apache Service Mix FUSE ESB (na bazie Service Mix) Bostech Chain Builder ESB Mule JBoss ESB Fusion Middleware ActiveMatrix Service Bus Service Mix od środka Wewnątrz Service Mix jest spięciem kilku potężnych projektów, rozwijanych od dłuższego czasu, które zdobyły już renomę i popularność. Między innymi można wyróżnić:\nPierwszy z tych projektów to Spring Framework, rozwijany od bodajże 2000 roku, z powodzeniem rywalizujący z architekturami opartymi o EJB. Spring jest nie tylko mechanizmem konfiguracyjnym ale również zbiorem bardzo dobrych komponentów umożliwiających szereg operacji (bazy danych, JMS, przetwarzanie wsadowe, Web Services etc).\nDrugi, bardzo ważny projekt to Active MQ. Największa i najpopularniejsza otwarta implementacja standardu JMS. Jest on używany wewnątrz Service Mix-a jako transporter komunikatów w Normalized Message Router jak i do obsługi końcówek JMS.\n- Wymieniony nieco niżej pod-projekt Active MQ to Camel. Jest to szkielet przeznaczony do tworzenia reguł routingu. Wspiera różnorakie transporty (HTTP, JMS, JBI, MS MQ itp.).\nXBean jest fragmentem projektu Apache Geronimo (serwer aplikacyjny ze stajni Apache) przeznaczonym do tworzenia konfiguracji i zarządzania komponentami. Jest zbudowany w oparciu o Springa.\nApache CXF jest stosunkowo nowym projektem, który jest używany poprzez Service Mix w celu obsługi zapytań SOAP (chociaż możliwe jest użycie innego komponentu).\nApache ODE jest silnikiem reguł biznesowych w oparciu o WS-BPEL.\nJBoss Drools jest kolejnym procesorem reguł biznesowych. Może być użyty do routingu. Jest dostępny plugin pozwalający na łatwą pracę z tą technologią.\nMożliwości Service Mix Wyżej wymienione projekty są używane w Service Mix w celu uzyskania typowych funkcjonalności ESB:\nJMS, czyli obsługa kolejek\nWS-BPEL, obsługa reguł biznesowych\nWeb Services przy pomocy CXF jak i modułu JSR-181\nTransformacje XSLT oraz XQuery (w oparciu o Saxona)\nFile Drop to odczyt i zapis do plików dostępnych lokalnie jak i zdalnie ( FTP)\nObsługa protokołu XMPP pozwala na łatwą integrację z komunikatorami zbudowanymi w oparciu o Jabbera.\nDostęp do poczty przy pomocy modułu servicemix-mail\nKomponenty programowe:\nDają możliwość dopisania własnych \u0026ldquo;endpointów\u0026rdquo;, czyli implementacji docelowych usług bądź pośredników. Dodatkowe funkcjonalności (cache, rss, walidacja) Języki skryptowe (min Groovy)\nESB – dlaczego Open Source Wybór Service Mix-a nie był podyktowany przypadkiem. Jest to bowiem najpopularniejsze tego typu rozwiązanie z otwartym kodem źródłowym. Co więcej, nie jest to projekt rozwijany przez osoby bez doświadczenia, pozostawiony bez wsparcia. Otwarty kod ułatwia przede wszystkim adaptację tego rozwiązania do potrzeb organizacji a nie odwrotnie – organizacji do potrzeb magistrali. W razie potrzeb jesteśmy w stanie dopisać własne komponenty, obsługę mniej standardowych protokołów na bazie dostarczonych interfejsów czy to w Service Mix czy to w Camelu. Przyjęte standardy gwarantują ciągłość rozwoju oraz ułatwiają integrację ( JMX umożliwia łatwe podpięcie konsoli administracyjnej), podczas gdy J2EE Connector Architecture definiuje kontrakty (zarządzanie połączeniami, transakcjami, bezpieczeństwem). Nie bez znaczenia jest również koszt, jaki organizacja ponosi w przypadku zdecydowania się na otwarte rozwiązanie. Rozpoczęcie prac z Service Mix-em kosztuje 0 PLN. Każdy, bez rejestracji, podawania jakichkolwiek danych może pobrać źródła albo gotowe dystrybucje i uruchomić je na swoim komputerze. W chwili gdy istnieje takie zapotrzebowanie, organizacja posiada kompetencje i skromny budżet to taka konfiguracja początkowo jest optymalna. Z biegiem czasu gdy zaistnieje konieczność wsparcia czy szkoleń to są one oferowane przez firmę IONA, która jest zaangażowana w rozwój Service Mix-a.\nService Mix a bezpieczeństwo Większość, jeśli nie wszystkie rozwiązania w Javie, które wiążą się z kryptografią są oparte na JCA – Java Cryptography Architecture. Jest to zestaw interfejsów oraz ich implementacji zawierający implementację najpopularniejszych algorytmów kryptograficznych jak i API umożliwiające tworzenie własnych rozszerzeń ( JCE). Standard autoryzacji i uwierzytelniania w Javie to JAAS ( Java Authentication and Authorization Service). W oparciu o niego jest budowanych większość rozwiązań związanych z bezpieczeństwem. Nawet największe alternatywy takie jak Acegi Security (obecnie Spring Security posiadają adaptery integrujące je ze standardem). Przy użyciu dostępnych interfejsów możliwe jest dostarczenie własnej implementacji usługi obsługującej autoryzację bądź uwierzytelnianie użytkowników/systemów. Bezpieczeństwo usług sieciowych jest zależne od wybranego komponentu Service Mix. Pełne wsparcie dla WS-Security oferują komponenty zbudowane w oparciu o Apache CXF (szyfrowanie, podpisywanie komunikatów). Z innych standardów CXF wspiera także WS-Policy, WS-Addressing. Szyfrowane połączenia są łatwe do uzyskania przy pomocy komponentu servicemi-http. Dostępne zabezpieczenia na poziomie wirtualnej maszyny Javy to certyfikowanie (podpisywanie) kodu modułów oraz konfiguracja Security Managera (umożliwia wyłączenie dostępu do pakietów/klas/metod).\n","permalink":"https://blog.dywicki.pl/2008/06/22/apache-servicemix-open-source-es/","summary":"Jakiś czas temu, jeszcze podczas pracy w poprzedniej firmie przypadło mi zadanie podpięcia się pod magistralę usług opartą o \u003ca href=\"http://servicemix.apache.org\"\u003eApache Service Mix\u003c/a\u003e (SMX). Był to wówczas dla mnie temat zupełnie nowy, ba nawet nie wiedziałem z czym to się je. :) Koniec końców jednak podpięcie pod ESB (Enterprises Service Bus) nie było w ogóle trudne. Po jakimś czasie i drobnych przetasowaniach na płaszczyźnie zawodowej zająłem się SMX-em nie jako klient magistrali a osoba implementująca usługi na szynie a ten wpis jest drobną przeróbką prezentacji, którą przygotowałem w pracy.","title":"Apache ServiceMix, Open Source ESB"},{"content":"Jedną z bolączek JAXB jest problematyczna obsługa dat i czasów. Przypomnijmy sobie schemat użyty w jednej z wcześniejszych not.\n[sourcecode language=\u0026ldquo;xml\u0026rdquo;]\n\u0026lt;!-- Definicja książki \u0026ndash;\u0026gt; [/sourcecode]\nJak widać, każda książka ma określoną datę wydania. Jakkolwiek typ date z XML Schema nie jest bezpośrednio odwzorowany do java.util.Date czy też java.util.Calendar. W przypadku implementacji dostarczonej przez Sun mamy do czynienia z obiektami klasy XMLGregorianCalendarImpl. Rozwiązaniem problemu jest dodanie odpowiedniego adaptera. Możemy robić to ręcznie ale najwygodniejszym rozwiązaniem będzie skorzystanie z gotowca - klasy javax.xml.bind.DatatypeConverter. Jej użycie wygląda następująco: [sourcecode language=\u0026ldquo;xml\u0026rdquo;]\u0026lt; ?xml version=\u0026ldquo;1.0\u0026rdquo; encoding=\u0026ldquo;UTF-8\u0026rdquo;?\u0026gt; \u0026lt;/jaxb:globalBindings\u0026gt; \u0026lt;!-- tutaj deklaracje typów \u0026ndash;\u0026gt; [/sourcecode]\nPodobne rozwiązanie można wykorzystać na poziomie pojedyńczego elementu aby zmapować konkretny element do obiektu. Element annotation można również dodać do deklaracji simpleType (powiedzmy reprezentacja numeru pesel + proste restrykcje). [sourcecode language=\u0026ldquo;xml\u0026rdquo;] [/sourcecode]\nJAXB wygeneruje wówczas odpowiednie adnotacje dla tworzonych klas oraz adaptery, które odwołują się do metod wskazanych w atrybutach elementu javaType.\nW moim przypadku kod klasy Category wygląda następująco: [sourcecode language=\u0026ldquo;java\u0026rdquo;]package pl.dywicki.court;\n/\\\\ \\* Reprezentacja kategorii sprawy. \\* \\* @author Lukasz Dywicki luke@code-house.net **/ public class Category {\nprivate String name;\npublic Category(String value) { this.name = value; }\npublic static Category parse(String value) { return new Category(value); }\npublic static String print(Category value) { return value.name; } }[/sourcecode]\nJest to oczywiście maksymalnie uproszczony przykład. W konstruktorze bądź metodach, które konwertują string do obiektu możemy podpiąć walidację i bronić się wyjątkami przed nieprawidłowymi wartościami by uniemożliwić deserializację dokumentu.\n","permalink":"https://blog.dywicki.pl/2008/05/17/jaxb-2-zabawy-z-data-i-konwersja-typow/","summary":"Jedną z bolączek JAXB jest problematyczna obsługa dat i czasów. Przypomnijmy sobie schemat użyty \u003ca href=\"http://blog.dywicki.pl/?p=190\"\u003ew jednej z wcześniejszych not\u003c/a\u003e.","title":"JAXB 2, zabawy z datą i konwersją typów"},{"content":"Jakiś czas temu zmieniłem narzędzie do kolorowania składni z GeSHI na SyntaxHighlighter. Największa różnica to wykonanie. Starsza biblioteka parsuje wszystko po stronie serwera i pakuje to w HTML, nowsza jest uruchamiana z poziomu przeglądarki i kolorowanie odbywa się tuż po załadowaniu strony.\nOczywiście nie był bym sobą gdybym nie zmienił kolorowania składni na bardziej przyjazne, co oczywiście można zaobserwować we wcześniejszych notach. :) Dla zainteresowanych załączam - zmienione pliki. Zmodyfikowałem czcionkę z wygładzanej, na szorstkiego \u0026ldquo;Courier New\u0026rdquo;, jak i kolorowanie słów kluczowych zarówno w Javie jak i w XML.\nInstalacja - bajecznie prosta - skopiować pliki oraz zmienić nazwy na \u0026ldquo;garbate\u0026rdquo; (shBrushXml.js, shBrushJava.js). Całość bez problemów współpracuje z pluginem do Wordpressa.\nKlorowanie XML Kolorowanie Javy Arkusz CSS\n","permalink":"https://blog.dywicki.pl/2008/02/09/kolorowanie-skladni-w-syntaxhighlighter-eclipse/","summary":"Jakiś czas temu zmieniłem narzędzie do kolorowania składni z \u003ca href=\"http://qbnz.com/highlighter/\"\u003eGeSHI\u003c/a\u003e na \u003ca href=\"http://code.google.com/p/syntaxhighlighter/\"\u003eSyntaxHighlighter\u003c/a\u003e. Największa różnica to wykonanie. Starsza biblioteka parsuje wszystko po stronie serwera i pakuje to w HTML, nowsza jest uruchamiana z poziomu przeglądarki i kolorowanie odbywa się tuż po załadowaniu strony.","title":"Kolorowanie składni w SyntaxHighlighter - Eclipse."},{"content":"Jakiś czas temu nieszczęśliwym zbiegiem okoliczności straciłem możliwość uruchomienia swojego systemu (XP). Winny całej sytuacji był partition magick, który nie poradził sobie z przeskalowaniem partycji. Koniec końców spod suse zrobiłem backup danych i postanowiłem zainstalować XP raz jeszcze. Niestety płytka, na której był nagrany (wersja z MSDNAA), nie podnosiła się. Byłem zmuszony do skorzystania z instalki Visty. Kosztowała mnie ona 30 zł i to w cale nie na, zamkniętym już wtedy, stadionie dziesięciolecia! Asus organizował coś takiego jak Visa upgrade i rozdawał płytki za darmo. Swoją dostałem w maju. Koniec końców nowe dziecko MS wylądowało na moim twardym dysku. Kolorki kolorkami, zasoby zasobami, ale najgorsze było to, że straciłem możliwość grania w Enemy Territory. Ta stara gra chodziła mi na XP bardzo płynnie, niestety na Viście nie osiągałem więcej niż 30 fps. Zrozpaczony tym zrezygnowałem z pogrywania. Jakiś czas później naszła mnie chęć na aktualizację sterowników do karty graficznej, ponieważ wszystko co było oparte o OpenGL chodziło tak jak by chciało a nie mogło. Udałem się na stronę ATI by pobrać sterowniki. Jakież było moje zdziwienie, gdy producent oznajmił, że do kart OEM sterowniki powinni zapewnić ich producenci. W tym momencie praktycznie wszystkie układy zbudowane w oparciu o kości Radeon montowane w laptopach zatrzymują się na wersji sprzed roku, jeśli nie starszej. Zaintrygowany tym zacząłem szperać i znalazłem rozwiązanie. :)\n1. Ściągamy ModTool 2. Być może konieczna będzie aktualizacja MS XML 3. Następnie udajemy się po najnowsze sterowniki na stronę ATI bądź DriverHeaven 4. Po ściągnięciu Catalyst będzie chciało się rozpakować do jakiegoś katalogu (C:\\ati\\support) - niech wyląduje gdzie chce, jakkolwiek nie uruchamiajcie instalacji 5. Uruchamiany ModTool i wskazujemy lokalizację C:\\ati\\support, następnie potwierdzamy, że chcemy te sterowniki zmodyfikować 6. Po zmodyfikowaniu instalujemy standardowo Catalyst 7. Jeśli Windows będzie ostrzegał, że sterowniki nie są podpisane należy zignorować komunikat\nPo tymże zabiegu Enemy Territory wyciąga standardowo pomiędzy 60-100 fps na wysokich detalach. Dziwne jest zachowanie ATI/AMD. Całe szczęście są jeszcze na świecie ludzie z głowami na karku, którzy potrafią naprawić błędy innych. :)\n","permalink":"https://blog.dywicki.pl/2008/02/02/aktualizacja-sterownikow-dla-kart-ati/","summary":"Jakiś czas temu nieszczęśliwym zbiegiem okoliczności straciłem możliwość uruchomienia swojego systemu (XP). Winny całej sytuacji był partition magick, który nie poradził sobie z przeskalowaniem partycji. Koniec końców spod suse zrobiłem backup danych i postanowiłem zainstalować XP raz jeszcze. Niestety płytka, na której był nagrany (wersja z MSDNAA), nie podnosiła się. Byłem zmuszony do skorzystania z instalki Visty. Kosztowała mnie ona 30 zł i to w cale nie na, zamkniętym już wtedy, stadionie dziesięciolecia! Asus organizował coś takiego jak Visa upgrade i rozdawał płytki za darmo. Swoją dostałem w maju.\nKoniec końców nowe dziecko MS wylądowało na moim twardym dysku. Kolorki kolorkami, zasoby zasobami, ale najgorsze było to, że straciłem możliwość grania w Enemy Territory. Ta stara gra chodziła mi na XP bardzo płynnie, niestety na Viście nie osiągałem więcej niż 30 fps. Zrozpaczony tym zrezygnowałem z pogrywania. Jakiś czas później naszła mnie chęć na aktualizację sterowników do karty graficznej, ponieważ wszystko co było oparte o OpenGL chodziło tak jak by chciało a nie mogło. Udałem się na stronę \u003ca href=\"http://ati.amd.com/\"\u003eATI\u003c/a\u003e by pobrać sterowniki. Jakież było moje zdziwienie, gdy producent oznajmił, że do kart OEM sterowniki powinni zapewnić ich producenci. W tym momencie praktycznie wszystkie układy zbudowane w oparciu o kości Radeon montowane w laptopach zatrzymują się na wersji sprzed roku, jeśli nie starszej.\nZaintrygowany tym zacząłem szperać i znalazłem rozwiązanie. :)","title":"Aktualizacja sterowników dla kart ATI"},{"content":"Parę dni wstecz trafiłem na ciekawe rozszerzenie Reflection API do PHP. Umożliwia ono używanie tagów phpdoc w charakterze adnotacji. Rozwiązanie te jest zbliżone do znanego mi z Javy xdocleta. Drobną, aczkolwiek zauważalną, różnicą jest fakt, że xdoclet był odpalany przed kompilacją kodu ponieważ bytecode nie zawierał adnotacji. Oczywiście po wejściu Javy 5 xdoclet podupadł, jako coś co wyparły właśnie adnotacje. Może dla tych, którzy nie mieli okazji spotkania sie z takim rozwiązaniem drobny przykład kodu w Javie: [sourcecode language=\u0026ldquo;java\u0026rdquo;]package pl.dywicki.swe.domain;\nimport javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.Table;\n@Entity(name = \u0026ldquo;user\u0026rdquo;) @Table(name = \u0026ldquo;user\u0026rdquo;, schema = \u0026ldquo;public\u0026rdquo;) public class User {\n@Id @GeneratedValue(strategy = GenerationType.AUTO) @Column(name = \u0026ldquo;user_id\u0026rdquo;) private long id;\n@Column(name=\u0026ldquo;user_login\u0026rdquo;) private String login;\n@Column(name=\u0026ldquo;user_password\u0026rdquo;) private String password;\npublic long getId() { return id; }\npublic void setId(long id) { this.id = id; }\npublic String getLogin() { return login; }\npublic void setLogin(String login) { this.login = login; }\npublic String getPassword() { return password; }\npublic void setPassword(String password) { this.password = password; }\n} [/sourcecode]\nCo umożliwia takie rozwiązanie? Przede wszystkim dzięki zastosowaniu adnotacji spada ilość dodatkowych plików zawierających konfiguracje i mapowania. Oczywiście nie da się ich dzięki temu rozwiązaniu wykluczyć zupełnie, aczkolwiek da się znacznie ograniczyć ich użycie. Wielką zaletą, o której do tej pory nie wspomniałem, w przypadku Javy, jest to, że adnotacje możemy odczytywać w czasie uruchamiania programu a nie przed jego kompilacją.\nAdnotacja od strony technicznej Jak można zadeklarować własną adnotację? Służy do tego specjalna konstrukcja: [sourcecode language=\u0026ldquo;java\u0026rdquo;]public @interface Name { String value() default \u0026ldquo;anonymous\u0026rdquo;; }[/sourcecode] Użycie takiej adnotacji: [sourcecode language=\u0026ldquo;java\u0026rdquo;]@Name // poprawnie public class Component {}\n@Name(\u0026ldquo;user.session\u0026rdquo;) // również poprawnie public class User {} [/sourcecode]\nMożemy również przekazać kilka wartości gdy zadeklarujemy w adnotacji odpowiednie pole: [sourcecode language=\u0026ldquo;java\u0026rdquo;]public @interface Relation { String[] belongsTo(); String offer(); }[/sourcecode] Użycie takiej adnotacji: [sourcecode language=\u0026ldquo;java\u0026rdquo;]@Relation(belongTo = {\u0026ldquo;users\u0026rdquo;, \u0026ldquo;groups\u0026rdquo;}, offer = \u0026ldquo;privileges\u0026rdquo;) public class PrivilegesEntityMapping {}[/sourcecode]\nWarto tutaj wspomnieć o dwóch magicznych umowach. Po pierwsze atrybut o nazwie value jest domyślnym przypisaniem wartości podanej w nawiasach. Tzn przy wywołaniu @Name(\u0026ldquo;user.session\u0026rdquo;) możemy pobrać atrybut poprzez annotationInstance.value(). Po drugie dodanie po nazwie pola default \u0026ldquo;wartość\u0026rdquo; pozwala na pominięcie atrybutu przy definicji. Z ograniczeń, jakie mają adnotacje w Javie - wartościami atrybutów mogą być ciągi znaków, typy (klasy) oraz typy wyliczeniowe (enumy).\nJak użyć adnotacji? Korzystając z reflection api. [sourcecode language=\u0026ldquo;java\u0026rdquo;]Name instance = getClass().getAnnotation(Name.class); // Name.class to typ naszej adnotacji. System.out.println(instance.value());[/sourcecode]\nAdnotacje a PHP Jak wcześniej wspominałem, adnotacje nie są elementem PHP, chociaż ludzie pokusili się już o zbudowanie mechanizmu podobnego do tego, który jest w Javie. Jednym z takich projektów jest Addendum. Warto zaznaczyć, że nie jest to nazwa wyssana z palca a słowo \u0026ldquo;addendum\u0026rdquo; ma swoje znaczenie również w języku polskim i ogólnie rzecz biorąc znaczy dodatek do jakiegoś tekstu (więcej informacji na wikisłowniku).\nJak wygląda użycie adnotacji w PHP? Jednym z przykładów może być Torpedeo. Projekt tego samego autora co Addendum, będący implementacją lekkiego ORMa. Przykładowa deklaracja obsługiwana przez Torpedeo: [sourcecode language=\u0026ldquo;php\u0026rdquo;]\u0026lt;?php /\\\\ \\* @Table(\u0026rsquo;nodes\u0026rsquo;) */ class Node { /\\\\ @Integer */ public $id;\n/\\\\ @String */ public $title;\n/\\\\ \\* @Integer \\* @Nullable \\* @Column(\u0026lsquo;parent_id\u0026rsquo;); */ public $parentId;\n/\\\\ @Boolean */ public $visible; } ?\u0026gt;[/sourcecode]\nAddendum wymaga by klasy adnotacji rozszerzały klasę Annotation: [sourcecode language=\u0026ldquo;php\u0026rdquo;]\u003c?php class Nullable extends Annotation {} class Transient extends Annotation {} ?\u003e[/sourcecode] Dodatkowo biblioteka dostarcza rozszerzeń reflection API z PHP5 umożliwiające odczytywanie adnotacji. Dokładny tutorial jak używać tego narzędzia można znaleźć na oficjalnej stronie projektu.\nAdnotacje w PHP? Pytanie czy adnotacje w PHP przyjmą się tak samo dobrze jak w Javie? Zdaje się, że by o tym mówić jest zbyt wcześnie, ponieważ projektów, które korzystają z tego mechanizmu jest na chwilę obecną bardzo mało. Sądząc jednak po tym jak szybko rozwinął się xdoclet można twierdzić, że to tylko kwestia czasu. Chociaż.. może w Javie po prostu jest więcej plików konfiguracyjnych?\n","permalink":"https://blog.dywicki.pl/2008/01/20/adnotacje-w-javie-i-w-php/","summary":"Parę dni wstecz trafiłem na ciekawe rozszerzenie \u003ca href=\"http://pl2.php.net/manual/en/language.oop5.reflection.php\"\u003eReflection API\u003c/a\u003e do PHP. Umożliwia ono używanie tagów \u003ca href=\"http://phpdoc.org\"\u003ephpdoc\u003c/a\u003e w charakterze adnotacji. Rozwiązanie te jest zbliżone do znanego mi z Javy \u003ca href=\"http://xdoclet.sourceforge.net/\"\u003exdocleta\u003c/a\u003e. Drobną, aczkolwiek zauważalną, różnicą jest fakt, że xdoclet był odpalany przed kompilacją kodu ponieważ bytecode nie zawierał adnotacji. Oczywiście po wejściu Javy 5 xdoclet podupadł, jako coś co wyparły właśnie adnotacje. Może dla tych, którzy nie mieli okazji spotkania sie z takim rozwiązaniem drobny przykład kodu w Javie:","title":"Adnotacje w Javie i w PHP"},{"content":"Nigdy bym nie pomyślał, że stworzenie nowej aplikacji w oparciu o J2EE będzie tak trudne. A jednak, mimo wszystko, jest!\nZachwycony prostotą rozwiązania wbudowanego w standard, mianowicie roli i mapowania adresów, postanowiłem je wykorzystać. JSF mimo całej swej wspaniałości, mechanizmu autoryzacji nie dostarcza.\nAutoryzacja i deskryptor Może teraz nieco więcej o tym jak wygląda autoryzacja\u0026hellip; [sourcecode language=\u0026ldquo;xml\u0026rdquo;] \u0026lt;web_app\u0026gt; \u0026lt;security_constraint\u0026gt; \u0026lt;web_resource_collection\u0026gt; \u0026lt;web_resource_name\u0026gt;Admin\u0026lt;/web_resource_name\u0026gt; \u0026lt;url_pattern\u0026gt;/admin/*\u0026lt;/url_pattern\u0026gt; \u0026lt;/web_resource_collection\u0026gt; \u0026lt;auth_constraint\u0026gt; \u0026lt;role_name\u0026gt;ADMIN\u0026lt;/role_name\u0026gt; \u0026lt;/auth_constraint\u0026gt; \u0026lt;/security_constraint\u0026gt;\n\u0026lt;security_constraint\u0026gt; \u0026lt;web_resource_collection\u0026gt; \u0026lt;web_resource_name\u0026gt;Student\u0026lt;/web_resource_name\u0026gt; \u0026lt;url_pattern\u0026gt;/student/*\u0026lt;/url_pattern\u0026gt; \u0026lt;/web_resource_collection\u0026gt; \u0026lt;auth_constraint\u0026gt; \u0026lt;role_name\u0026gt;STUDENT\u0026lt;/role_name\u0026gt; \u0026lt;/auth_constraint\u0026gt; \u0026lt;/security_constraint\u0026gt;\n\u0026lt;security_role\u0026gt; \u0026lt;role_name\u0026gt;ADMIN\u0026lt;/role_name\u0026gt; \u0026lt;/security_role\u0026gt; \u0026lt;security_role\u0026gt; \u0026lt;role_name\u0026gt;STUDENT\u0026lt;/role_name\u0026gt; \u0026lt;/security_role\u0026gt;\n\u0026lt;login_config\u0026gt; \u0026lt;auth_method\u0026gt;FORM\u0026lt;/auth_method\u0026gt; \u0026lt;realm_name\u0026gt;swe-realm\u0026lt;/realm_name\u0026gt; \u0026lt;form_login_config\u0026gt; \u0026lt;form_login_page\u0026gt;/login.jsp\u0026lt;/form_login_page\u0026gt; \u0026lt;form_error_page\u0026gt;/login.jsp\u0026lt;/form_error_page\u0026gt; \u0026lt;/form_login_config\u0026gt; \u0026lt;/login_config\u0026gt; \u0026lt;/web_app\u0026gt; [/sourcecode]\nTaki fragment w pliku web.xml oraz odpowiedni formularz umożliwiają wykorzystanie autoryzacji, którą obsługuje serwer. Jedyne co trzeba skonfigurować to swe-realm, tak by serwer wiedział skąd pobierać dane o użytkownikach i rolach.\nBył sobie realm Ano był sobie realm. Większość serwerów ma wbudowany zestaw realmów, które wystarczy skonfigurować by ich używać. Bilans kilkudniowych walk w przypadku Glassfisha i Geronimo jest zbieżny - żaden ze standardowych mechanizmów nie potrafi sobie poradzić z PostgreSQL. Zadziwiające nieprawdaż? W tym gąszczu standardów implementacje chyba się rozjechały, albo są po prostu kiepsko napisane, bo kwestia rozbija się o złe quoty w zapytaniach (wszędzie na chama lecą cudzysłowy, a dla PostgreSQL tak są \u0026lsquo;cytowane\u0026rsquo; kolumny). Zatem zarówno Geronimo i Glassfish nie obsługuje poprawnie autoryzacji pod wybraną przeze mnie bazą danych. Znalazłem obejście dla Glassfisha - ktoś sam zaimplementował JDBCRealm. Po drobnych poprawkach i przekompilowaniu, tak by był on zgodny z aktualną wersją serwera uruchomiłem serwer.. Właściwie chciałbym go uruchomić, bo cóż się okazało? Ano problemy z classpathem. O zgrozo!\nTo już jest koniec historii Żeby było zabawniej, można stworzyć sobie własny moduł logowania w oparciu o JAAS, wystarczy implementacja jednego interfejsu, jakkolwiek Glassfish wymusza rozszerzanie własnych klas. Z Geronimo póki co mam problem, ponieważ te wymaga bym tworzył dodatkowe deskryptory, czego ja oczywiście nie potrafię..\nBył sobie standard, były sobie implementacje, pozostał zrozpaczony developer. :|\n","permalink":"https://blog.dywicki.pl/2007/12/29/przeboje-z-j2ee/","summary":"\u003cp\u003eNigdy bym nie pomyślał, że stworzenie nowej aplikacji w oparciu o J2EE będzie tak trudne. A jednak, mimo wszystko, jest!\u003c/p\u003e\n\u003cp\u003eZachwycony prostotą rozwiązania wbudowanego w standard, mianowicie roli i mapowania adresów, postanowiłem je wykorzystać. JSF mimo całej swej wspaniałości, mechanizmu autoryzacji nie dostarcza.\u003c/p\u003e\n","title":"Przeboje z J2EE"},{"content":" Cały dzisiejszy dzień poświęciłem na zbudowanie szkieletu modelu pod Agavi IDE. W trakcie dnia zaszło kilka nagłych zwrotów akcji na miarę dobrego filmu sensacyjnego ;). Początkowo pragnąłem wykorzystać Eclipse Modeling Framework do zarządzania obiektami. Wszystko szło gładko, dopóki nie spróbowałem wygenerować kodu wolnego od zależności EMF. Koniec końców dowiedziałem się, że z EMF nie da się wygenerować zwykłych Java Beanów. Niestety, ale zarządzanie wszystkim poprzez otoczkę EMF niezbyt mi się uśmiechało. Model trzymany w pamięci nie potrzebuje wodotrysków, mogą to być zwykle POJO. Przepisałem więc cały kod sam, na nowo. Diagram, który początkowo ilustrował całą strukturę, troszkę się zmienił, nie mniej wersję bazową załączam na obrazku.\nKolejny problem jaki wylazł to zapisywanie obiektów w db4o. Początkowo założyłem sobie, że niektórym elementom będę przypisywał lokalizacje (na diagramie interfejs IResourceLink). Okazało się jednak, że pochodne IResource (IFolder, IFile) w Eclipse zawierają sporo informacji, z których zapisaniem był problem (PreferencesStore), a które z punktu widzenia AgaviIDE były zbyteczne. Ilość zapisanych obiektów była przytłaczająca, już po chwili pracy baza projektu miała ponad 1 megabajt. Biorąc pod uwagę to, że jest tam zapisywany model, który zmienia się często i w którym wyszukiwanie powinno być możliwie najszybsze sytuacja taka była nie do przyjęcia. Znowu przekopałem cały kod modelu, tym razem po to by korzystać ze klasy java.io.File. Masakra, koniec końców udało mi się całość uruchomić. Builder działa, obiekty są zapisywane (drugi obrazek). Teraz dorzucić jeszcze wyciąganie informacji z plików php i powinno być ok..\nOto output, którym w tej chwili częstuje builder. [code]incremental build create new project project location E:\\agavi-ide\\org.agavi.editor.module\\workspace\\Agavi test project modules [] change: Agavi test, resource type: Project change: Admin, resource type: Folder change: actions, resource type: Folder change: ErrorAction.class.php, resource type: File[/code]\nPomyślcie jak fajnie będzie się edytować routing.. podanie ścieżki, wskazanie akcji i gotowe.. albo konfiguracja walidatorów na podobna do tej z JSF Tools\n","permalink":"https://blog.dywicki.pl/2007/12/02/agavi-ide-prace-trwaja/","summary":"\u003ca href=\"http://blog.dywicki.pl/wp-content/uploads/2007/12/manager.PNG\" title=\"Stored agavi project :)\"\u003e\u003cimg alt=\"Stored agavi project :)\" loading=\"lazy\" src=\"http://blog.dywicki.pl/wp-content/uploads/2007/12/manager.thumbnail.PNG\"\u003e\u003c/a\u003e Cały dzisiejszy dzień poświęciłem na zbudowanie szkieletu modelu pod Agavi IDE. W trakcie dnia zaszło kilka nagłych zwrotów akcji na miarę dobrego filmu sensacyjnego ;). Początkowo pragnąłem wykorzystać \u003ca href=\"http://www.eclipse.org/modeling/\"\u003eEclipse Modeling Framework\u003c/a\u003e do zarządzania obiektami. Wszystko szło gładko, dopóki nie spróbowałem wygenerować kodu wolnego od zależności EMF. Koniec końców dowiedziałem się, że z EMF nie da się wygenerować zwykłych Java Beanów. Niestety, ale zarządzanie wszystkim poprzez otoczkę EMF niezbyt mi się uśmiechało. Model trzymany w pamięci nie potrzebuje wodotrysków, mogą to być zwykle \u003ca href=\"http://en.wikipedia.org/wiki/POJO\"\u003ePOJO\u003c/a\u003e.\nPrzepisałem więc cały kod sam, na nowo. Diagram, który początkowo ilustrował całą strukturę, troszkę się zmienił, nie mniej wersję bazową załączam na obrazku.","title":"Agavi IDE, prace trwają"},{"content":"Dnia dzisiejszego zmobilizowałem się by nieco popracować nad modelem dla Agavi IDE. Jest to podstawa bez której ciężko budować kolejne edytory. Trzeba w końcu wiedzieć jakie akcje, widoki etc są w projekcie by sugerować użytkownikowi poprawne wartości. Jak donosi Michał Mech na swoim blogu, konkurencja nie śpi i wszczęła prace nad integracją Eclipse i Symfony - tak też narodziło się Symfoclipse. Stąd straciłem już palmę pierwszeństwa i pozostaje mi walczyć na polu jakości i funkcjonalności. Zend również serwuje wsparcie dla Zend Framework, aczkolwiek po prezentacji miałem mieszane uczucia. Przede wszystkim lektor mówiący z paskudnym angielskim akcentem. Nie wiem, może jestem wyczulony, ale gdy słyszę te fonetyczne wygibasy to mnie to mierzi, może dla jednych to plus, ale dla mnie lepszym sprzedawcą produktu jest ktoś kto mówi o swoim projekcie chociażby z francuskim akcentem niż wynajęty lektor, który ma pomnożyć wrażenie \u0026ldquo;powagi\u0026rdquo; przedsięwzięcia. Na drugim miejscu jakość \u0026ldquo;wsparcia\u0026rdquo;, bo inaczej jak w cudzysłowach tego nie mogę określić, jest po prostu żenująca. Czy mi się wydaje czy oni każą sobie płacić za dodanie kreatora (wizzarda)? ;) Coś mi się wydaje, że załoga PHP Eclipse dobrze robi ponownie zwierając szyki!\nOczywiście przy pisaniu napotkałem problemy. Pierwszym z nich było zniknięcie klasy buildera, drugim wywalanie się db4o (dev 7.0). O ile pierwszy uraczył mnie gromadą logów o tyle drugi poza pokaźnym stosem nie dał mi nic. Typ wyjątku com.db4o.ext.ObjectNotStorableException - nazwa w miarę jasna, problem w tym, że za tym żadnego uzasadnienia, powodu dla którego wyjątek by leciał. Zero, dosłownie zero informacji. Na forum db4o znalazłem parę postów - z nich wyciągnąłem wniosek - konieczne jest użycie taska ant, który zmodyfikuje bytecode klasy, ponieważ w przeciwnym wypadku db4o próbuje serializować obiekt, a gdy mu się nie uda rzuca w/w wyjątek.\nSkrypt ant - który załatwia problem, dla potomnych ( przeróbka z forum): [sourcecode language=\u0026ldquo;xml\u0026rdquo;][/sourcecode]\n","permalink":"https://blog.dywicki.pl/2007/11/30/agavi-ide-db4o-70-objectnotstorableexception-i-ant/","summary":"\u003cp\u003eDnia dzisiejszego zmobilizowałem się by nieco popracować nad modelem dla Agavi IDE. Jest to podstawa bez której ciężko budować kolejne edytory. Trzeba w końcu wiedzieć jakie akcje, widoki etc są w projekcie by sugerować użytkownikowi poprawne wartości.\nJak donosi \u003ca href=\"http://michalmech.pl\"\u003eMichał Mech\u003c/a\u003e na \u003ca href=\"http://michalmech.pl/index.php/2007/11/29/symfoclipse-wsparcie-dla-symfony-na-platformie-eclipse/\"\u003eswoim blogu\u003c/a\u003e, konkurencja nie śpi i wszczęła prace nad integracją Eclipse i Symfony - tak też narodziło się \u003ca href=\"http://\"\u003eSymfoclipse\u003c/a\u003e. Stąd straciłem już palmę pierwszeństwa i pozostaje mi walczyć na polu jakości i funkcjonalności. \u003ca href=\"http://zend.com\"\u003eZend\u003c/a\u003e również serwuje wsparcie dla \u003ca href=\"http://framework.zend.com/\"\u003eZend Framework\u003c/a\u003e, aczkolwiek po \u003ca href=\"http://www.zend.com/webinar/studio/EN_11_Zend_Studio_Neon_Zend_Framework_Support/\"\u003eprezentacji\u003c/a\u003e miałem mieszane uczucia. Przede wszystkim lektor mówiący z paskudnym angielskim akcentem. Nie wiem, może jestem wyczulony, ale gdy słyszę te fonetyczne wygibasy to mnie to mierzi, może dla jednych to plus, ale dla mnie lepszym sprzedawcą produktu jest ktoś kto mówi o swoim projekcie chociażby z francuskim akcentem niż wynajęty lektor, który ma pomnożyć wrażenie \u0026ldquo;powagi\u0026rdquo; przedsięwzięcia. Na drugim miejscu jakość \u0026ldquo;wsparcia\u0026rdquo;, bo inaczej jak w cudzysłowach tego nie mogę określić, jest po prostu żenująca. Czy mi się wydaje czy oni każą sobie płacić za dodanie kreatora (wizzarda)? ;) Coś mi się wydaje, że załoga \u003ca href=\"http://phpeclipse.de/\"\u003ePHP Eclipse\u003c/a\u003e dobrze robi ponownie zwierając szyki!\u003c/p\u003e","title":"Agavi IDE, db4o 7.0, ObjectNotStorableException i Ant :)"},{"content":"Z ostatnich not zebrało mi się kilka obietnic. Jedną z nich było omówienie pluginów w wydaniu JAXB. Jako, że dzisiaj urządziłem sobie wolny dzień postanowiłem wywiązać się przynajmniej z części obowiązków z tym i z tych blogowych.\nPrzykład, na którym do tej pory zawsze bazowałem to dodanie wsparcia dla obsługi zdarzeń z użyciem PropertyChangeSupport. Jest to przykład o tyle wygodny, że pojawiają się przy nim nowe pole, przynajmniej dwie nowe metody. W grę wchodzi również wybiórcza modyfikacja metod, które zadeklarował sobie już JAXB. Z drugiej strony przykład ten jest o tyle niezręczny, że jest to już fragment jaxb-commons. Jakkolwiek ciężko mi wymyślić coś bardziej kreatywnego co by odnosiło się do ogółu generowanego kodu.\nMamy już pomysł, teraz zatem kolej na kod. Pluginy są podpinane przez XJC i są odpalane po procesie parsowania schematu XML. Krok po kroku co należy zrobić.\nStworzyć klasę rozszerzającą com.sun.tools.xjc.Plugin Stworzyć jar, który będzie zawierał plugin (chociażby skryptem ant). Poniższy przykład pakuje wszystko z bin_plugin oraz katalog META-INF. [sourcecode language=\u0026ldquo;xml\u0026rdquo;] [/sourcecode]\nW paczce (jar) należy należy stworzyć plik META-INF/services/com.sun.tools.xjc.Plugin W pliku tym należy umieścić listę kolejnych pluginów - to znaczy wymienić pełne nazwy klas, po kolei każdą w nowej linii [sourcecode language=\u0026ldquo;java\u0026rdquo;]com.sun.tools.xjc.addon.locator.SourceLocationAddOn com.sun.tools.xjc.addon.sync.SynchronizedMethodAddOn com.sun.tools.xjc.addon.at_generated.PluginImpl pl.dywicki.plugin.PropertyChangePlugin[/sourcecode]\nMając tak przygotowane archiwum uruchamiamy xjc: [sourcecode]xjc -cp nasz.jar -extension -nasz_plugin schemat.xsd[/sourcecode] Kilka słów wyjaśnienia -cp to class path, -extension włącza pluginy, a -nasz_plugin informuje xjc, że chcemy uruchomić plugin, który legitymuje się taką dyrektywą.\nPo tych wszystkich karkołomnych zabiegach możemy spokojnie zabrać się za kodowanie.. [sourcecode language=\u0026ldquo;java\u0026rdquo;]package pl.dywicki.plugin;\nimport java.beans.PropertyChangeSupport;\nimport javax.xml.bind.annotation.XmlTransient;\nimport org.xml.sax.ErrorHandler;\nimport com.sun.codemodel.JBlock; import com.sun.codemodel.JDefinedClass; import com.sun.codemodel.JExpr; import com.sun.codemodel.JFieldRef; import com.sun.codemodel.JFieldVar; import com.sun.codemodel.JInvocation; import com.sun.codemodel.JMethod; import com.sun.codemodel.JMod; import com.sun.codemodel.JVar; import com.sun.tools.xjc.Options; import com.sun.tools.xjc.Plugin; import com.sun.tools.xjc.outline.ClassOutline; import com.sun.tools.xjc.outline.Outline;\n/\\\\ \\* Plugin dorzucający do wygenerowanych klas obsługę powiadamiania o zmianach \\* \\* @author Łukasz Dywicki */ public class PropertyChangePlugin extends Plugin {\n@Override public String getOptionName() { // nasz plugin będzie uruchomiony poprzez dyrektywę -Xlistener return \u0026ldquo;Xlistener\u0026rdquo;; }\n@Override public String getUsage() { // help dla użytkownika return \u0026quot; -Xlistener propagowanie zdarzeń przy pomocy standardów JavaBeans\u0026quot;; }\n@Override public boolean run(Outline outline, Options opt, ErrorHandler errorHandler) { // a to jest najważniejsza część pluginu :)\n// przeglądamy wszystkie dostępne klasy for (ClassOutline co : outline.getClasses()) { // definicja pojedyńczej klasy, przy pomocy JDefinedClass // możemy dodawać nowe własności etc JDefinedClass clazz = co.implClass;\naddField(clazz);\nchangeMethods(clazz); } return true; }\n/\\\\ \\* Dodanie pola do generowanej klasy. \\* \\* @param clazz Klasa do której dorzucamy pole */ private void addField(JDefinedClass clazz) { // tworzymy w wygenerowanej klasie pole // private PropertyChangeSupport support = new PropertyChangeSupport(this); JFieldVar $field = clazz.field(JMod.PRIVATE | JMod.TRANSIENT, PropertyChangeSupport.class, \u0026ldquo;support\u0026rdquo;); // inicjujemy pole JInvocation _new = JExpr._new($field.type()); // dodajemy argument (this) _new.arg(JExpr._this()); $field.init(_new); // dodanie adnotacji @XmlTransient do pola, aby nie było ono // obsługiwane przez JAXB $field.annotate(XmlTransient.class); }\n/\\\\ \\* Modyfikacja metod set*.. \\* \\* @param clazz Klasa którą \u0026ldquo;przerabiamy\u0026rdquo;. **/ private void changeMethods(JDefinedClass clazz) { for (JMethod method : clazz.methods()) { if (method.name().startsWith(\u0026ldquo;set\u0026rdquo;)) { String tmp = method.name().substring(3); String fieldName = tmp.substring(0, 1).toLowerCase() + tmp.substring(1); addSupport(method, fieldName); } } }\n/\\\\ \\* Zmodyfikowanie istniejących metod. \\* \\* @param method Obiekt metody \\* @param fieldName Nazwa pola, które metoda obsługuje */ private void addSupport(JMethod method, String fieldName) { // przeskakujemy do pierwszej linijki w metodzie JBlock body = method.body(); body.pos(0); // odwoładnie do np this.userName JFieldRef ref = JExpr.ref(fieldName); // deklaracja zmiennej o typie pierwszego argumentu i nazwie temp JVar $temp = body.decl(method.listParams()[0].type(), \u0026ldquo;temp\u0026rdquo;); // przypisanie do zmiennej temp wartości pola $temp.init(JExpr.ref(fieldName));\n// przeskoczenie na koniec metody body.pos(body.getContents().size());\n// odwołanie do pola this.support (stworzone w metodzie addField) i // wywołanie metody this.support.firePropertyChange() JInvocation invocation = JExpr.ref(\u0026ldquo;support\u0026rdquo;).invoke(\u0026ldquo;firePropertyChange\u0026rdquo;); // kolejne argumenty metody - nazwa property, stara wartość i nowa wartość invocation.arg(fieldName); invocation.arg($temp); invocation.arg(ref);\n// dorzucenie wywołania na końcu metody body.add(invocation); }\n}[/sourcecode]\nKosztuje to troszkę pracy, ale koniec końców mamy wsparcie dla obsługi zdarzeń. Dla zainteresowanych dołączam jeszcze dwa pluginy - generujące metody hashCode i equals. Napisałem je, gdy nie miałem dostępu do internetu, jeśli chcecie ich używać - zalecam wcześniej wspomniane jaxb-commons.\n","permalink":"https://blog.dywicki.pl/2007/11/28/rozszezanie-jaxb/","summary":"Z ostatnich not zebrało mi się kilka obietnic. Jedną z nich było omówienie pluginów w wydaniu JAXB. Jako, że dzisiaj urządziłem sobie wolny dzień postanowiłem wywiązać się przynajmniej z części obowiązków z tym i z tych blogowych.","title":"Rozszerzanie JAXB"},{"content":"W sobotę 17 listopada odbyła się WarsJava. Seria warsztatów realizowana przez Warszawski JUG, a dokładniej przez dwie osoby (kolejność losowa) Jacka Laskowskiego i Łukasza Świerczyńskiego.\nProgram prezentacji zapowiadał się i był ciekawy. Przede wszystkim rzecz z którą wiązałem największe zainteresowanie to tandem Spring+OSGi, głównie z racji na podpinanie Springa pod Eclipse RCP. Drugi temat, który był mi bliski to Spring Web MVC + Freemaker, z racji na to, że z jednym i drugim będę miał prawdopodobnie styczność w pracy. Trzeci tematem, który budził z mojej strony stosunkowo niskie zainteresowanie było JRuby, jednak sama treść prezentacji i sposób jej prowadzenia spowodowały że wciąż jestem pod wrażeniem tego mariażu Javy i Ruby. Wiktorowi podczas prezentacji wyskoczył tylko jeden chochlik, którego dosyć sprawnie wyeliminował. :)\nNa końcu chciałem wspomnieć o tym że i ja miałem swój udział na WarsJavie prowadząc warsztat na temat JAXB. Prawdę powiedziawszy czułem się nieco przerażony - wszyscy podjęli się poważnych tematów, Spring, OSGi, JRuby, JMS podczas gdy ja miałem powiedzieć o bibliotece do robienia obiektów z XMLa i XMLa z obiektów. Szczerze powiedziawszy miałem również spore obawy czy treść, którą przygotowałem będzie w stanie zapełnić półtorej godziny, jakie dostałem na prezentację tematu. Postanowiłem więc dokładnie napisać co jest do zrobienia, dopieścić przykłady, wynikiem czego kładłem się spać o 3 w nocy. Węsząc problemy zawczasu spakowałem laptopa, jak się okazało słusznie - obudziłem się na tyle prędko, że zdążyłem wciągnąć spodnie, wybiec na tramwaj.. Gdy dotarłem na miejsce była już 9:10, dosłownie pięć minut przed rozpoczęciem. Byłaby niezła wpadka gdyby zwiał mi tramwaj i musiałbym czekać 10 minut na kolejny. Szczęście - udało się dotrzeć. Na początku drobne problemy z rzutnikiem, następnie z konfiguracją rozdzielczości.. i tym sposobem uleciało dobre 15 minut. Parę slajdów, które miałem przygotowane minęło stanowczo zbyt szybko i musiałem siadać do klawiatury. Dziwna rzecz, kiedy człowiek siada, używa tylko dłoni, a mimo wszystko język ma zaplątany. :) Zaiste, problematyczne było pisanie i mówienie. Właściwie to więcej pisałem jak mówiłem. Czas zleciał bardzo szybko, zdążyłem w zasadzie omówić 2 aspekty, na które się gotowałem czyli użycie adnotacji i generowanie kodu ze schematu XSD jak i jeden na który się nie przygotowywałem - radzenie sobie z wyjątkami ;). Nie zdążyłem nic powiedzieć na temat wpływania na zachowanie kompilatora schemy (xjc) poprzez tworzenie plików xjb oraz pisania własnych pluginów. Te punkty staną się najprawdopodobniej tematem przyszłych not. Szczerze byłem również bardzo mile zaskoczony tym, że ktoś poprosił o kod po prezentacji. :)\nNa grupie pojawił się wątek z opiniami po warsztatach. Niestety nie byłem na Javarsovii i nie mam punktu odniesienia \u0026ldquo;co było lepsze\u0026rdquo;. Jakkolwiek zdaje mi się, że tradycyjne prezentacje, gdzie jest kilkanaście slajdów i odrobina kodu zdaje się lepsze. Daje dosyć ogólny pogląd na więcej aspektów niż powstający kod. Z drugiej jednak strony forma warsztatu jest bardziej efektowna, co można było bez wątpienia zaobserwować w przypadku JRuby. Z resztą sama dyskusja tuż po prezentacji Wiktora mogła pokazać jak wiele emocji budzi owe novum. :)\nDla zainteresowanych - zamieściłem źródła wszystkich projektów jakie realizowałem przed i w trakcie prezentacji oraz filmik \u0026ldquo;z kodowania\u0026rdquo; (nagrany w Cam Studio). Ostrzegam, że avik jest słabo skompresowany i po wypakowaniu zajmuje 670MB!\n","permalink":"https://blog.dywicki.pl/2007/11/20/warsjava/","summary":"W sobotę 17 listopada odbyła się \u003ca href=\"http://warsjava.pl\"\u003eWarsJava\u003c/a\u003e. Seria warsztatów realizowana przez \u003ca href=\"http://groups.google.com/group/warszawa-jug\"\u003eWarszawski JUG\u003c/a\u003e, a dokładniej przez dwie osoby (kolejność losowa) Jacka Laskowskiego i Łukasza Świerczyńskiego.","title":"WarsJava"},{"content":"Wczoraj do mojej skrzynki trafił newsletter z db4o, w którym trafiłem na dwie informacje. Pierwsza głosi, że db4o w wersji 6.4 jest gotowe do zastosowań produkcyjnych. Druga, że dostępna jest beta wersji 7.0 z nowym mechanizmem o nazwie \u0026rsquo;transparent activation\u0026rsquo;. Postanowiłem zajrzeć do szczegółów, które tyczą się najnowszej wersji. Wynikiem czego jest to dosyć luźne tłumaczenie.\nAktywacja\nWyobraź sobie drzewo obiektów, które są ładowane z db4o. Kiedy Twoja aplikacja dobiera się do własności z korzenia z drzewa, normalnym zdaje się wczytanie całego drzewa do pamięci, prawda? Z tym, że jeśli drzewo jest rozłożyste, zajmuje to wiele czasu i wile pamięci. db4o dostarcza teraz funkcjonalności, która wczytuje tylko te obiekty, których na prawdę potrzebujesz. Proces ładowania tych własności nazwaliśmy właśnie \u0026lsquo;aktywacją\u0026rsquo;.\nZapytania natywne\nZapytania natywne są w pełni bezpieczne (typesafe?), można je refaktoryzować. Są również normalnie obsługiwane w czasie kompilacji, zgodnie ze składnią języka, w którym został napisany program. Zaglądając pod maskę - wytażenie zapisane przy użyciu konstrukcji języka jest analizowane i konwertowane tak by używać indeksów tam gdzie tylko można. Dla zainteresowanych PDF w języku angielskim.\nWydajność\nObydwa powyższe mechanizmy są przeźroczyste, jakkolwiek Twój byte-code po kompilacji musi zostać przeanalizowany i zoptymalizowany by wykorzystać zaawansowane możliwości, które oferuje db4o. Optymalizator jest dostępny jako task dla Ant bądź jako aplikacja napisana w Javie. Możesz wykonywać swoją pracę w sposób, w jaki robiłeś to do tej pory, a Twoje aplikacje oparte o db4o będą po prostu działały szybciej i zabierały mniej pamięci.\nJak twierdzą Twórcy db4o - z wydaniem wersji developerskiej 7.0, dzięki połączeniu 3 wymienionych wyżej technik, zrobili duży krok w przód, w kierunku realizacji zasadniczych celów, dla których powstaje ich produkt:\nDeveloper nie powinien pisać kodu wiążącego się z zapisywaniem obiektów. To jest rola, którą ma pełnić db4o. Standardowy język programowania. Idealna obiektowa baza danych używa konstrukcji dostarczanych w języku programowania oraz nie narzuca nowej składni. Łatwość użycia nie ponosi za sobą straty wydajności. Kod, którym zarządza system utrwalania obiektów może być wydajniejszy od pisanego z ręki oszczędzając równocześnie więcej pamięci. Kontynuując dalej czytanie newsa trafiamy na pytanie - \u0026ldquo;Wszystko do brzmi jak typowy techniczny bełkot, ale jak to wszystko może mi pomóc w realizacji projektów w ramach czasowych i w jaki sposób przekłada się na szczęście mojego klienta?\u0026rdquo; W odpowiedzi wymienione zostają plusy, jakie niosą ze sobą nowe możliwości z perspektywy użytkownika:\nMożesz zachować swój spójność i porządek swojego kodu nawet gdy w grę wchodzi odczytywanie obiektów z bazy Używając db4o z dużymi drzewami obiektów staje się łatwiejsze, ponieważ nie musisz już dłużej przejmować się inicjowaniem obiektów w Twoim kodzie Twoja aplikacja będzie działała szybciej równocześnie pochłaniając mniej zasobów, ponieważ wczyta obiekty których potrzebuje w danej chwili. Nowy optymalizator może być uruchamiany z poziomu Twojego IDE, optymalizując klasy i jar-y w locie. Nie będziesz musiał zmieniać zachowania swojego IDE w żaden sposób by móc skorzystać z mechanizmu aktywacji i optymalizacji zapytań. Dlaczego o tym wszystkim wspominam? :) Ponieważ zastanawiam się czy użyć db4o do obsługi \u0026ldquo;modelu\u0026rdquo; w Agavi IDE. Modelem w przypadku Agavi IDE były by przede wszystkim informacje o modułach, akcjach itp.\n","permalink":"https://blog.dywicki.pl/2007/11/15/nowa-wersje-db4o/","summary":"Wczoraj do mojej skrzynki trafił newsletter z db4o, w którym trafiłem na dwie informacje. Pierwsza głosi, że db4o w wersji 6.4 jest gotowe do zastosowań produkcyjnych. Druga, że dostępna jest beta wersji 7.0 z nowym mechanizmem o nazwie \u0026rsquo;transparent activation\u0026rsquo;. Postanowiłem \u003ca href=\"http://developer.db4o.com/blogs/product_news/archive/2007/11/12/the-7th-dimension.aspx\"\u003ezajrzeć do szczegółów\u003c/a\u003e, które tyczą się najnowszej wersji. Wynikiem czego jest to dosyć luźne tłumaczenie.","title":"Nowa wersje db4o"},{"content":"Integracja między językami czy też platformami to kwestia poruszana nie od dzisiaj. Na poziomie platform funkcjonuje od dłuższego czasu CORBA i Web Services z trio SOAP + WSDL + XML Schema na czele. Integracja systemów napisanych w tym samym języku sprowadza się zwykle do wykorzystania serializacji, która jest najszybsza i najwygodniejsza. Gorzej jeśli idzie o połączenie dwóch języków - w moim przypadku PHP i Javy. Zend ma swój mostek, który umożliwia na zintegrowanie Javy i PHP, jest też dodatkowe rozszerzenie do PHP, które pozwala na wykorzystanie Javy w PHP, jednakże moje oczekiwania nie był aż tak wielkie. Potrzebowałem po prostu odczytać dane specyficzne dla PHP - powiedzmy informacje o jakiejś klasie. Standardowo taka operacja wymagała stworzenia parsera, co jest zadaniem powiedzmy, nie na moje siły i umiejętności.. stąd też postanowiłem sobie nieco uprościć pracę. :)\nWspólny, najwygodniejszy format (zarówno w odczycie i zapisie danych) z jednej i drugiej strony to oczywiście XML. Problem w tym, jaki format ma być wykorzystany. Nie da się przecież bezpośrednio odwzorować obiektu z PHP do Javy głównie z racji na dynamikę. Jeśli w PHP ktoś dorzuci pole do obiektu, poprzez proste $someUser-\u0026gt;city = \u0026lsquo;Białystok\u0026rsquo; to Java bazująca tylko na statycznych, zadeklarowanych polach w klasie nie odczyta tej informacji. Serializacja w postaci specyficznej dla PHP również wiąże się ze stworzeniem parsera po stronie Javy by to wszystko obsługiwać i dodatkowo coś co by później mapowało obiekty z Javy do XMLa w postaci przyjaznej dla PHP. Wyjściem z całej sytuacji okazały się funkcje wddx_*. Po prostu strzał w dziesiątkę. WDDX to standard może nie najnowszy, ale dosyć spójny, i co najważniejsze umożliwiający przesyłanie złożonych obiektów bez zbytniej walki. Po chwili poszukiwań znalazłem DTD, zatem ze strony Javy wystarczy odpalić JAXB i jesteśmy na miejscu.\nPrzykładowy skrypt PHP, który uzyskuje informacje o konfiguracji Agavi: [php]\u0026lt; ?php include_once \u0026lsquo;E:/htdocs/shop/agavi/agavi.php\u0026rsquo;; $value = wddx_serialize_value(AgaviConfig::export());\n$value = \u0026ldquo;\u003c?xml version='1.0' encoding='utf-8' ?\u003e\\n\u0026lt; !DOCTYPE wddxPacket SYSTEM \u0026lsquo;wddx.dtd\u0026rsquo;\u0026gt;\\n\u0026rdquo; . $value;\necho $value; [/php]\nA teraz część wyniku, który PHP wyświetla w konsoli: [xml] \u0026lt; ?xml version=\u0026ldquo;1.0\u0026rdquo; encoding=\u0026ldquo;utf-8\u0026rdquo; ?\u0026gt; \u0026lt; !DOCTYPE wddxPacket SYSTEM \u0026lsquo;wddx.dtd\u0026rsquo;\u0026gt; 5.1.0 E:\\\\htdocs\\\\shop\\\\agavi \u003c!\\-\\- i tak dalej --\u003e \\[/xml\\] Teraz kod Javy, który odczytuje sobie informacje.. (nawiasy kwadratowe przy listach podyktowane błędami w skrypcie, który koloruje składnię) [sourcecode language=\u0026ldquo;java\u0026rdquo;]\n// odpalamy interpreter PHP Runtime runtime = Runtime.getRuntime(); Process exec = runtime.exec(\u0026ldquo;php -q E:/agavi-ide/org.codehouse.bridge/src/org/codehouse/bridge/test2.php\u0026rdquo;);\n// podnosimy kontekst JAXB JAXBContext context = JAXBContext.newInstance(ObjectFactory.class); // deserializujemy XML wygenerowany przez PHP WddxPacket object = (WddxPacket) context.createUnmarshaller().unmarshal(exec.getInputStream());\n// odczytujemy informacje for (Object stc : object.getData().getWDDXData()) { // spodziewamy się informacji o typie złożonym if (stc instanceof Struct) { List[generated.Var] vara = ((Struct) stc).getVar(); for (Var value : vara) { // pozostaje nam tylko odczytanie zserializowanej wartości List[Object] configurationValue = value.getWDDXData(); System.out.println(value.getName() + \u0026ldquo;: \u0026quot; + ((generated.String) configurationValue.get(0)).getvalue()); } } } [/sourcecode]\nWynik działania poniższego kodu to: [code]core.minimum_php_version: 5.1.0 core.agavi_dir: E:\\htdocs\\shop\\agavi exception.default_template: E:\\htdocs\\shop\\agavi/exception/templates/shiny.php agavi.name: Agavi agavi.major_version: 0 agavi.minor_version: 11 agavi.micro_version: 0 agavi.status: DEV agavi.branch: trunk agavi.version: 0.11.0-DEV agavi.release: Agavi 0.11.0-DEV agavi.url: http://www.agavi.org agavi_info: Agavi 0.11.0-DEV (http://www.agavi.org)[/code]\nCzyli wszystko czego trzeba było nam do szczęścia! :)\nPora na przykład bardziej złożony, wyciągnięcie informacji o jakiejś klasie widoku użytej w aplikacji opartej o Agavi. [php]\u0026lt; ?php\ninclude_once \u0026lsquo;E:/htdocs/shop/agavi/agavi.php\u0026rsquo;;\nAgaviConfig::set(\u0026lsquo;core.app_dir\u0026rsquo;, \u0026lsquo;E:/htdocs/shop/project/\u0026rsquo;); AgaviConfig::set(\u0026lsquo;core.system_config_dir\u0026rsquo;, \u0026lsquo;E:/htdocs/shop/agavi/config/defaults/\u0026rsquo;);\n// metoda dopisana przeze mnie, konfiguruje Agavi bez wyrzucania wyjątków. Agavi::bootstrap2(\u0026rsquo;\u0026rsquo;);\ninclude_once \u0026lsquo;E:/htdocs/shop/project/modules/Cart/lib/BaseInputView.class.php\u0026rsquo;;\n$obj = new ReflectionClass(\u0026lsquo;Cart_BaseInputView\u0026rsquo;); $orig = $obj-\u0026gt;getFileName();\n$myMethods = $obj-\u0026gt;getMethods();\n$methods = array();\nforeach ($myMethods as $method) { // sprawdzenie czy plik w którym jest zadeklarowana metoda // pokrywa się z plikiem w którym jest zadeklarowana klasa // w ten sposób pozbywam się niepotrzebnych metod z klas nadrzędnych if ($method-\u0026gt;getFileName() == $orig) { $methods[] = $method; } }\n$value = wddx_serialize_value($methods); $value = \u0026ldquo;\u0026lt; ?xml version=\u0026lsquo;1.0\u0026rsquo; encoding=\u0026lsquo;utf-8\u0026rsquo; ?\u0026gt;\u0026lt; !DOCTYPE wddxPacket SYSTEM \u0026lsquo;wddx.dtd\u0026rsquo;\u0026gt;\\n\u0026rdquo; . $value; echo $value;\n?\u0026gt; [/php]\nDrobna przeróbka kodu Javy, który był użyty wcześniej i wynikiem jest [code] php_class_name: ReflectionMethod name: execute class: Cart_BaseInputView [/code]\nTym, którzy dobrnęli do końca tej noty dziękuję za wytrwałość. :) Kolejna nota będzie być może o tym jak wywoływać metody statyczne klas Javy z poziomu XSLT (wierzcie mi, da się!).\n","permalink":"https://blog.dywicki.pl/2007/11/09/wez-do-javy-to-co-chcesz-z-php/","summary":"Integracja między językami czy też platformami to kwestia poruszana nie od dzisiaj. Na poziomie platform funkcjonuje od dłuższego czasu CORBA i Web Services z trio SOAP + WSDL + XML Schema na czele. Integracja systemów napisanych w tym samym języku sprowadza się zwykle do wykorzystania serializacji, która jest najszybsza i najwygodniejsza. Gorzej jeśli idzie o połączenie dwóch języków - w moim przypadku PHP i Javy.\nZend ma swój mostek, który umożliwia na zintegrowanie Javy i PHP, jest też dodatkowe rozszerzenie do PHP, które pozwala na wykorzystanie Javy w PHP, jednakże moje oczekiwania nie był aż tak wielkie. Potrzebowałem po prostu odczytać dane specyficzne dla PHP - powiedzmy informacje o jakiejś klasie. Standardowo taka operacja wymagała stworzenia parsera, co jest zadaniem powiedzmy, nie na moje siły i umiejętności.. stąd też postanowiłem sobie nieco uprościć pracę. :)","title":"Weź do Javy to co chcesz z PHP!"},{"content":"\nCzas jakiś temu udało mi się stworzyć pierwszy działający edytor w oparciu o Eclipse. Kilka informacji co pod spodem:\nSharedHeaderFormEditor - ładny tekstowy nagłówek oraz możliwość dodawania zakładek FormPage i FormToolkit - użyte do stworzenia układu, który widać na załączonym obrazku JFace Databinding - zapewnia propagowanie zmian z formularza do obiektów JAXB 2 - mapowanie plików XML do odpowiednich klas JFace - table viewer i parę innych dodatków Całość ogólnie jest prosta niczym konstrukcja cepa, w działaniu sprawia się dobrze. Jak tylko ogarnę kod postaram się opisać krok po kroku jak można coś podobnego stworzyć na własny użytek.\nSplatch wraca do gry i będzie grać wysoko! ;-)\n","permalink":"https://blog.dywicki.pl/2007/11/07/moj-pierwszy-edytor/","summary":"\u003cp\u003e\u003ca href=\"/wp-content/uploads/2007/11/agavi-editor.JPG\" title=\"Agavi module configuration editor\"\u003e\u003cimg alt=\"Agavi module configuration editor\" loading=\"lazy\" src=\"/wp-content/uploads/2007/11/agavi-editor.thumbnail.JPG\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eCzas jakiś temu udało mi się stworzyć pierwszy działający edytor w oparciu o Eclipse.\nKilka informacji co pod spodem:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSharedHeaderFormEditor - ładny tekstowy nagłówek oraz możliwość dodawania zakładek\u003c/li\u003e\n\u003cli\u003eFormPage i FormToolkit - użyte do stworzenia układu, który widać na załączonym obrazku\u003c/li\u003e\n\u003cli\u003eJFace Databinding - zapewnia propagowanie zmian z formularza do obiektów\u003c/li\u003e\n\u003cli\u003eJAXB 2 - mapowanie plików XML do odpowiednich klas\u003c/li\u003e\n\u003cli\u003eJFace - table viewer i parę innych dodatków\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eCałość ogólnie jest prosta niczym konstrukcja cepa, w działaniu sprawia się dobrze. Jak tylko ogarnę kod postaram się opisać krok po kroku jak można coś podobnego stworzyć na własny użytek.\u003c/p\u003e","title":"Mój pierwszy edytor..."},{"content":"\n","permalink":"https://blog.dywicki.pl/2007/10/25/czy-ktos-mowil-ze-istnieja-srodowiska-idealne/","summary":"\u003cp\u003e\u003cimg alt=\"Internal error^2\" loading=\"lazy\" src=\"/wp-content/uploads/2007/10/internal-internal.jpg\"\u003e\u003c/p\u003e","title":"Czy ktoś mówił, że istnieją środowiska idealne?"},{"content":"W ramach WarsJava, konferencji/warsztatów organizowanych przez Warszawski JUG, będę miał szansę przedstawić publiczności Java Architecture for XML Binding w wersji drugiej. Swoje boje z JAXB postanowiłem opisać na blogu, być może dla kogoś temat wyda się interesujący.. :)\nOgólniki JAXB ma za zadanie ułatwić pracę z XML poprzez automatyczne dostarczanie obiektów zamiast żmudnego, ręcznego obrabiania plików SAX, DOM czy StAX. Jest to dodatkowa warstwa zbudowana na bazie Java Api for XML Processing. Druga wersja JAXB jest dołączona do J2SE 1.6.\nSpójrzmy teraz na schemat budowy JAXB: Kompilator Schema - dokument opisujący strukturę dokumentu - może to być XML Schema, DTD jak również Relax NG czy też WSDL.\nXML /Java Binding Customization - JAXB daje nam możliwość wpływania na wygenerowany kod poprzez ten właśnie mechanizm, dzięki temu można określić np. metody, które będą tworzyć elementy w przypadku odczytu z dokumentu bądź serializować w przypadku zapisu.\nRuntime Portable JAXB-annotated classes - kod, który wygenerowaliśmy przy użyciu kompilatora bądź klasy, do których dodaliśmy adnotacje. Object Factory - klasa, która tworzy obiektowe reprezentacje naszych elementów XML. Binding runtime framework implementation - obsługuje proces odczytu danych ( unmarshalling) oraz ich zapisu ( marshalling), obsługuje również walidację. Element ten do poprawnego działania wymaga elementów wymienionych powyżej - czyli klas z adnotacjami oraz ich \u0026ldquo;fabryki\u0026rdquo;. Pierwszy projekt Pamiętam, że kiedyś chciałem stworzyć prostą aplikację w której mógłbym notować jakie książki mam i komu je wypożyczyłem. Niestety w którymś momencie zabrakło chyba sił i poza definicją struktury dokumentu stworzyłem tyko kilka linii kodu. Nie mniej, po drobnych przeróbkach udało się doprowadzić schemat do porządku. W aplikacji będą występować następujące instancje klas:\nBooks - repozytorium książek, zawiera listę książek Book - definicja książki - atrybuty to title, isbn oraz lista autorów Author - reprezentacja autora - atrybuty firstName, lastName. Dodatkowo opcjonalny jest type wskazujący czy mamy do czynienia z tłumaczem czy też z \u0026ldquo;normalnym\u0026rdquo; autorem. AuthorType - typ wyliczeniowy - dostępne wartości to Translator, Author Aby korzystało się nam z kompilatora (xjc) wygodniej podepniemy go pod Eclipse jako narzędzie zewnętrzne. Tu przyda się kilka informacji na temat samego kompilatora: [sourcecode language=\u0026ldquo;sh\u0026rdquo;]xjc [-options \u0026hellip;] file/URL/dir \u0026hellip; [-b bindinfo] \u0026hellip;[/sourcecode] Gdzie najważniejsze opcje to:\n-d, katalog do którego trafi wygenerowany kod -b, dodatkowe mappingi umożliwiające zmianę zachowania kompilatora -p, paczka do której trafi wygenerowany kod -classpath, miejsca w których xjc ma szukać klas, które zostały użyte w mappingach Przykładowo [sourcecode language=\u0026ldquo;bash\u0026rdquo;]xjc -d generated schema.xsd[/sourcecode]\nSpowoduje, że klasy wylądują w katalogu generated. Nazwa paczki zostanie zaczerpnięta z atrybutu targetNamespace dokumentu zawartego w schemacie. Obok znajduje się screen z konfiguracją - z ważniejszych informacji - Working directory ustawione na ${project_loc} pozwala nam się nawigować po katalogach względem aktualnie zaznaczonego w nawigatorze projektu. wartość w polu Arguments -d generated ${resource_loc} -verbose -extension -npa oznacza, że wygenerowane klasy wylądują w katalogu \u0026ldquo;generated\u0026rdquo; (należy stworzyć taki source folder). Zmienna ${resource_loc} pozwala nam użyć aktualnie zaznaczonego pliku w nawigatorze. Dzięki takiej konfiguracji niezależnie od projektu i pliku jesteśmy w stanie wygenerować potrzebne nam klasy poprzez dwa kliknięcia - pierwsze w nawigatorze, drugie na ikonie external tools.\nSchemat jest dostępny do ściągnięcia, podobnie jak przykładowy plik z danymi. Proszę zwrócić uwagę na to jak jest zdefiniowany główny element dokumentu - poprzez zawarcie typu anonimowego. Jeśli zdefiniujemy oddzielnie element i typ to wówczas konieczne będzie ręczne dodanie adnotacji @XmlRootElement przy klasie Books. O tym dlaczego JAXB się tak zachowuje można wyczytać na jednym z Sun-owskich blogów.\n[sourcecode language=\u0026ldquo;java\u0026rdquo;]package pl.dywicki.books.app;\nimport javax.xml.bind.JAXBContext; import javax.xml.bind.Marshaller;\nimport pl.dywicki.books.Author; import pl.dywicki.books.AuthorType; import pl.dywicki.books.Book; import pl.dywicki.books.Books; import pl.dywicki.books.ObjectFactory;\n/\\\\ \\* Testowa klasa pokazująca użycie JAXB do zapisywania danych. \\* \\* @author Łukasz Dywicki */ public class App {\npublic static void main(String[] args) throws Exception {\n// repozytorium książek Books books = new Books();\n// przykładowa książka Book book = new Book(); book.setTitle(\u0026ldquo;Test title\u0026rdquo;); book.setIsbn(\u0026ldquo;111-111-111\u0026rdquo;);\n// testowy autor Author author = new Author(); author.setFirstName(\u0026ldquo;Martin\u0026rdquo;); author.setLastName(\u0026ldquo;Fowler\u0026rdquo;); book.getAuthor().add(author);\n// testowy tłumacz author = new Author(); author.setFirstName(\u0026ldquo;Łukasz\u0026rdquo;); author.setLastName(\u0026ldquo;Dywicki\u0026rdquo;); author.setType(AuthorType.TRANSLATOR); book.getAuthor().add(author);\n// dodanie książki do repozytorium books.getBook().add(book);\nJAXBContext context = JAXBContext.newInstance(ObjectFactory.class); Marshaller marshaller = context.createMarshaller(); // chcemy ładnych wcięć w wyniku! :) marshaller.setProperty(\u0026ldquo;jaxb.formatted.output\u0026rdquo;, true); marshaller.marshal(books, System.out); }\n} [/sourcecode]\nPo uruchomieniu tego przykładu w konsoli powinien pokazać się taki oto wynik: [sourcecode language=\u0026ldquo;xml\u0026rdquo;] \u0026lt; ?xml version=\u0026ldquo;1.0\u0026rdquo; encoding=\u0026ldquo;UTF-8\u0026rdquo; standalone=\u0026ldquo;yes\u0026rdquo;?\u0026gt; \u0026lt;ns2_books xmlns:ns2=\u0026ldquo;http://dywicki.pl/books\u0026quot;\u0026gt; Test title 111-111-111 Martin Fowler Łukasz Dywicki Translator \\[/sourcecode\\] (Zamiast ns2\\_books powinno być ns2:books, ale narzędzie kolorujące składnie sobie nie radzi). Dla zainteresowanych załączam źródła projektu.\n","permalink":"https://blog.dywicki.pl/2007/10/14/jaxb-2-wprowadzenie/","summary":"W ramach \u003ca href=\"http://groups.google.com/group/warszawa-jug/web/warsjava\"\u003eWarsJava\u003c/a\u003e, konferencji/warsztatów organizowanych przez \u003ca href=\"http://warszawa.jug.pl/\"\u003eWarszawski JUG\u003c/a\u003e, będę miał szansę przedstawić publiczności \u003ca href=\"https://jaxb.dev.java.net/\"\u003eJava Architecture for XML Binding\u003c/a\u003e w wersji drugiej. Swoje boje z JAXB postanowiłem opisać na blogu, być może dla kogoś temat wyda się interesujący.. :)","title":"JAXB 2, Wprowadzenie"},{"content":"Dla osób, które chciały by przejrzeć opcje JDT jak również utrwalić jakieś ciekawsze skróty klawiaturowe zachęcam do odwiedzenia Using Eclipse Europa - A Tutorial [źródło dzone] :)\n","permalink":"https://blog.dywicki.pl/2007/10/06/uzywanie-jdt/","summary":"\u003cp\u003eDla osób, które chciały by przejrzeć opcje JDT jak również utrwalić jakieś ciekawsze skróty klawiaturowe zachęcam do odwiedzenia \u003ca href=\"http://www.vogella.de/articles/Eclipse/article.html\"\u003eUsing Eclipse Europa - A Tutorial\u003c/a\u003e [źródło \u003ca href=\"http://www.dzone.com/rsslinks/using_eclipse_as_java_ide_tutorial.html\"\u003edzone\u003c/a\u003e] :)\u003c/p\u003e","title":"Używanie JDT"},{"content":"Jak stworzyć edytor diagramów z użyciem tandemu technologi EMF + GMF? Otóż bardzo prosto - jak pokazuje prezentacja, którą znalazłem w jednym z kanałów RSS, prowadzącym do eclipser-blog. Szkoda, że nie wszystko w praktyce bywa takie proste jak na prezentacjach! ;) Bezpośredni link do prezentacji (długo się wczytuje).\n","permalink":"https://blog.dywicki.pl/2007/09/17/prezentacja-eclipse-gmf/","summary":"\u003cp\u003eJak stworzyć edytor diagramów z użyciem tandemu technologi \u003ca href=\"http://www.eclipse.org/emf/\"\u003eEMF\u003c/a\u003e + \u003ca href=\"http://www.eclipse.org/gmf/\"\u003eGMF\u003c/a\u003e? Otóż bardzo prosto - jak pokazuje prezentacja, którą znalazłem w jednym z kanałów RSS, prowadzącym do \u003ca href=\"http://eclipser-blog.blogspot.com/2007/09/nice-gmf-video-for-newcomers.html\"\u003eeclipser-blog\u003c/a\u003e. Szkoda, że nie wszystko w praktyce bywa takie proste jak na prezentacjach! ;)\nBezpośredni \u003ca href=\"http://mirrors.ibiblio.org/pub/mirrors/eclipse/technology/phoenix/demos/gmf-orgchart/\"\u003elink do prezentacji\u003c/a\u003e (długo się wczytuje).\u003c/p\u003e","title":"Prezentacja - Eclipse GMF"},{"content":"Znamy już nazwę przyszłej dystrybucji Eclipse, będzie nią Ganimedes.\nWiadomo, że ten release wyjdzie, podobnie jak Europa, 29 czerwca. Pojawiły się pierwsze zmiany, które wejdą w skład nowej dystrybucji. Na tą chwilę jeszcze nie wiadomo ile projektów będzie obejmować Ganimedes, póki co jest ich kilka, miejmy nadzieję, że przynajmniej tyle co Europa!\n","permalink":"https://blog.dywicki.pl/2007/08/17/eclipse-ganymede/","summary":"\u003cp\u003eZnamy już nazwę przyszłej dystrybucji Eclipse, będzie nią \u003ca href=\"http://pl.wikipedia.org/wiki/Ganimedes_%28ksi%C4%99%C5%BCyc%29\"\u003eGanimedes\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWiadomo, że ten release wyjdzie, podobnie jak Europa, 29 czerwca. Pojawiły się \u003ca href=\"http://download.eclipse.org/eclipse/downloads/drops/S-3.4M1-200708091105/eclipse-news-M1.html\"\u003epierwsze zmiany\u003c/a\u003e, które wejdą w skład nowej dystrybucji. Na tą chwilę jeszcze nie wiadomo ile projektów będzie obejmować Ganimedes, póki co \u003ca href=\"http://wiki.eclipse.org/index.php/Ganymede_Simultaneous_Release\"\u003ejest ich kilka\u003c/a\u003e, miejmy nadzieję, że przynajmniej tyle co Europa!\u003c/p\u003e","title":"Eclipse Ganymede"},{"content":" Konfiguracja w XMLu ma swoje plusy jak i minusy. Nie jest tak banalna w obsłudze jak zapisana w PHP czy w .ini, ale daje dość spore możliwości. Troszkę dywagacji na ten temat było jakiś czas temu w poście pod tytułem \u0026quot; Dlaczego konfiguracja w XML\u0026quot;. Jednym z problemów związanych z XMLem jest konieczność zapamiętania nazw znaczników i atrybutów, co powoduje z początku problemy. Pisanie w XMLu nie jest wówczas tak wygodne jak w PHP (z resztą nigdy takie nie będzie), ale możemy je sobie uprościć przy pomocy dwóch opcji jakie oferuje edytor XML dostępny przez WST.\nPierwszym krokiem jest podpięcie własnych plików z definicjami struktur do Eclipse. Wskakujemy zatem do Window \u0026gt; Preferences a następnie do Web and XML \u0026gt; XML Catalog. Mamy tam listę definicji, których używa WST do podpowiadania składni. Jest miejsce na definicje użytkownika - zatem dorzucamy nowy wpis do obsługi autoload. Po pierwsze wybieramy nowy element. Do wyboru mamy dwa rodzaje źródeł - plik ze wskazanego projektu bądź z określonej lokalizacji. Drugi ma tą przewagę, że nie ma problemów z jego przenoszeniem pomiędzy różnymi workspace\u0026rsquo;ami. Po wskazaniu źródła z poprawnym dokumentem xsd bądź dtd Eclipse samo wypełni pola. Jedyne co pozostaje nam zrobić to kliknąć i potwierdzić.\nPo tym zabiegu możemy zabrać się za edytowanie istniejących plików bądź stworzyć nowy w oparciu o kreator.. Aby to zrobić korzystamy z opcji File \u0026gt; New \u0026gt; Other z listy wybieramy XML i tworzymy na podstawie schematu. Po wybraniu tej opcji mamy dostępną listę schematów, na podstawie których WST jest w stanie wygenerować szablon dokumentu.\nKoniec końców mamy w pełni funkcjonalne podpowiadanie składni w dokumencie XML. W podpowiedziach jest również dodawana informacja o krotności elementów * (zero i więcej), + (jeden i więcej), ? (zero lub jeden) a także wyświetlana dokumentacja. Gdy pracuje się z dobrze opisanym schematem - np plikiem xsd, w którym autorzy nie żałowali miejsca na adnotacje z informacjami na temat poszczególnych elementów - nie ma nawet konieczności skakania po oknach w celu doczytania informacji - jakiego atrybutu bądź znacznika użyć - po prostu mamy to od razu w edytorze. Bez jakiegokolwiek wysiłku, kilkoma kliknięciami zyskujemy funkcjonalne narzędzie. :)\nDruga opcja, która jest dostępna w większości edytorów tekstowych to zdefiniowane szablony. W celu zdefiniowania nowego szablonu w preferencjach otwieramy zakładkę Web and XML \u0026gt; XML Files \u0026gt; Templates. Znajdziemy tam listę z możliwością modyfikacji. Opcję tą odkryłem przy okazji walczenia z pisaniem schema.xml dla Propela z ręki. Była niezastąpiona i zastępowała sporo pracy związanej z tępym kopiowaniem tekstu. W definicji szablonów mamy do dyspozycji kilka pre definiowanych zmiennych, są one przydatne podczas tworzenia szablonów nowych plików. Możemy również deklarować własne zmienne - ${nazwa_zmiennej}. Po wstawieniu szablonu do pliku możemy się nawigować po miejscach wystąpień zmiennych przy użyciu tabulatora. Miejsca, w których powtarzają się te same nazwy zmiennych są automatycznie uzupełniane, tak, że wpisując przy pierwszej zmiennej ${name} nie musimy powtarzać tej czynności w drugim miejscu.\nMam nadzieję, że przyda się w praktyce! Przy okazji pragnę Was, drodzy czytelnicy, poprosić o opinie na temat lightboxa, czy nie przeszkadza Wam jego użycie, być może wolicie tradycyjne linki do plików? Pomijam efekty graficzne, bo wygaszanie tła etc przy trzecim razie bardziej irytuje niż cieszy oko. Jak sądzicie - usunąć lightboxa? Momentami mam też problemy z rozmieszczaniem \u0026ldquo;obrazków\u0026rdquo; stąd są prozżucane po akapitach raz z lewej raz z prawej ponieważ przy mniejszych rozdzielczościach zachodzą na siebie, co powoduje niezbyt miłe efekty.\n","permalink":"https://blog.dywicki.pl/2007/08/02/wygodny-edytor-do-konfiguracji-xml/","summary":"\u003ca href=\"http://blog.dywicki.pl/wp-content/uploads/2007/08/xml-catalog.PNG\" title=\"Zdefiniowany katalog ze schematami XML\"\u003e\u003cimg alt=\"Zdefiniowany katalog ze schematami XML\" loading=\"lazy\" src=\"http://blog.dywicki.pl/wp-content/uploads/2007/08/xml-catalog.thumbnail.PNG\"\u003e\u003c/a\u003e Konfiguracja w XMLu ma swoje plusy jak i minusy. Nie jest tak banalna w obsłudze jak zapisana w PHP czy w .ini, ale daje dość spore możliwości. Troszkę dywagacji na ten temat było jakiś czas temu w poście pod tytułem \u0026quot; \u003ca href=\"http://blog.dywicki.pl/?p=101\"\u003eDlaczego konfiguracja w XML\u003c/a\u003e\u0026quot;.","title":"Wygodny edytor do konfiguracji XML"},{"content":"Odyseja kosmiczna 2007 Zastanawiałem się kiedyś skąd twórcy Eclipse biorą nazwy dla kolejnych wydań. O ile samo Callisto ma wiele znaczeń ( mitologiczna kochanka Zeusa, postać filmowa, księżyc Jowisza, komiks, model samochodu czy też kapela) o tyle w parze z Europą, najnowszym wydaniem kwestia staje się jasna. Bez wątpienia chodzi tu o księżyce Jowisza. Troszkę zadziwiający jest fakt, że dobór nazw nie zbiega się z kolejnością księżyców (największy jest Ganimedes, następnie Callisto, Io i na samym końcu Europa). No, może dywagacje na temat nazw i pochodzenia pozostawimy, chociaż \u0026ldquo;astronomiczny\u0026rdquo; akcent Eclipse nas na długo nie opuści, bowiem w notce tej zamierzam przedstawić wcześniej wymienione, najświeższe, wydanie - Europę.\nHistoria wydań Były czasy, kiedy skompletowanie sobie wszystkich potrzebnych pluginów do Eclipse wymagało wiele wysiłku. A to stąd pobrać GMF, stąd JET, do tamtego jeszcze coś i tak przez pół dnia. Każdy projekt miał własny update site, który zawierał mniej czy też bardziej stabilne wersje. Wykorzystanie funkcjonalności \u0026ldquo;select required\u0026rdquo; ograniczało się tylko i wyłącznie do tego, że po kliknięciu w przycisk po prostu klęliśmy, że nie działa i trzeba szukać kolejnego update site\u0026rsquo;a. Problem ten definitywnie rozwiązało Callisto. Na jego podstawie zostały zasadniczo stworzone trzy \u0026ldquo;dystrybucje\u0026rdquo;. Pierwsza dla programistów J2SE, druga dla osób zajmujących się Eclipse od podszewki oraz trzecia dla programistów C/C++. Dodatkowo korzystając z istniejących pakietów można przy użyciu update managera stworzyć pakiet dostosowany do własnych potrzeb. Europa jak wcześniej wspominałem jest znacznie większa, ponieważ zawiera aż 21 projektów podczas gdy na Callisto składało się ich \u0026ldquo;tylko\u0026rdquo; 10. Ponadto nowe wydanie zawiera dodatkową dystrybucję przeznaczoną do pracy z JEE. Myślę, że wielkość tego wydania jest znakomitym dowodem popularności Eclipse jak i prężności developerów. Jako ciekawostkę dodam kilka liczb, na które trafiłem dzięki notce na blogu Iana Skerretta Wartość 16 projektów spośród 21, notowanych na Ohloh.net to, uwaga, 305 991 384 dolarów (słownie trzysta pięć milionów, dziewięćset dziewięćdziesiąt jeden tysięcy, trzysta osiemdziesiąt cztery dolary). Jest to wartość około 19 339 912 linii kodu rozwijanych ostatnimi czasy przez 312 osób!\nDostępne dystrybucje Java. Dystrybucja przeznaczona do pracy z J2SE. Sercem platformy jest JDT (Java Development Tools), czyli \u0026ldquo;standardowy\u0026rdquo; edytor rozbudowany o nowe opcje. Zawiera część WTP (edycja XML, XSD itp).\nJEE.Wersja przeznaczona do pracy z JEE jak i \u0026ldquo;starym\u0026rdquo; J2EE. Zawiera WTP 2.0 (Web Tools Platform) oraz JST (J2EE Standard Tools) - wsparcie dla edycji JSF, JSP itp. Zapewnia wsparcie dla JPA. Jest to najbardziej \u0026ldquo;wypasiona\u0026rdquo; dystrybucja, ponieważ zawiera większość projektów wydanych w ramach Europy.\nClassic. Dystrybucja będąca miksem wersji Java i RCP. Zawiera źródła projektów, dokumentację nie tylko dla użytkowników ale i dla developerów. Przeznaczona do tworzenia aplikacji w oparciu o Eclipse RCP jak i rozszerzeń samej platformy.\nC/C++. Kompletne środowisko dla programistów piszących w językach C/C++ oparte na Eclipse. Całość okrojona do CDT/CVS/RCP. Brak źródeł jakichkolwiek pluginów, wsparcia dla czegoś niezwiązanego z C/C++. Tylko ta dystrybucja nie jest zintegrowana z Mylynem.\nRCP. Pochodna wersji Classic okrojona tylko o ilość źródeł (nie zawiera źródeł JDT, CVS)\nWszystkie wymienione wyżej dystrybucje można oczywiście modyfikować przy pomocy standardowej aktualizacji. Są to tylko pre definiowane wersje, które mają na celu ograniczenie do minimum ilości pracy potrzebnej do skompletowania środowiska. Przy użyciu każdej z tych dystrybucji możemy praktycznie od razu zacząć pracę. Drobnym wyjątkiem jest tutaj C++, ale o tym dalej..\nNajciekawsze rozwiązania Mylyn 2.0 Zdaje się, że Mylyn stał się perełką całej platformy, aż dziw bierze, że tak proste narzędzie powstało \u0026ldquo;dopiero\u0026rdquo; teraz. Piszę dopiero, ponieważ rozszerzenie to ma już kilka lat, jednak dopiero niedawno pojawił się \u0026ldquo;szum medialny\u0026rdquo; wokół niego. Pierwsze screencasty, prezentacje i w rezultacie gwałtowny wzrost popularności rozszerzenia. Jest to jeden z najwyżej ocenianych i najbardziej aktywnych dodatków do platformy na Eclipse Plugins Central.\nCzym jest Mylyn? Mylyn to narzędzie integrujące Eclipse z repozytoriami zadań takimi jak JIRA, Trac, Bugzilla i tak dalej. Dane, które pobierze z repozytorium zapisuje lokalnie i co jakiś czas synchronizuje. W ten sposób w Eclipse możemy przeglądać i monitorować przebieg prac nad danym zadaniem. Co więcej, jeśli do zadania dołączymy kontekst (załącznik). W odpowiedniej perspektywie możemy przeglądać listę zadań (zapytań). Na liście tej są oznaczone zadania, które są zakończone, otwarte, aktywne czy też jeszcze nie przeczytane.\nMylyna można stosunkowo łatwo rozszerzać. Coraz więcej dostawców integruje swoje narzędzia z Mylynem dzieki czemu kontekst może obejmować nie tylko Package explolera ale również widoki tj outline itp. Sam nawet próbowałem troszkę powalczyć z tym rozszerzaniem, niestety z racji na to, że zdecydowałem się na próbę Mylyn-PDT poległem. Przykładowe implementacje są bardzo proste. Patrząc na klasy dostarczone razem z Mylynem modyfikujące zawartość różnych widoków można stwierdzić, że to w sumie nie jest trudne. No, ale w praktyce bywa inaczej. O ile braki w komentarzach tego pierwszego można uzupełnić odwiedzając wiki o tyle z PDT tak łatwo już nie jest. Wszędzie jakieś braki w komentarzach, trafiają się fragmenty, gdzie jest publiczny interfejs a nie ma w nim nawet linijki komentarzy. Wydaje mi się, że takie sytuacje raczej nie sprzyjają PDT Summer Camp. No, ale do PDT 1.0 mamy jeszcze troszkę czasu, więc być może coś w tym projekcie się poprawi\u0026hellip;.\nNa koniec dodam jeszcze dwa screenshoty pokazujące, jak głęboko Mylyn jest zintegrowany z edytorem tekstu. Może on \u0026ldquo;zawijać\u0026rdquo; te fragmenty kodu, które nie mają nic wspólnego z zadaniem pozostawiając tylko te, które są zawarte w kontekście. Świetna sprawa, gdy ma się klasy, które mają kilkaset linii kodu i odnalezienie w nich metody to wyłapywanie nazwy w outline. ;)\nMylyn bez wątpienia jest rozszerzeniem godnym uwagi. Jeśli w pracy macie do czynienia ze sporym stosem kodu w którym często na zmianę łatacie różne błędy to bardzo ułatwi on Wam życie. Wydaje mi się, że na tą chwilę żadne środowisko nie posiada tak dobrej integracji z repozytoriami zadań. Osobiście jest to dla mnie najlepsza rzecz jaka weszła do Europy.\nEclipse RCP 3.3/JFace . W nowej wersji jest kilka usprawnień. Najbardziej istotnym jest nowy sposób na zarządzanie widoków. Wcześniej widoki mogły wysuwać się tylko z jednej strony. Nie było czegoś takiego jak \u0026ldquo;fast view\u0026rdquo; na modłę Visual Studio, gdzie zakładki chowały się bądź pokazywały gdy najeżdżało się na nie myszą. Połowicznym sposobem na ten problem była minimalizacja/maksymalizacja widoku. Połowicznym, ponieważ pokazanie konsoli powodowało ponowne pokazanie wszystkich widoków. Od wersji 3.3 możemy wybierać który widok ma się pokazać dynamicznie, minimalizować całe \u0026ldquo;grupy\u0026rdquo; widoków. Jak dla mnie bomba, dzięki temu mogę napisać sobie na szybko coś w edytorze mając widoczny tylko outline i dynamicznie wysuwaną konsolę, bez niepotrzebnych mi widoków. Dodam, że widoki zachowują się tak samo w RCP jak również IDE. Dodając do tego również Eclipse Packaging Project [nie jest częścią Europy] w połączeniu z PDE zyskujemy środowisko do tworzenia aplikacji okienkowych od A (kodowanie) do Z (tworzenie instalatorów).\nJDT 3.3 Wraz z ewolucją platformy postępuje ewolucja JDT, które jest pokazem możliwości Eclipse. Wiele osób kojarzy JDT z Eclipse, chociaż tak nie jest JDT to tylko przykładowa (chociaż bardzo dobra) implementacja środowiska w oparciu o Eclipse. Nowa wersja dodaje kilka usprawnień. 1. Save actions. W chwili gdy zapisujemy edytowany plik JDT może wykonać różne operacje. Od usunięcia zbędnych importów i dodania adnotacji @Override/@Deprecated tam gdzie trzeba przez posortowanie pól, metod bo nazwach oraz formatowanie kodu po rzecz tak błahą jak usunięcie zbędnych spacji z końca linii. Nigdy więcej wciskania Ctrl+Shift+O, Ctrl+Shift+F, zrobi to za Ciebie edytor! Sam powoli zaczynam walczyć ze sobą by nie wciskać pierwszego z tych skrótów przed zapisaniem pliku. 2. Spelling. Sprawdzanie pisowni w edytorze? Czemu nie, w końcu komentarze powinny być pisane językiem zrozumiałym dla wszystkich, nie tylko dla autora. ;) Opcja ta pozwoli wyłapać literówki, nie sprawdzi jednak czy zdanie jest poprawne pod kontem składni czy gramatyki. Tak czy owak lepiej poprawić błąd w komentarzu zanim kod się wrzuci do repozytorium niż po fakcie, gdy ktoś zwróci nam uwagę. Błędy składni JDT podkreśla miłym dla oka żółtym kolorem. Niestety nie udało mi się poprawnie skonfigurować słownika dla języka polskiego. Wersja z Open Office/kurnik.pl jest zapisana w troszkę innym formacie niż wymaga plugin, co powoduje problemy. 3. Zmienione zachowanie skrótu CTRL+F11. Domyślnie skrót ten uruchamia ostatnią konfigurację dla aktywnego pliku. Prawdę powiedziawszy doprowadzało mnie to do szewskiej pasji i zmieniłem to na standardowe zachowanie tak by działało tak jak wcześniej, czyli ostatnia uruchomiona konfiguracja. 4. Podpowiadanie w blokach catch. Standardowo trzeba było tam wpisywać z \u0026ldquo;palca\u0026rdquo; nazwę wyjątku posiłkując się inspectorem. W wersji 3.3 do wyboru mamy tylko te wyjątki, które wylecą z danego bloku.\nDrobnych zmian jest więcej, nie mniej ich opis pomijam z racji na to, że nie ma to być changelog a tylko informacja o tym, co się stało. Tak więc z mniej istotnych - skrót do nawigacji po widokach (CTRL+F3) bądź usprawnione podpowiadanie w edytorach PDE bądź \u0026ldquo;rename in line\u0026rdquo;, czyli bezpośredni podgląd zmian nazwy elementu bez konieczności uruchamiania kreatora.\nWeb Tools 2.0 Projekt ten obejmuje wiele subprojektów, których ilość jest dość spora. Web Standard Tools to nic innego jak komplet edytorów do edycji plików xml, xsd, html, css, js, wsdl i tak dalej. Zmian w stosunku do poprzednich wersji nie odnotowałem [czyt. nie zauważyłem]. Screenshoty z wersji 1.5: XML 1, XML 2, XSD 1, XSD 2, XSD 3.\nJ2EE Standard Tools Jednym słowem: kobyła. Jeśli jest coś w J2EE/JEE czego nie można edytować przy użyciu tego narzędzia to musi to być chyba jakaś spora nowość. ;) Na uwagę zasługuje poprawiony edytor graficzny, który sprawuje się całkiem dobrze nawet przy nie do końca poprawnej strukturze pliku. Potrafi on sobie poradzić [czyt. ominąć] skryplety i bardzo ładnie zaznacza elementy zawarte w tagach jsp - niezależnie od tego czy jest to logic:empty (struts) czy też c:if (jstl). Edytor graficzny jest połączony z edytorem tekstowym. Po kliknięciu na jakiś komponent w edytorze graficznym w edytorze tekstowym zostanie on zaznaczony. Problemem z JST jest niestety jego \u0026ldquo;ręczna\u0026rdquo; konfiguracja. Nie ma nigdzie opcji pozwalającej na zmianę katalogu zawierającego pliki przeznaczone do spakowania w WAR. Przy korzystaniu z Mavena trzeba edytować plik konfiguracyjny pluginu! Oczywiście sam plugin ma bardzo wiele opcji - można przy jego pomocy tworzyć aplikacje w oparciu o EJB2.1/3 a także z użyciem JPA, niestety nie miałem do tej pory okazji do wykorzystania tegoż, stąd rezygnuję z opisu.\nCDT 4.0 Nie jestem programistą C/C++ i gdyby nie studia to prawdopodobnie uniknąłbym konieczności poznawania CDT. No, ale okazja się nadarzyła, i prawdę powiedziawszy nie mam powodów by żałować. Do C++ jest wiele środowisk. Jest komercyjne (Visual C++) i niekomercyjne (Visual C++ Express Edition) jak i DevCpp. Są zapewne też inne, mniej bądź bardziej popularne. Mi się nie spodobało ani jedno ani drugie, być może z racji na przyzwyczajenie do Eclipse, jakkolwiek samo CDT również ustępuje JDT, chociaż patrząc na DevCpp oferuje (tu piszę bardzo subiektywnie) większą funkcjonalność. Edytor sprawuje się bardzo dobrze, podpowiada tam gdzie trzeba to co trzeba. Mamy do dyspozycji gro opcji - od formatowania kodu przez dyrektywy kompilatora, dodatkowe biblioteki i tak dalej. Opcji jest multum i ja jako nowicjusz nie miałem okazji by wykorzystać wszystkie. Bolączką jest niestety brak dorzucania dyrektyw #include tak jak to ma miejsce w przypadku JDT, gdzie wybieramy klasę i import już jest. Trzeba się też przyzwyczaić do tego, że błędy zostaną podkreślone dopiero po próbie kompilacji, ponieważ ta wtyczka bazuje na tym, co zwróci kompilator w czasie pracy, nie ma możliwości weryfikacji kodu just-in-time. Jest za to debugger oparty o gdb. Działa on bardzo dobrze i nie ma problemów z jego użyciem. Nie odbiega on wiele od tego, co ma Java. Troszkę Brakuje mi czegoś na modłę \u0026ldquo;quick fix\u0026rdquo;, gdzie wybieramy proponowane rozwiązanie dla danego problemu. Zapewne wynika to w dużej mierze z tego, że C++ jest językiem bardziej złożonym (mniej doskonałym?) niż Java i samo zaimplementowanie mechanizmu propozycji eliminacji błędów byłoby bardzo kłopotliwe. Kto wie, być może w przyszłych wersjach będziemy mogli zobaczyć więcej. Wierzę, że developerzy pracujący nad tym pluginem mają ambicje by tworzyć najlepsze środowisko do C++, które będzie miało funkcjonalność taką samą bądź jeszcze lepszą niż JDT. Samo CDT 4.0 dosyć szybko stanęło w szranki z WTP o pierwsze miejsce pod względem ilości pobrań. Przegrało po kilku dniach walki. Taki stan rzeczy (CDT wciąż jest drugie) może świadczyć o sporym zainteresowaniu takim środowiskiem w społeczności programistów C/C++. Trzymam kciuki za rozwój tego projektu, ponieważ z nim pisanie w C++ stało się dla mnie przyjemnością! :)\n","permalink":"https://blog.dywicki.pl/2007/07/30/eclipse-europa-review/","summary":"\u003ch2 id=\"odyseja-kosmiczna-2007\"\u003eOdyseja kosmiczna 2007\u003c/h2\u003e\n\u003cp\u003eZastanawiałem się kiedyś skąd twórcy Eclipse biorą nazwy dla kolejnych wydań. O ile samo \u003ca href=\"http://www.eclipse.org/callisto/\"\u003eCallisto\u003c/a\u003e ma wiele znaczeń ( \u003ca href=\"http://en.wikipedia.org/wiki/Callisto_%28mythology%29\"\u003emitologiczna kochanka Zeusa\u003c/a\u003e, \u003ca href=\"http://en.wikipedia.org/wiki/Callisto_%28Xena%29\"\u003epostać filmowa\u003c/a\u003e, \u003ca href=\"http://en.wikipedia.org/wiki/Callisto_%28moon%29\"\u003eksiężyc Jowisza\u003c/a\u003e, \u003ca href=\"http://en.wikipedia.org/wiki/Callisto_%28comics%29\"\u003ekomiks\u003c/a\u003e, \u003ca href=\"http://en.wikipedia.org/wiki/Cadillac_Allant%C3%A9\"\u003emodel samochodu\u003c/a\u003e czy też \u003ca href=\"http://en.wikipedia.org/wiki/Callisto_%28band%29\"\u003ekapela\u003c/a\u003e) o tyle w parze z \u003ca href=\"http://www.eclipse.org/europa/\"\u003eEuropą\u003c/a\u003e, najnowszym wydaniem kwestia staje się jasna. Bez wątpienia chodzi tu o \u003ca href=\"http://pl.wikipedia.org/wiki/Galileuszowe_ksi%C4%99%C5%BCyce_Jowisza\"\u003eksiężyce Jowisza\u003c/a\u003e. Troszkę zadziwiający jest fakt, że dobór nazw nie zbiega się z kolejnością księżyców (największy jest \u003ca href=\"http://pl.wikipedia.org/wiki/Ganimedes_%28ksi%C4%99%C5%BCyc%29\"\u003eGanimedes\u003c/a\u003e, następnie \u003ca href=\"http://pl.wikipedia.org/wiki/Kallisto_%28ksi%C4%99%C5%BCyc%29\"\u003eCallisto\u003c/a\u003e, \u003ca href=\"http://pl.wikipedia.org/wiki/Io_%28ksi%C4%99%C5%BCyc%29\"\u003eIo\u003c/a\u003e i na samym końcu \u003ca href=\"http://pl.wikipedia.org/wiki/Europa_%28ksi%C4%99%C5%BCyc%29\"\u003eEuropa\u003c/a\u003e). No, może dywagacje na temat nazw i pochodzenia pozostawimy, chociaż \u0026ldquo;astronomiczny\u0026rdquo; akcent Eclipse nas na długo nie opuści, bowiem w notce tej zamierzam przedstawić wcześniej wymienione, najświeższe, wydanie - Europę.\u003c/p\u003e","title":"Eclipse Europa, krótki przegląd"},{"content":"Ze względu na to, że za parę dni mija drugi rok mojej pracy zawodowej postanowiłem się pokusić o małe podsumowanie tego co przez ten czas się działo na blogu. Obecnie najstarsza nota pochodzi z Marca 2005, chociaż nie jest to ogólnie pierwsza nota jaką napisałem. Pierwszy \u0026ldquo;deblog\u0026rdquo; jak i backupy przepadły podczas jednego z padów serwera. Jak widać perypetie z utratą danych powtarzają się co jakiś czas (ostatni taki problem odnotowaliśmy w minionym listopadzie). Tematem dominującym na blogu do tej pory było PHP (aż 50 wpisów!), chociaż w przyszłości będzie pojawiać się stopniowo coraz więcej Javy (do tej pory tylko 12 wpisów).\nW publikacje najbardziej owocne był Wrzesień 2006, w którym opublikowałem 11 wpisów, oraz Czerwiec 2005, w którym pojawiło się 10 not. Najgorszym okres jaki do tej pory się pojawił to czas pomiędzy Październikiem 2006 a Styczniem 2007. W tym czasie pojawiły się tylko dwie noty. Mam chęci i możliwości by w przyszłości zaradzić takim sytuacjom. Inni rezygnują, ale ja nie! [dałem Wam broń do walki z moim lenistwem]. :)\nJeśli idzie o statystyki - ogólnie rzecz biorąc, praktycznie cały czas przybywa odwiedzających. Maj był miesiącem rekordowym, ponieważ udało się w nim przekroczyć barierę 10000 wywołań, co przekłada się mniej więcej na około 23 tysiące wizyt (w tym 6,5 tysiąca unikalnych). Pierwszym miesiącem, w którym udało się przekroczyć 10 tysięcy wizyt był o dziwo w Listopadzie 2006. W okresie mojej najmniejszej aktywności.\nBardzo zaskakujące są lokalizacje, z których pojawiają się odwiedzający. Dominuje oczywiście Polska, która ma 70%. Na drugim miejscu są Stany Zjednoczone, aż 15% (czyżby to Google/MSN/Yahoo generowało taki ruch?). Z Europy trafiają do mnie osoby z Wielkiej Brytanii (1786 wywołań, 1.7% ogólu), Niemiec (1.6), Francja (1.2), Rosja (0.6), Hiszpania (324 wywołania, 0.3% ogółu). Z bardziej egzotycznych mogę pochwalić się wizytami z Chin (2397 wywołań, 2,3% wywołań), Indie, Japonia, Korea Południowa, Brazylia, Argentyna, Chile, Malezja, Kuwejt czy też Rumunia. Jednym zdaniem - niezła powtórka z geografii.\nJeśli idzie o wyszukiwane frazy to dominuje PHP i programowanie. Poniżej krótkie zestawienie. [code]php6 7 grzechów głównych site:blog.dywicki.pl splatch devblog php eclipse php mvc repozytorium svn siedem grzechow glownych splatch wykrywanie wersji przegladarki skrypt 4 razy po 2 razy do pobrania 7 grzechów głównych about me api klasa abstrakcyjna blog gdzie sie robi operacje cake php diagram klas kurier eclipse php edytor php autocomplete instalacja oracle[/code]\nZ okazji tej drobnej rocznicy chciałbym również przypomnieć dzięki komu ten blog w dalszym ciągu funkcjonuje, czyli osoby, które zrzuciły się na odzyskanie backupu bazy danych. Dziękuję wam bardzo serdecznie za poświęcenie tych pieniędzy mam nadzieję, że Was nie zawiodłem, a jeśli już proszę kierować zażalenia, a z pewnością zrobię wszystko co w moich możliwościach byście uznali, że pieniądze przelane na ten tytuł nie był stracone.\nBartłomiej Rosiński (Bartol) Firma Mentax.pl Paweł Jaczewski (jaco) Łukasz Bobiński (Ace) PIOTRH Dariusz Zieliński (Kazek) Krzysztof Chodak (Kodak) bartman murwazy Acidos Arkadiusz Trzepacz Michał Mech Wojciech Naruniec Paweł Lenart oraz pewien anonim :)\nJako, że rocznice to dobra sposobność do składania sobie życzeń pragnę życzyć sobie i Wam, drodzy odwiedzający kolejnych 2 lat w szczęściu i pogodzie ducha, której tak często nam tak brakuje. A także nieskończenie wielu not. :)\n","permalink":"https://blog.dywicki.pl/2007/06/26/mala-rocznica/","summary":"Ze względu na to, że za parę dni mija drugi rok mojej pracy zawodowej postanowiłem się pokusić o małe podsumowanie tego co przez ten czas się działo na blogu.\nObecnie najstarsza nota pochodzi z \u003ca href=\"http://blog.dywicki.pl/?m=200503\"\u003eMarca 2005\u003c/a\u003e, chociaż nie jest to ogólnie pierwsza nota jaką napisałem. Pierwszy \u0026ldquo;deblog\u0026rdquo; jak i backupy przepadły podczas jednego z padów serwera. Jak widać perypetie z utratą danych powtarzają się co jakiś czas (ostatni taki problem odnotowaliśmy w minionym listopadzie). Tematem dominującym na blogu do tej pory było PHP (aż \u003ca href=\"http://blog.dywicki.pl/?cat=4\"\u003e50 wpisów\u003c/a\u003e!), chociaż w przyszłości będzie pojawiać się stopniowo coraz więcej Javy (do tej pory tylko \u003ca href=\"http://blog.dywicki.pl/?cat=12\"\u003e12 wpisów\u003c/a\u003e).","title":"Mała rocznica."},{"content":"Dzisiaj rano światło dzienne ukazało się Agavi 0.11 RC5, oprócz poprawek błędów z wersji RC4 doszło parę nowości: - Pełne wsparcie dla generowania WSDL, automatyczne mapowanie akcji a nawet wsparcie dla obsługi nagłówków SOAP. - Wsparcie dla transformacji plików konfiguracyjnych poprzez zamieszczanie instrukcji \u0026lt; ?xml-stylesheet?\u0026gt; - Wsparcie dla przestrzeni nazw w plikach konfiguracyjnych - Automatyczna obsługa magic_quotes dla zmiennych superglobalnych\nPojawiły się drobne zmiany w API do obsługi configów oraz nowy sposób ich odczytu, który wejdzie do użytku w wersji 1.0. Póki co jest tylko testowy a jedynym handlerem, który został zaimplementowany \u0026ldquo;na nowo\u0026rdquo; jest ten obsługujący WSDL.\nDodam, że Agavi to pierwszy framework PHP, który rozwiązuje kwestie dostępu do akcji w tak elastyczny sposób. Niezależnie od tego jakim sposobem zostało przysłane żądanie akcja wygląda tak samo. Jest to krok w stronę dojrzałych rozwiązań tj Spring Framework. Pytanie tylko - czy developerom uda się zachować pierwotną prostotę i ile pracy trzeba będzie włożyć w użycie danego rozwiązania? Odpowiedź na nie pozostaje póki co zagadką a pełnej oceny będziemy mogli dokonać po ukazaniu się wersji 1.0 wraz z dokumentacją.\nZainteresowanych naturalnie Agavi zapraszam do traca i przeglądania źródeł wersji 0.11 RC5. :)\n","permalink":"https://blog.dywicki.pl/2007/06/18/agavi-011-rc5/","summary":"Dzisiaj rano światło dzienne ukazało się Agavi 0.11 RC5, oprócz poprawek błędów z wersji RC4 doszło parę nowości:","title":"Agavi 0.11 RC5"},{"content":"Dzisiaj (w zasadzie wczoraj) w otchłani skrzynki odbiorczej RSSOwl znalazłem link do propozycji wspomnianego projektu.\nCzym ma on być? Ma być ujednoliconym szkieletem umożliwiającym programistom dostęp do baz danych, dokumentów XML jak i zewnętrznych systemów pokroju EAI przy użyciu istniejących technologii tj. Java Persistence API (JPA), Java Architecture for XML Binding (JAXB), Java Connector Architecture (JCA), and Service Data Objects (SDO). Cel ma być uzyskany we współpracy ze specjalistami od OSGi przy pomocy implementacji przykładowych implementacji, które pokażą jak używać wcześniej wymienionych interfejsów. Dzięki oparciu całości na platformie OSGi pomysłodawcy chcą zyskać niebywałą do tej pory w tego typu projektach przenośność i modularność co w połączeniu ma zaowocować mariażami (a może mezaliansami) różnego rodzaju. Na stronie z propozycją jest prosty schemat, który wstępnie obrazuje architekturę szkieletu:\nWarto zwrócić uwagę na to, że całość projektu nie będzie uzależniona od Eclipse jako takiego a jest tylko rozwijana w ramach fundacji eclipse. Całość będzie można używać zarówno z poziomu Javy EE jak i Javy SE (jak domniemywam również Swing).\nGłównym pomysłodawcą projektu jest Oracle z którego ramienia będzie póki co pracować najwięcej developerów, głównie tych, którzy wcześniej zajmowali się TopLinkiem. Jakkolwiek w deklaracji pod koniec propozycji pada zdanie czy też zaproszenie - drzwi są otwarte dla chętnych. :)\nOsobiście jestem bardzo ciekaw efektów jakie przyniesie ten projekt, ponieważ znacznie by on ułatwił prace nad aplikacjami stricle biznesowymi opartymi na Eclipse RCP z racji na to, że wystarczy podpiąć się do dostarczonych usług OSGi by móc korzystać z bazy danych czy też wyciągać dane z jakiegoś podsystemu. Fajnie by było uprościć walki, powiedzmy z Hibernate i jego używaniem pod RCP. Dodam, że Eclipse Persistence Services to kolejny \u0026ldquo;dość egzotyczny\u0026rdquo; projekt realizowany w ramach fundacji nie związany ściśle z platformą Eclipse - wystarczy wspomnieć Eclipse Communication Framework z inkubatora, który w wersji 1.0 wchodzi już w skład najbliższego zbiorczego wydania - Europy\n","permalink":"https://blog.dywicki.pl/2007/06/13/eclipse-persistence-services-project/","summary":"Dzisiaj (w zasadzie wczoraj) w otchłani skrzynki odbiorczej \u003ca href=\"http://rssowl.org/\"\u003eRSSOwl\u003c/a\u003e znalazłem \u003ca href=\"http://www.eclipse.org/proposals/eclipselink/\"\u003elink do propozycji\u003c/a\u003e wspomnianego projektu.","title":"Eclipse Persistence Services Project"},{"content":"Od jakiegoś czasu na stronie Eclipse możemy spotkać bardzo miły button sygnalizujący nadejście nowego zbiorczego wydania Eclipse i narzędzi zależnych. Europa to potomek Callisto, z jedną drobną różnicą.. Europa obejmuje 21 projektów podczas gdy Callisto obejmowało ich 10. W skład Europy wchodzą między innymi:\nAspectJ Development Tools (AJDT) 1.5 C/C++ Development Tools (CDT) 4.0 Dynamic Languages Toolkit (DLTK) 1.0 Eclipse Communication Framework (ECF) 1.0 Eclipse Modeling Framework (EMF) 2.3 Graphical Editing Framework (GEF) 3.3 Graphical Modeling Framework (GMF) 2.2 Mylar 2.0 Web Tools Platform (WTP) 2.0 Zbiorcze wydania takie jak Europa czy Eclipse ułatwiają pracę wszystkim. Począwszy od developerów pluginów kończąc na użytkownikach walczących z zależnościami pomiędzy nimi (skąd ja im wytrzasnę EMF 2.2.1.234?!). Europa ma określone wymogi, które projekty muszą spełniać oraz wymogi, które projekty powinny spełniać. Całe zamieszanie jest ściśle kontrolowane poprzez określone daty poszczególnych kroków (od release\u0026rsquo;ów M5 po RC4), a wszystko skończy się 29 czerwca. Odliczanie się rozpoczęło jakiś czas temu, między innymi na blogu Denisa Roy\u0026rsquo;a. We wspomnianej nocie pisze, że ilość commitów do repozytoriów oraz ruch na Bugzilli może świadczyć tylko o tym, że nadchodzi release, lub co gorsza 20 releas\u0026rsquo;ów. Ruch jest ogromny, wg Denisa strona obsługuje setki tysięcy pobrań największych projektów, rozwijanych w ramach platformy, takich jak CDT, WTP czy samego Eclipse\u0026rsquo;a. Teraz już wiem, dlaczego strony i repozytoria Eclipse\u0026rsquo;a obsługuje ponad 50 serwerów i że nie jest to bujda. :)\nCzy Europa odniesie sukces? Prognozuję, że tak, i że będzie to sukces wielki, gdzieś dwa razy większy niż w przypadku Callisto a my przez najbliższe kilka miesięcy będziemy mieli zapewniony dostęp do świeżych i stabilnych wersji pluginów i solidną podstawę do budowania własnych!\n","permalink":"https://blog.dywicki.pl/2007/06/09/europa-nadchodzi/","summary":"Od jakiegoś czasu \u003ca href=\"http://eclipse.org\"\u003ena stronie Eclipse\u003c/a\u003e możemy spotkać bardzo miły button sygnalizujący nadejście nowego zbiorczego wydania Eclipse i narzędzi zależnych. \u003ca href=\"http://www.eclipse.org/europa/\"\u003eEuropa\u003c/a\u003e to potomek \u003ca href=\"http://www.eclipse.org/callisto/\"\u003eCallisto\u003c/a\u003e, z jedną drobną różnicą.. Europa obejmuje 21 projektów podczas gdy Callisto obejmowało ich 10.","title":"Europa nadchodzi.."},{"content":"Jakiś czas temu Michał Mech pisał o tym jak można rozkładać komponenty w Swingu przy pomocy Group Layoutu. Dzisiejszego dnia mam zamiar pokazać Wam drugą stronę medalu - mianowicie Form Layout, który można wykorzystać przy tworzeniu aplikacji w SWT.\nOgólnie w Eclipse dominuje, chyba podobnie jak w Swingu, layout oparty na tworzeniu siatki - Grid Layout. Jest on w miarę elastyczny (zrobisz w nim wszystko to, czego potrzebujesz). Niestety wprowadzanie zmian w układzie (dodanie nowego elementu, zmiana pozycji istniejącego) wiąże się z przepisaniem większości kodu na nowo, ponieważ w \u0026ldquo;siatce\u0026rdquo; ma znaczenie kolejność dodawania. Gdy mamy siatkę dwukolumnową to trzeci komponent, który dodajemy wyląduje w drugim wierszu niezależnie od nas.\nForm Layout odrywa nas od siatki dając pełną dowolność w rozkładaniu kontrolek. Każdy komponent możemy ją pozycjonować na dwa sposoby - albo względem konturów kontenera (może to być okno, bądź grupa, w której się znajdujemy) albo względem innego komponentu. No, ale może po kolei. SWT jest zorganizowane inaczej niż Swing/AWT. Tutaj, by stworzyć jakiś komponent w większości przypadków jest potrzebny przodek, podczas gdy w Swingu nie potrzeba w sumie nic (wynika to z trzymania się specyfikacji JavaBeans, która zakłada, że fasolki powinny mieć puste konstruktory). Dodatkowo każdemu tworzonemu komponentowi należy nadać styl przy użyciu stałych z klasy SWT. Jeśli nie chcemy żadnych dodatkowych efektów dajemy po prostu SWT.NONE. Może kilka przykładów\n[sourcecode language=\u0026ldquo;java\u0026rdquo;] FormData data = new FormData(); data.right = new FormAttachment(0, 50);\nLabel name = new Label(parent, SWT.NONE); name.setText(\u0026ldquo;Nazwa\u0026rdquo;); name.setLayoutData(data); [/sourcecode] Powyższy fragment kodu spowoduje przyciągnięcie etykiety tekstowej do 50 piksela.\n[[sourcecode language=\u0026ldquo;java\u0026rdquo;] FormData data = new FormData(); // przyklejamy pole do inntch komponentów data.left = new FormAttachment(name); data.right = new FormAttachment(righttable); Text field = new Text(parent, SWT.SINGLE); field.setText(\u0026ldquo;Krotki opis\u0026rdquo;); field.setLayoutData(data); [/sourcecode] Ten kawałek kodu spowoduje przyciągnięcie komponentu z lewej do etykiety tekstowej a z prawej do tabelki.\n[sourcecode language=\u0026ldquo;java\u0026rdquo;] FormData data = new FormData(); // ściągamy przycisk prawie na dno, bez 5px data.bottom = new FormAttachment(100, -5); // z prawej strony przycisk będzie 5px od środka kontenera data.right = new FormAttachment(50, -5);\nButton no = new Button(parent, SWT.NONE); no.setText(\u0026ldquo;Nie\u0026rdquo;); no.setLayoutData(data);\nFormData data = new FormData(); data.bottom = new FormAttachment(100, -5); // odsuwamy o 5px od środka - pierwszy przycisk jest o -5px od środka, // więc dajemy 5, żeby dojść do 50% i 5 na rzeczywisty offset od centrum data.left = new FormAttachment(no, 10);\nButton yes = new Button(parent, SWT.NONE); yes.setText(\u0026ldquo;Tak\u0026rdquo;); yes.setLayoutData(data); [/sourcecode] Ten fragment kodu spowoduje umieszczenie dwóch przycisków w odległości 10 pikseli od siebie. Przyznacie, że kod nie jest skomplikowany, prawda? :) Jest go troszkę, ale nie jest on ani trudny ani zawiły. Zmiany, które wprowadzamy najczęściej sprowadzają się do zmiany kilku FormAttachmentów.\nKompletny kod kontrolki widocznej na załączonym obrazku: [sourcecode language=\u0026ldquo;java\u0026rdquo;]package jug;\nimport org.eclipse.swt.SWT; import org.eclipse.swt.layout.FormAttachment; import org.eclipse.swt.layout.FormData; import org.eclipse.swt.layout.FormLayout; import org.eclipse.swt.widgets.Button; import org.eclipse.swt.widgets.Display; import org.eclipse.swt.widgets.Label; import org.eclipse.swt.widgets.Shell; import org.eclipse.swt.widgets.Table; import org.eclipse.swt.widgets.Text;\n/\\\\ \\* Kontrolka prezentująca możliwości {@link FormLayout} wraz z modyfikacjami \\* wprowadzonymi podczas prelekcji. \\* \\* @author Łukasz Dywicki */ public class FormLayoutDemo {\nprivate Display display; private Shell shell;\npublic FormLayoutDemo() { display = new Display(); shell = new Shell(display); pack(); }\n/\\\\ \\* Inicjowanie komponentów i układu okienka */ private void pack() { // główny bohater: FormLayout layout = new FormLayout(); // dorzucamy marginesy layout.marginTop = 5; layout.marginLeft = 5; layout.marginRight = 5; layout.spacing = 5;\nshell.setLayout(layout);\n// tworzymy wszystkie komponenty Label name = new Label(shell, 0); Text field = new Text(shell, SWT.SINGLE | SWT.BORDER); Label description = new Label(shell, 0); Text area = new Text(shell, SWT.MULTI | SWT.BORDER); Button no = new Button(shell, SWT.PUSH); Button yes = new Button(shell, SWT.PUSH); Table righttable = new Table(shell, SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL);\n// konfiguracja i pozycjonowanie elementów FormData data = new FormData(); data.right = new FormAttachment(0, 50);\nname.setText(\u0026quot;\u0026amp;Nazwa\u0026quot;); name.setLayoutData(data);\ndata = new FormData(); data.left = new FormAttachment(name); data.right = new FormAttachment(righttable);\nfield.setText(\u0026ldquo;Krotki opis\u0026rdquo;); field.setLayoutData(data);\ndata = new FormData(); data.right = new FormAttachment(0, 50); data.top = new FormAttachment(field, 5);\ndescription.setText(\u0026ldquo;Napis\u0026rdquo;); description.setLayoutData(data);\ndata = new FormData(); data.left = new FormAttachment(description); // przypięcie w danym // kierunku do danego // pola data.right = new FormAttachment(righttable); data.top = new FormAttachment(field, 5); data.bottom = new FormAttachment(yes); // przycisk pod polem\narea.setText(\u0026ldquo;Witamy!\u0026rdquo;); area.setLayoutData(data);\ndata = new FormData(); data.bottom = new FormAttachment(100, -5); data.right = new FormAttachment(50, -5);\nno.setText(\u0026ldquo;Ni\u0026amp;e\u0026rdquo;); no.setLayoutData(data);\ndata = new FormData(); data.bottom = new FormAttachment(100, -5); data.left = new FormAttachment(no, 10);\nyes.setText(\u0026ldquo;Ta\u0026amp;k\u0026rdquo;); yes.setLayoutData(data);\ndata = new FormData(); data.right = new FormAttachment(100); data.bottom = new FormAttachment(yes); // albo przyciągnięcie prawie do dna // data.bottom = new FormAttachment(100, -5); data.top = new FormAttachment(0); data.left = new FormAttachment(75); righttable.setLayoutData(data); }\npublic void show() { shell.setBounds(50, 50, 300, 200); shell.open(); while (!shell.isDisposed()) { if (!display.readAndDispatch()) display.sleep(); } display.dispose(); }\npublic static void main(String[] args) { new FormLayoutDemo().show(); } }[/sourcecode]\nMoże jeszcze o tym jak w FormLayout zachowują się FormAttachemnty. Wszystkie komponenty pozycjonujemy w dwóch kierunkach (oś X, Y) przy użyciu 4 dostępnych stron. Jeśli jakiś element ma być rozciągnięty na całą szerokość kontrolki (oś X) to z lewej dajemy FormAttachment(0) a z prawej FormAttachment(100). Są to jak wcześniej wspominałem, wartości procentowe z osi X. Jeżeli chcemy aby komponent był rozciągnięty na całą wysokość kontrolki postępujemy analogicznie - góra 0, dół 100. I teraz ważna informacja o offsetach. Gdy przesuwamy komponent zgodnie z grotem danej osi jest on dodatni, jeśli przeciwnie jest on ujemny. Offsety są podawane w pikselach jako drugi (opcjonalny) argument, zarówno przy pozycjonowaniu absolutnym jak i relatywnym. No i na koniec obrazek pokazujący osie. :)\nNa koniec dorzucam link do slajdów, których użyłem podczas prelekcji poprowadzonej w ramach spotkań Warszawskiego JUGu.\nPs. Ostatnimi czasy Wordpress zaczął zachowywać się bardzo dziwnie. Po wskoczeniu do jakiejś notki generował kanał RSS.. jeszcze nie wiem jaka jest tego przyczyna (podejrzewam aktualizację softu na serwerze), póki co zmieniły się linki. Proszę o aktualizację adresów do kanałów w swoich czytnikach. :)\n","permalink":"https://blog.dywicki.pl/2007/06/07/swt-jface-form-layout/","summary":"Jakiś czas temu \u003ca href=\"http://michalmech.pl\"\u003eMichał Mech\u003c/a\u003e \u003ca href=\"http://michalmech.pl/index.php/2007/05/23/manager-layoutu-grouplayout-w-java/\"\u003episał\u003c/a\u003e o tym jak można rozkładać komponenty w \u003ca href=\"http://java.sun.com/docs/books/tutorial/uiswing/index.html\"\u003eSwingu\u003c/a\u003e przy pomocy \u003ca href=\"http://java.sun.com/javase/6/docs/api/javax/swing/GroupLayout.html\"\u003eGroup Layoutu\u003c/a\u003e. Dzisiejszego dnia mam zamiar pokazać Wam drugą stronę medalu - mianowicie \u003ca href=\"http://help.eclipse.org/help31/nftopic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/layout/FormLayout.html\"\u003eForm Layout\u003c/a\u003e, który można wykorzystać przy tworzeniu aplikacji w \u003ca href=\"http://eclipse.org/swt/\"\u003eSWT\u003c/a\u003e.","title":"Form Layout"},{"content":"Chciałbym dzisiaj poruszyć dość ważną kwestię, jaką bez wątpienia jest rutyna i frajda z pracy. Motorem dla mnie była głównie rozmowa, którą odbyłem dzisiaj z kolegami, gdy siedząc przy piwie dyskutowaliśmy na temat alternatyw i sposobów wzbudzania w sobie entuzjazmu. Może na początku kilka definicji zaciągniętych ze słownik języka polskiego wydawnictwa PWN.\nEntuzjazm stan emocjonalnego zaangażowania w coś Rutyna 1. biegłość w czymś nabyta przez długą praktykę 2. postępowanie lub wykonywanie jakichś czynności według utartych schematów W tym przypadku skupiamy się na wersji negatywnej, czyli punkcie drugim.\nProblem Pracując od dłuższego czasu w danej technologii czy też języku dochodzimy do momentu, kiedy jedyną rzeczą, którą mówimy na jego temat jest zdanie - nudzi mnie to. Nie chodzi o dodawanie słów kluczowych czy też rozbudowę semantyki oraz możliwości, tylko ogólnie frameworki, techniki plus kod który się produkuje a o to, że po którymś razie wygląda to w ten sposób, że coś jest podobne do czegoś innego. Przykład pierwszy. Pisząc w Agavi inaczej tworzę widok, inaczej zarządzam wywołaniem, ale logika biznesowa jest ta sama jak w Symfony. Po prostu rzecz od której nie da się uciec, walka z tym, że robimy to samo ale na różne sposoby. Przykład drugi. Pisząc w Cake i w Rails coś zrobię w bardzo zbliżony sposób. Jedyną różnicą będzie to, że tu jest function a tam def, tu przy zmiennej dolar a tam nie. Wynikiem całej tej monotonii pracy, gdzie różnice pomiędzy wszystkim na prawdę nie są duże, bo nawet aspekty potrafią przejść do porządku dziennego, jest brak entuzjazmu. Coś, co Alex opisał w poście pod tytułem Czy tkwisz w pętli czasu?. Objawem tego wszystkiego jest szare postrzeganie tego co się robi, brakuje emocji a co za tym idzie adrenaliny, tego czegoś co powoduje, że człowiek programuje z wypiekami na twarzy.\nPrzeszłość Chyba nie tylko ja miałem takie chwile, że siedziałem do późna w nocy nad jakąś rzeczą tylko po to by sprawdzić, czy mój pomysł zadziała, czy to się uda, czy da się zaimplementować to przy takiej a nie innej strukturze bazy danych. W chwili gdy coś jest sporą nowością, zakładając abstrakcyjnie, przejście z plików jako sposobu na zapisywanie danych do relacyjne bazy pokroju MySQL czy też PostgreSQL jest rewolucją. Takich rewolucji każdy programista w życiu uświadczy parę razy, nie muszę chyba prosić o potwierdzenie, prawda? W końcu to może być przejście z C do Javy bądź z PHP do Ruby, prawdę powiedziawszy, bardzo duża zmiana przyprawiająca o mały czy też duży zawrót głowy, obracająca nasze dotychczasowe podejście o 720 stopni wokół osi X, Y oraz Z.\nWalka W chwili, gdy coś nam nie odpowiada naturalnym odruchem jest próba zmienienia tego na coś bardziej odpowiadającego. Gdy nie podoba się nam rutyna, której jesteśmy świadomi walczymy z nią. Jedni oddzielają rutynę z pracy od rutyny w życiu osobistym uprawiając np sporty ekstremalne, inni skupiają się na życiu zawodowym, znajdą się i tacy, że będą zwalczać rutyną tylko w życiu osobistym. W tej nocie skupiamy się na pracy i dlatego rozpatrujemy tylko ten przypadek. Z jednej strony, ja jako programista, kocham to co robię, z drugiej jednak strony nigdy nie chciałbym dojść do momentu, w którym dzień 20 maja różni się od 19 tylko nazwami zmiennych i tym, że użyłem obiektu klasy Account a nie Person. Faktem jest, że pewna doza rutyny zawsze jest obecna, istotny jest jednak procent w tym, czym się zajmujemy. Każdy z nas akceptuje inny poziom rutyny, jednym odpowiada stateczne życie w korporacji, inni szukają wyzwań zakładając własną firmę. Swoją drogą warto zadać sobie pytanie jak wiele rutyny w naszej pracy jest i czy nie jest jej przypadkiem za dużo?\nOsobiście Ciężko mi się wypowiadać na temat rutyny, ponieważ rutynę jak do tej pory najmocniej odczułem pisząc wtyczki dla mambo blisko dwa lata temu gdy pracowałem w IRTI. Od tamtej pory zawsze pojawiała się jakaś mniejsza czy też większa nowość, która powodowała problemy by po pewnym czasie dawać frajdę. Czy to implementacja ORM bądź MVC na potrzeby projektu czy też pierwszy program w Javie i Swingu. Ostatnimi czasy miałem możliwość pisania mechanizmu synchronizacji, co było i jest wyzwaniem z racji na to, że dopiero wtedy miałem okazję na dobre zapoznać się z wielowątkowością w Javie. Takich dziedzin dla mnie, z racji na małe doświadczenie jest jeszcze wiele, stąd temat dla mnie jest bardzo abstrakcyjny, ponieważ nie jestem w stanie zobaczyć problemów takimi jakimi są, z punktu widzenia innych.\nZaproszenie do dyskusji Nie wątpię w to, że wielu osobom zaczyna doskwierać to, co robią w pracy a przede wszystkim jak to robią. Stąd też pytanie do Was, drodzy czytelnicy, czy odczuwacie rutynę? Jeśli tak, jak z nią walczycie, jeśli nie - czy werwa bierze się sama z siebie czy też wynika z konkretnych celów? Czy jesteście w stanie zdiagnozować i wyeliminować przyczynę? Jeśli tak jakimi środkami? Proszę o wypowiedzi niezależnie od stażu i tego w czym i co piszecie, po prostu podzielcie się swoim zdaniem z innymi. Odpowiedzcie na pytanie - co was motywuje do dalszej pracy na obecnym stanowisku, a co de motywuje i jak sobie z tym radzicie?\n","permalink":"https://blog.dywicki.pl/2007/05/04/praca-rutyna-i-walka-z-zawodowa-codziennoscia/","summary":"Chciałbym dzisiaj poruszyć dość ważną kwestię, jaką bez wątpienia jest rutyna i frajda z pracy. Motorem dla mnie była głównie rozmowa, którą odbyłem dzisiaj z kolegami, gdy siedząc przy piwie dyskutowaliśmy na temat alternatyw i sposobów wzbudzania w sobie entuzjazmu.\nMoże na początku kilka definicji zaciągniętych ze \u003ca href=\"http://sjp.pwn.pl\"\u003esłownik języka polskiego\u003c/a\u003e wydawnictwa PWN.","title":"Praca, rutyna i walka z zawodową codziennością"},{"content":"Praktyka W tym miejscu bazuję na swoim bądź co bądź skromnym doświadczeniu, które nabyłem pracując w AGI. Była to pierwsza firma, w której spotkałem się z wykorzystaniem testów jednostkowych. Pamiętam do dzisiaj walki o 70% pokrycie kodu testami. :). Nie mniej, nie robiliśmy tego tylko po to by zobaczyć zielone słupki w raporcie wygenerowanym przez PHP Unit. Takie pokrycie kodu testami gwarantuje znaczne ograniczenie błędów wychodzących z czasem, głównie dlatego, że znajduje się już podczas pisania testów.\nZasadniczo możemy wyróżnić dwa podejścia do testów - bardzo inwazyjne - projektowanie sterowane testami (ang. Test Driven Development), czyli opieranie się w całości na testach. Wygląda to mniej więcej w ten sposób, że tworzymy interfejs, do niego test i testujemy przy użyciu mock objects (w wolnym przekładzie można to traktować jako obiekty pozorne). Jednym z założeń jest to, że testy nie mogą się zmieniać. Drugie podejście, z którego korzystaliśmy to, w sumie nienazwane, wspomaganie testami. W skrócie, pisząc klasę piszemy również test do niej, tak by na bieżąco sprawdzać poprawność działania kodu. Jeśli zmieni się interfejs etc, testy również mogą się zmienić.\nKorzyści Nie pozwól błędom zawładnąć Twoją aplikacją Tak jak wcześniej wspominałem korzyści, które niosą ze sobą testy jednostkowe to wyłapywanie błędów nim mają szansę coś popsuć. Ile razy szukałeś błędu, który był zakopany tak niewiarygodnie głęboko zakopany, że jego lokalizacja zajęła Ci kilka dni? Ile razy po prostu zrezygnowałeś z walki stosując jakąś brudną protezę? Testy, które sprawdzają niewielkie fragmenty kodu (po prostu pojedyncze metody) lokalizują błędy z dużą dokładnością. Szukanie błędu gdy wiadomo gdzie on tkwi jest znacznie łatwiejsze i mniej czasochłonne. Zwykle to lokalizacja miejsca, gdzie błąd powstaje zajmuje więcej czasu niż jego naprawienie. Jedna metoda, która generuje błędny wynik prowadzi do błędnej implementacji kolejnej, ta z kolei determinuje błąd w innym algorytmie.\nŁatwiejszy refaktoring i wprowadzanie zmian w kodzie Refaktoryzacja ma to do siebie, że źle przeprowadzona, a co gorsza nie sprawdzona potrafi zrodzić spore zamieszanie. Testy jednostkowe pozwalają sprawdzić czy zmiany, które wprowadziliśmy w celu usprawnienia kodu nie niosą ze sobą błędów. Często zmiany, które wprowadzamy nie mogą być nazwane refaktoryzacją, po prostu dodajemy spory fragment kodu, który może ingerować już w istniejącym. Wybitnym przykładem mogą być tu aspekty (najprościej można to określić jako modyfikowanie zachowania kodu z zewnątrz). Innym po prostu poszerzenie implementacji jakiejś klasy pomocniczej o jedną metodę i na prawdę drobna zmiana w dwóch warunkach istniejącej. Czy masz pewność, że Twój kod działa? Zazwyczaj tak, bo testujesz go \u0026ldquo;manualnie\u0026rdquo;, ale czy wiesz, jaki wpływ mają Twoje zmiany na inne fragmenty aplikacji? Być może zmieniona metoda generowała w pewnych okolicznościach błędny wynik, który stał się początkiem wspomnianej lawiny?\nPraca w grupie Testy są szczególnie ważne gdy nad kodem pracuje cały zespół zapanowanie nad całością przedsięwzięcia wymaga wielkiego zaangażowania. Można je ograniczyć wprowadzając konieczność sprawdzania kodu pod kontem jego spójności z pozostałymi fragmentami aplikacji (akapit wyżej). To, że kod działa u Ciebie, nie znaczy, że zadziała u kogoś innego. Są różne platformy sprzętowe, jeszcze różniejsze konfiguracje środowisk. Czy jesteś w stanie zagwarantować, że kod bazujący na jakiejś strukturze katalogów zadziała? Czy zastanawiałeś się jak zareaguje aplikacja gdy jest uruchomiona ze złą konfiguracją? Zapewnij sobie neutralne środowisko testowym, nieskażone niczyim IDE by być pewnym, że to zadziała też u klienta jak i prezesa.\nAutomatyzacja Automatyzacja całego procesu jest ważna. Nikt nie będzie siedział non stop i sprawdzał co godzina czy testy są ok bądź się wywalają. Nikt nie ma na to czasu i pieniędzy. Kierownik projektu ma na głowie więcej rzeczy niż tylko testy a programiści \u0026ldquo;robią swoje\u0026rdquo;. Nikt nie chce uruchamiać testów, niech zrobi to zatem maszyna. Maszyna, na której będzie stało oddzielne, gołe środowisko specjalnie pod testy. Automat pobierze aktualną wersję kodu i uruchomi testy do niego. Może robić to co godzinę bądź co dwie, ale najlepiej by robił to po każdej zmianie w repozytorium. Programista to zwierz leniwy i zdarza mu się zapomnieć o uruchomieniu testów. Przypomnienie mu o nich przez automat będzie milsze niż reprymenda dwa tygodnie po tym, jak aplikacja przestała działać u wszystkich i znaleziono winnego (vide kozła ofiarnego).\nRedukcja kosztów Jak to określił Ross, testy to jeden ze sposobów na wyprzedzenie kosztów, swoistego rodzaju zapłata dzierżawy. Tracimy czas (pojęcie względne) inwestując w pisanie testów, ale zyskujemy z jego biegiem, ponieważ kod naszej aplikacji po prostu działa. Nie musi nad nim czuwać sztab testerów, którzy klikają i zaznaczają w formularzach \u0026ldquo;to nie działa\u0026rdquo; z opisem typu \u0026ldquo;pole \u0026rsquo;nazwa firmy\u0026rsquo; jest ignorowane przy próbie zmiany jego wartości\u0026rdquo;. Wskazanie miejsc, gdzie rodzi się błąd nie wydaje się trudne. Albo niepodpięte mapowanie do pola, albo źle wygenerowane zapytanie. Banał. Ale spytaj kogoś, kto powie od razu który fragment kodu to robi? Sytuacja nie jest najgorsza, wykryli ją testerzy, ale bywają gorsze, znacznie gorsze. To, że kod się kompiluje nie znaczy, że działa.\nStudium pewnego błędu Załóżmy, że aplikacja działa od 3 miesięcy w środowisku produkcyjnym, u klienta. Nagle okazuje się, że to samo pole nie może zawierać apostrofów, ponieważ powstaje błąd zapytania SQL. Inna sytuacja - dorzucenie \u0026amp; w nazwie powoduje błąd w wyświetlaniu strony. Wpisanie specyficznej wartości w formularzu powoduje pokazanie się białej strony. Esteci się cieszą, ale klienci już nie. Padają gromy ze strony klienta. Obrywają wszyscy od góry do dołu. Warto poświęcić czas na to by mieć komfortowe warunki pracy, z minimalną ilością negatywnych emocji i tarć na linii Ty - Twój zwierzchnik. Wyeliminowanie błędu pojawiającego się u klienta jest drogie a koszt jest wprost proporcjonalny do ilości klientów. Na błędach tracą wszyscy. Firma traci pieniądze, ponieważ programista musi zlokalizować i naprawić błąd. Programista traci werwę. Nikt z nas nie lubi babrać się w czyimś kodzie, nie wiadomo jaki by on nie był, w poszukiwaniu jakiejś niedoróbki. Jednak najgorsza może być strata wizerunku. Na rynku jest pełno firm. Czy może poszczycić się Twoja? Wszyscy kochają jakość i wszyscy się nią chwalą, dopóki nie dojdzie do konfrontacji z rzeczywistością. Zadbaj by Twój produkt był dostarczony z minimalną ilością błędów, a możesz liczyć na to, że klient wróci i być może pociągnie za sobą swoich partnerów biznesowych.\nZaproszenie do dyskusji Na końcu pragnę zachęcić wszystkich do zadawania pytań jak i dzielenia się swoimi doświadczeniami. Jakie są Twoje doświadczenia z testami jednostkowymi? W jaki sposób przebiegało ich wdrożenie? Czy jesteś sceptycznie nastawiony? Może jesteś przeciwko? To tylko część z tematów, które możemy poruszyć.\n","permalink":"https://blog.dywicki.pl/2007/04/22/testy-jednostkowe/","summary":"\u003ch2 id=\"praktyka\"\u003ePraktyka\u003c/h2\u003e\n\u003cp\u003eW tym miejscu bazuję na swoim bądź co bądź skromnym doświadczeniu, które nabyłem pracując w \u003ca href=\"http://autoguard.pl\"\u003eAGI\u003c/a\u003e. Była to pierwsza firma, w której spotkałem się z wykorzystaniem testów jednostkowych. Pamiętam do dzisiaj walki o 70% pokrycie kodu testami. :).\nNie mniej, nie robiliśmy tego tylko po to by zobaczyć zielone słupki w raporcie wygenerowanym przez \u003ca href=\"http://phpunit.de\"\u003ePHP Unit\u003c/a\u003e. Takie pokrycie kodu testami gwarantuje znaczne ograniczenie błędów wychodzących z czasem, głównie dlatego, że znajduje się już podczas pisania testów.\u003c/p\u003e","title":"Testy jednostkowe"},{"content":"Jakiś czas temu postanowiłem zmienić myśl przewodnią bloga. Zapewne nikt nie zauważył tego, że zniknął tekst \u0026ldquo;żubr powstaje z jęczmienia\u0026rdquo; na rzecz \u0026ldquo;Pragmatyzmu kontrolowanego\u0026rdquo;. Czym było to podyktowane? Ano tym by tą gromadę różnych not, nie zawsze łączących się ze sobą tematycznie, podeprzeć myślą, jaką jest poszerzanie horyzontów i dzielenie się zdobytymi z biegiem czasu doświadczeniami.\nKrótki wstęp do pragmatyzmu Definicja pojęcia wyciągnięta ze słownika PWN:\nPostawa polegająca na realistycznej ocenie rzeczywistości i podejmowaniu jedynie takich działań, które gwarantują skuteczność\nW tej nocie skupiam się między innymi na tym jak budować swój \u0026ldquo;techniczny\u0026rdquo; światopogląd na bazie zdobytych doświadczeń. Często jest tak, że swoje opinie opieramy na tym co przeczytamy w sieci, usłyszymy od kolegi z pracy. Wynikiem tego jest sytuacja, gdzie przyjmujemy ich opinię jako swoją. Obrazowo wygląda to tak, że w chwili gdy opinio-dawca powie, że jest głodny my też jesteśmy głodni, jeśli po chwili stwierdzi, że chce jeść my reż raczej będziemy chcieć coś jeść. Przyznacie, że jest to irracjonalne. Jeśli ktoś jest syty nie znaczy, że ja również muszę być. Oczywiście trzeba przyjąć pewną granicę.\nGdyby próbować wszystkiego czego się nie poznało stracilibyśmy wiele czasu. Jak więc można wybrnąć z takiej sytuacji? W sprawie technik i technologii należy być sceptycznym i stosować wcześniej wspomniane podejście pragmatyczne, czyli bazować na doświadczeniu. Często warto jest sprawdzić i upewnić się, czy dane narzędzie rzeczywiście jest wartościowe i czy jego użycie daje wymierne zyski. Jeśli nie mamy możliwości bądź czasu pozostają autorytety, którymi opiniami można się wspierać. Warto wówczas zaznaczyć, \u0026ldquo;nie mam własnej opinii, aczkolwiek czytałem, że \u0026hellip;\u0026rdquo;. Dajemy wówczas swojemu rozmówcy informację jaka jest opinia obiegowa nie sugerując mu wyboru naszą postawą. Zwróćcie uwagę, że traktowanie wypowiedzi, którą ktoś wygłosił osobiście traktujemy zgoła inaczej niż oznajmioną. Pierwsza opinia:\nSądzę, że Python to język miły, który od pewnego czasu powoli, ale sukcesywnie poszerza swoje grono zwolenników. Może świadczyć o tym rosnąca popularność Django jak i stopniowa (czyżby liniowa?) migracja części programistów w tym i tych, którzy pisali w PHP.\nDruga opinia:\nZ tego co się orientuję obiegowa opinia głosi, że Python to język miły, zwiększający grono swoich zwolenników. Według statystyk migruje do niego coraz więcej programistów piszących również w PHP. Warto odnotować, że Django również święci triumfy. Niestety sam, nie mam wyrobionej opinii, ponieważ nigdy nie pisałem niczego większego w samym języku i frameworku.\nKluczowe jest tutaj ostatnie zdanie, gdzie podkreślamy, że nie mamy wyrobionego stanowiska. Po prostu, powtarzamy to, czego się dowiedzieliśmy, bez dodawania subiektywnych ocen. Taką postawę możemy przyjąć gdy mamy zbadaną daną technikę/technologię i zdanie, które posiadamy powstaje z praktyki:\nMoim zdaniem Propel to bardzo wygodne narzędzie, które znacznie ułatwia pracę programisty. Z doświadczenia wiem, że nie tylko zwalnia go z klepania zapytań i warstwy dostępu do danych ale umożliwia tworzenie złożonych mechanizmów tj CRUD, dzięki którym tempo tworzenia aplikacji odczuwalnie wzrasta. Nie daj się zniechęcić tym, że konfiguracja jest w XML. To nie jest problem, jest nim natomiast tworzenie złożonych zapytań i mapowanie ich do obiektów. Polecam Ci Propela do małych i średnich projektów, gdzie wydajność nie jest najważniejszym z wymogów.\nPragmatyzm i ja Przyznam, że od pewnego czasu przestałem stosować podejście pragmatyczne na rzecz krytycznego surowo oceniając różne rzeczy na bazie suchych faktów. Czasami się to sprawdza a czasami nie. Myślę, że jednym z wielu błędów, które popełniłem było skreślanie Ruby oraz Ruby on Rails. Tzn akceptowałem je jako takie, ponieważ sam język jak i framework ma swoją niszę, ale skreślałem je na podstawie swojego słabo określonego punktu zaczepienia, bazującego po prostu na \u0026ldquo;nie podoba mi się\u0026rdquo;. Swoją drogą, zauważyłem, że dawniej więcej kręciłem się po sieci w poszukiwaniu jakiś nowinek, chociażby dla PHP. Tak też trafiłem na PDO, Creole jak i Propela, Mojavi. O ile pierwsze z wymienionych narzędzi nie jest przeze mnie używane o tyle pozostałe były do tej pory podstawą aplikacji webowych, które tworzyłem w PHP.\nMyślę, że w przypadku rozwiązań budowanych w oparciu o PHP krytycyzm jest i był po prostu relatywistyczny, chociaż, jak mi się wydaje moje punkty zaczepienia (jakość kodu w połączeniu z dokumentacją wykładnikiem jakości projektu) są dość mocne. Aluzja do noty \u0026ldquo;Pomyłki i ja.\u0026rdquo; jest jak najbardziej wskazana. Niestety. Pragmatyzm to nie jest zamykanie się tyko na sprawdzone rozwiązania ale i otwartość na rzecz nowości i nieznanego.\nLekarstwo na wszystkie problemy? Czy pragmatyzm jest lekarstwem na spotykane przez nas dotychczas problemy? Bez wątpienia pragmatyzm jest postawą pewną, bazującą na rzeczy niezbywalnej, jaką jest doświadczenie. Mając doświadczenie masz jasną i klarowną wizję tego jak można coś zrobić. Bazując na tym, co robiłeś wcześniej jesteś w stanie określić miejsca, w których pojawiały się problemy bądź duplikował się kod. Pamiętajcie, że zarówno programista i jego kod powinien ewoluować. Być może nie doczekacie się zysków od razu, ale traktujcie to jako waszą inwestycję, która z biegiem czasu nabiera coraz większej wartości, która przełoży się wcześniej czy później na Wasze zarobki.\nŻyczę wam powodzenia w poznawaniu nowości jak i poszerzaniu swojej wiedzy z zakresu już poznanych technologii! :) Ja zacząłem od Django i Grails. Być może za jakiś czas pojawią się jakieś informacje o tym co w tych frameworkach piszczy, ponieważ najprawdopodobniej nowy code house będzie oparty o jedno z tych rozwiązań.\nPs. Jakiś czas temu trafiłem na ciekawy blog, którego autorem jest Ross Lawley (notabene używający między innymi Agavi) traktującą o tym jak wyprzedzać koszty tworzenia aplikacji, czyli płacić za nie nim się pojawią.\n","permalink":"https://blog.dywicki.pl/2007/04/16/pragmatyzm-kontrolowany/","summary":"Jakiś czas temu postanowiłem zmienić myśl przewodnią bloga. Zapewne nikt nie zauważył tego, że zniknął tekst \u0026ldquo;żubr powstaje z jęczmienia\u0026rdquo; na rzecz \u0026ldquo;Pragmatyzmu kontrolowanego\u0026rdquo;. Czym było to podyktowane? Ano tym by tą gromadę różnych not, nie zawsze łączących się ze sobą tematycznie, podeprzeć myślą, jaką jest poszerzanie horyzontów i dzielenie się zdobytymi z biegiem czasu doświadczeniami.","title":"Pragmatyzm kontrolowany"},{"content":"Od jakiegoś czasu na forum.php.pl spotykam się z różnymi zdaniami na temat interfejsów i klas abstrakcyjnych. Argumenty, które czasami się trafiają są chybione.\nZacznijmy od tego, że trzeba potrafić rozróżnić interfejs od klasy abstrakcyjnej, to nie to samo! Interfejs jest najwyższym poziomem abstrakcji, który definiuje nowy, wolny od implementacji typ. Bez jakiejkolwiek linii kodu, tylko sygnatury metod publicznych. Klasa abstrakcyjna jest już początkiem konkretnej implementacji, zawiera kod ogólny i wymusza w klasach dziedziczących dorzucenie konkretnych metod, które są specyficzne, inne, różne. Mogą trafić się takie przypadki, że klasa abstrakcyjna zawiera 5 metod, a jej pochodne tylko jedną. Czy jest to uzasadnione? Oczywiście. Ta jedna metoda determinuje nowy typ, który jest jawną specjalizacją.\nWarto pamiętać, że w chwili gdy mamy klasę abstrakcyjną i kilka jej pochodnych dorzucenie interfejsu jest polisą na życie. Spójrzmy, na praktykę - co się powinno dziać w chwili, gdy pojawiają się kolejne pochodne oraz klasa abstrakcyjna rozrasta się do niebagatelnych rozmiarów? Wyodrębniamy wspólny interfejs (patrz extract interface) i kolejne klasy abstrakcyjne. Bez problemu dorzucamy kolejny typ i lecimy bez przestojów. W chwili gdy uzależnimy się od klasy abstrakcyjnej z jakimkolwiek kodem z biegiem czasu możemy mieć do czynienia z klasami, które zawierają po 10, 20 i więcej metod. Nawigacja po tak rozbudowanym typie jest uciążliwa a zrozumienie kodu wymaga przebrnięcia przez stos metod, które tworzą swoisty labirynt. Rozsądne użycie interfejsów i klas pozwala nam tworzyć złożone ale przejrzyste struktury. Separacja abstrakcji od implementacji określana mianem wzorca projektowego, nazwa mostem (ang. bridge).\nBudowa złożonej aplikacji bez użycia interfejsów jest posunięciem wysoce nierozsądnym, ponieważ to właśnie dzięki nim, nawet w językach kompilowanych ze statycznym typowaniem jesteśmy w stanie zyskać nadzwyczajnie elastyczny kod. W aplikacji, która jest rozwijana od dłuższego czasu (powiedzmy, ponad pół roku) to właśnie interfejsy są miejscami zawierającymi definicję poszczególnych warstw. To one powinny być trzonem każdej aplikacji (pomijając warstwę obiektów domenowych, gdzie ich rola nie musi być dominująca). Nawet jeśli koncepcja implementacji obróci się o 180 stopni to nasz interfejs, będący swoistą fasadą, ukryje te zmiany przed osobami, których one nie dotyczą bądź nie interesują.\nDorzucę tutaj przykład pewnego mechanizmu, który jakiś czas temu projektowałem i implementowałem. Jest to uproszczony schemat. Singletonu chciałem uniknąć, ale przesłanki ku jego zastosowaniu były na tyle duże, że pozostał. Duże I na początku nazwy oznacza interfejs, w nawiasach, dużymi literami wzorce. [code] (zdarzenie) (Mediator) (odbiorca) ProgressEvent \u0026mdash;\u0026gt; IProgressMonitor \u0026lt;\u0026mdash; IProgressListener (generuj zdarzenie) ^ ^ IDownloader \u0026mdash;\u0026mdash;\u0026mdash;-+ | IMerger | (Composite) | (Singleton) IProgressMonitorGroup \u0026lt; - - - SynchronizeManager\nISynchronizeRequest ^ | (Strategy) AbstractSynchronizeRequest +\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;+ | | | | TableSynchronizeRequest | ClassSynchronizeRequest ModuleSynchronizeRequest [/code]\nPanowie, jak byście zaimplementowali te mechanizmy bez interfejsów? Jedną, wielką protezą?\n","permalink":"https://blog.dywicki.pl/2007/04/04/o-abstrakcji-klas-i-interfejsow/","summary":"\u003cp\u003eOd jakiegoś czasu na \u003ca href=\"http://forum.php.pl/\"\u003eforum.php.pl\u003c/a\u003e spotykam się z różnymi zdaniami na temat interfejsów i klas abstrakcyjnych. Argumenty, które czasami się trafiają są chybione.\u003c/p\u003e\n\u003cp\u003eZacznijmy od tego, że trzeba potrafić rozróżnić interfejs od klasy abstrakcyjnej, \u003cstrong\u003eto nie to samo\u003c/strong\u003e!\nInterfejs jest najwyższym poziomem abstrakcji, który definiuje nowy, wolny od implementacji typ. Bez jakiejkolwiek linii kodu, tylko sygnatury metod publicznych.\nKlasa abstrakcyjna jest już początkiem konkretnej implementacji, zawiera kod ogólny i wymusza w klasach dziedziczących dorzucenie konkretnych metod, które są specyficzne, inne, różne. Mogą trafić się takie przypadki, że klasa abstrakcyjna zawiera 5 metod, a jej pochodne tylko jedną. Czy jest to uzasadnione? Oczywiście. Ta jedna metoda determinuje nowy typ, który jest jawną specjalizacją.\u003c/p\u003e\n","title":"O abstrakcji klas i interfejsów"},{"content":"Pierwsze błędy Pamiętam swoje pierwsze implementacje MVC, w czasach gdy słowo framework nie było jeszcze trendy a wiele osób, w tym i ja, nawet go nie używało. W owych pierwszych implementacjach MVC model był pewnego rodzaju fasadą, która zapewniała dostęp do danych. Problem polegał na tym, że kod np klasy User wyglądał następująco:\n[sourcecode lang=\u0026ldquo;php\u0026rdquo;]query($sql); } } ?\u0026gt;[/sourcecode] Jak widać na powyższym listingu klasa jest odpowiedzialna za pobieranie danych. Problem takiej implementacji polega na tym, że wciąż operujemy na tablicach bądź na ResultSetach zwracanych przez obiekt odpowiedzialny za wykonywanie zapytań. Kod w takim wykonaniu jest mocno związany z bazą danych i jest ciężki do użycia w innych projektach. Co więcej w pierwszym podejściu nie korzystałem z wielu możliwości jakie daje programowanie obiektowe i po prostu odwołania do klasy nadrzędnej czy też metody abstrakcyjne były co najmniej sporadyczne. Także, każdy \u0026ldquo;model\u0026rdquo; miał swoją metodę getById, która miała swoje zapytanie. Jest to najprostsza implementacja, która zapewnia tylko jedno - wyłączenie zapytań do oddzielnych plików.\nWzorce Znacznie lepszym krokiem byłoby wykorzystanie możliwości chociażby dziedziczenia i użyć nazwanego przez Martina Fowlera wzorca ActiveRecord, który zapewnia nam mapowanie pojedynczej encji do klasy.\nProblem, jaki powstaje przy użyciu ActiveRecordu to niestety uzależnienie kodu od wybranej implementacji wzorca, co więcej kod będzie nieprzenośny, np nie da się go użyć bez zewnętrznych bibliotek. Zatem problem pozostaje taki jak był wcześniej - logika, która była związana z danymi (np przeliczanie wartości jednego pola w zależności od drugiego) została zawarta w modelu staje się bezużyteczna.\nProblemy te można rozwiązać wyraźnie oddzielając obiekty z których korzysta aplikacja od warstwy dostępu do nich. Tutaj rodzi się pojęcie Domain Model czy też Domain Object. Przede wszystkim jest to kod, który jest niezależny od źródła danych np obiekt Invoice możemy pobrać zarówno z bazy jak i z zewnętrznego systemu powiedzmy przez usługę sieciową. Obiekt zawsze zachowa się w ten sam sposób i jego użycie nie będzie zależne od miejsca z którego je uzyskaliśmy. Idealnym przykładem implementacji Domain Modelu są np beany utrwalane przy pomocy Hibernate. Mamy kod, który jest przenośny, w którym nie ma żadnych jawnych odwołań do informacji zawartych poza \u0026ldquo;obiektami domenowymi\u0026rdquo;, jest ona po prostu autonomiczna.\nCiężko jest określić czym w pierwszej kolejności się zająć bazą czy obiektami biznesowymi? Wydaje mi się, że modelując najpierw bazę danych ciężko jest wychwycić dziedziczenia pomiędzy obiektami biznesowymi i najzwyczajniej w świecie zostaną one pominięte. Z drugiej strony tworząc najpierw obiekty biznesowe możemy natrafić na trudności z odwzorowaniem całej, nie raz, złożonej struktury do encji w bazie.\nData Access Objects Dostęp warstwy z obiektami domenowymi realizujemy przez Data Access Objects. Jest to zespół klas, które zapewniają odczyt, usuwanie oraz zapisywanie obiektów (całość modyfikujemy przez dostępne w obiektach domenowych metody). DAO ma na celu zapewnienie jednolitego interfejsu dla dostępu do obiektów bez pojawiania się kodu specyficznego dla danego źródła danych, niezależnie czy to będzie baza danych czy usługa sieciowa.\nService Layer Warstwa usług to miejsce przecięć różnych źródeł danych. Granica między DAO a Service Layer jest dość istotna - DAO obejmuje transakcje systemowe podczas gdy Service Layer transakcje biznesowe. Może słowo wyjaśnienia na temat tych dwóch rodzai transakcji - pierwsza jest zwykle kontrolowana przez bazę danych i zawiera ciąg poleceń SQL. Transakcja biznesowa obejmuje jedną konkretną operację np przelew bankowy - to logowanie, określenie kwoty i odbiorcy, weryfikacja kodu jednorazowego oraz zablokowanie środków. Powodzenie takiej operacji zależy od wielu czynników w tym od systemów zewnętrznych. Warstwa usług jest bardzo przydatna w chwili gdy z tej samej logiki korzysta więcej niż jeden system. Niestety nie mam wielkiego doświadczenia z takimi sytuacjami i nie czuję się na siłach by o tym pisać, a to co tu przytoczyłem to głównie to co pamiętam z PoEAA.\n","permalink":"https://blog.dywicki.pl/2007/03/18/obiekty-biznesowe-w-aplikacji/","summary":"\u003ch3 id=\"pierwsze-błędy\"\u003ePierwsze błędy\u003c/h3\u003e\n\u003cp\u003ePamiętam swoje pierwsze implementacje MVC, w czasach gdy słowo framework nie było jeszcze trendy a wiele osób, w tym i ja, nawet go nie używało. W owych pierwszych implementacjach MVC model był pewnego rodzaju fasadą, która zapewniała dostęp do danych.\nProblem polegał na tym, że kod np klasy User wyglądał następująco:\u003c/p\u003e","title":"Obiekty biznesowe w aplikacji."},{"content":"Mam niebywałą przyjemność oznajmić, że dnia 23 lutego zostało wydane, jak sam tytuł posta wskazuje, Agavi 0.11 RC3. Do pierwszej, w pełni stabilnej wersji jest już coraz bliżej. Zgodnie z rozkładem jazdy został otwarty jeden ticket, którego realizacja została odsunięta na sam koniec. Mianowicie, opis migracji z wersji 0.10 do 0.11. Ogrom zmian, które przetaczały się przez trunk repozytorium mógł przyprawić o zawrót głowy. Zmiany z rewizji na rewizję potrafiły w jednym momencie zniszczyć skrzętnie budowane narzędzia, które opierały się na zmieniających się wciąż mechanizmach. Co zyskało Agavi o wersji 0.10? Przede wszystkim developerzy uwolnili projekt od niezręcznej i nieporęcznej konfiguracji w plikach INI, która poza łatwością odczytu nastręczała przede wszystkim problemów\u0026hellip; a to brak hierarchiczności, brak możliwości łączenia konfiguracji, w końcu brak narzędzia do walidacji zapisanych danych. W poście \u0026quot; Dlaczego konfiguracja w XML\u0026quot; porównywałem XML również do YAMLa. Sporą zmianą, naturalnie, na lepsze było zrezygnowanie z tradycyjnego flowu Mojavi 3. Do tej pory wyglądało to w ten sposób, że każda akcja miała metodę getRequestMethods, która zwracała informacje o tym w jaki sposób dostępna jest akcja. Czy to GET, POST, bądź cokolwiek (odpowiednie stałę w klasie Request - GET, POST, NONE). Teraz o sposób dostępu do akcji determinuje nazw akcji. Akcja o nazwie executeRead będzie wykonana w chwili żądania typu GET. Metoda o nazwie executeWrite będzie wykonana w chwili gdy otrzymamy formularz via POST. Metoda execute będzie wykonywana zawsze (o ile walidacja przebiegnie bez zakłuceń). Zysk z tego jest taki, że implementacja różnych kontrolerów nie wpływa na kształt akcji. W chwili gdy wiązały się z tym stałe GET/POST implementacja wywołań z poziomu konsoli była ciężka. W zapowiedziach pojawia się ConsoleRequest, ponieważ z Agavi 0.11 wyleciały kontrolery zależne od kontekstu. Jest jeden Controller, różne są implementacje requestu vide ConsoleRequest (jeszcze niegotowy, będzie w 1.0), WebRequest oraz SecureWebRequest. W międzyczasie pożegnaliśmy również stałe View::SUCCESS, ERROR, INPUT, ALERT, a metoda getDefaultViewName każdej akcji zwraca po prostu suffix do nazwy widoku (np. metoda akcji \u0026ldquo;Cart\u0026rdquo; zwraca wartość \u0026ldquo;Product\u0026rdquo;, stąd klasa widoku to CartProductView). Co więcej w połączeniu z innym mechanizmem Agavi, Output types, zmiany formatu widoku oraz języka nie wiążą się z implementacją bądź powielaniem logiki biznesowej. Implementujemy tylko logikę związaną z widokiem. Warto również wspomnieć, że od tej chwili metoda Controller::forward(module, action) jak i samo używanie powiązanych akcji jest odradzane, jako źródło potencjalnych problemów (dlaczego widok nie jest uruchamiany) tym bardziej, że tworzenie widoków i akcji załatwia samo Agavi przez taski dla Phinga. W chwili, gdy chcemy użyć innego widoku, spoza tych, które dostarcza sama akca po prostu zwracamy array(module, view name, parameters). Zniknęła również możliwości zrobienia forwarda z widoku (ogólnie problemy z request methods, to co było post-only nie szło przy fowardzie przy żądaniu otrzymanym via get), co wydaje się jak najbardziej uzasadnione. Widok nie jest organem decyzyjnym, który powinien wskazywać na wykonanie logiki biznesowej. Nie mniej jest możliwość przekierowania do widoku innej akcji.. poprzez redirect bądź poprzez zwrócenie array(module, view name, parameters).\nTo co jest bolesne w execution flow oferowanym w Agavi to niestety jego prostota. Przede wszystkim brakuje mi (jak w wielu miejscach Agavi) interfejsów. Jest to dla mnie naturalne, że dążę do generalizacji, interfejs jest podstawowym elementem, który uniezależnia od implementacji. Interesuje nas to, co jest widoczne na zewnątrz a nie to co wewnątrz implementacji. Brakuje mi opakowań dla tych tablic, które informacje o widoku. Prosty kontener, bean, który zawiera tylko informacje, ale nie jest tablicą. Przede wszystkim mam możliwość kontroli danych, które otrzymuje. Mogę już w fazie tworzenia obiektu reprezentującego flow wstępnie przeprowadzić jego walidację (czy widok istnieje?). Zmiany w akcjach i widokach jest jak najbardziej pozytywna i rzeczywiście usprawnia działanie całości. Nie mniej do wersji 2.0 w Agavi na pewno zajdzie ich jeszcze sporo, miejmy nadzieję, że również w celu uporządkowania struktur, usunięcia nadmiaru klas abstrakcyjnych i zastąpienia ich interfejsami (pamiętaj, zanim napiszesz linijkę w klasie, która jest autonomiczna, a której implementacja może się zmieniać, generalizuj, twórz typ bazowy).\nPytaniem ciągle jest czy Agavi podąży w stronę Symfony? Jak najmniej pisania.. Twórcy Symfony ochrzcili wersję 1.0 swojego frameworka nazwą, czy też przydomkiem \u0026ldquo;enterprise\u0026rdquo;. Ciężko mi powiedzieć czy było to uzasadnione. Temat Symfony-Agavi często pojawia się w rozmowach między Michałem Mechem a mną. Obaj jesteśmy zgodni w dwóch kwestiach - w Symfony pisze się bardzo szybko oraz ma ono bardzo dobrą dokumentację. Nie ustępuje ona pod żadnym względem dokumentacji Zend Frameworka.\nMyślę, że najlepszym życzeniem dla nas wszystkich będzie to: by developerzy Agavi nadążyli z dokumentacją za implementacją.\n","permalink":"https://blog.dywicki.pl/2007/02/24/agavi-011-rc3-flow/","summary":"\u003cp\u003eMam niebywałą przyjemność oznajmić, że dnia \u003ca href=\"http://trac.agavi.org/log/tags/0.11.0RC3\"\u003e23 lutego\u003c/a\u003e zostało wydane, jak sam tytuł posta wskazuje, Agavi 0.11 RC3. Do pierwszej, w pełni stabilnej wersji jest już coraz bliżej.\nZgodnie z rozkładem jazdy został otwarty \u003ca href=\"http://trac.agavi.org/ticket/340\"\u003ejeden ticket\u003c/a\u003e, którego realizacja została odsunięta na sam koniec. Mianowicie, opis migracji z wersji 0.10 do 0.11. Ogrom zmian, które przetaczały się przez trunk repozytorium mógł przyprawić o zawrót głowy. Zmiany z rewizji na rewizję potrafiły w jednym momencie zniszczyć skrzętnie budowane narzędzia, które opierały się na zmieniających się wciąż mechanizmach.\nCo zyskało Agavi o wersji 0.10? Przede wszystkim developerzy uwolnili projekt od niezręcznej i nieporęcznej konfiguracji w plikach INI, która poza łatwością odczytu nastręczała przede wszystkim problemów\u0026hellip; a to brak hierarchiczności, brak możliwości łączenia konfiguracji, w końcu brak narzędzia do walidacji zapisanych danych. W poście \u0026quot; \u003ca href=\"/2006/09/07/dlaczego-konfiguracja-w-xml/\"\u003eDlaczego konfiguracja w XML\u003c/a\u003e\u0026quot; porównywałem XML również do YAMLa.\nSporą zmianą, naturalnie, na lepsze było zrezygnowanie z tradycyjnego flowu Mojavi 3. Do tej pory wyglądało to w ten sposób, że każda akcja miała metodę getRequestMethods, która zwracała informacje o tym w jaki sposób dostępna jest akcja. Czy to GET, POST, bądź cokolwiek (odpowiednie stałę w klasie Request - GET, POST, NONE). Teraz o sposób dostępu do akcji determinuje nazw akcji. Akcja o nazwie executeRead będzie wykonana w chwili żądania typu GET. Metoda o nazwie executeWrite będzie wykonana w chwili gdy otrzymamy formularz via POST. Metoda execute będzie wykonywana zawsze (o ile walidacja przebiegnie bez zakłuceń). Zysk z tego jest taki, że implementacja różnych kontrolerów nie wpływa na kształt akcji. W chwili gdy wiązały się z tym stałe GET/POST implementacja wywołań z poziomu konsoli była ciężka. W zapowiedziach pojawia się ConsoleRequest, ponieważ z Agavi 0.11 wyleciały kontrolery zależne od kontekstu. Jest jeden \u003ca href=\"http://trac.agavi.org/browser/tags/0.11.0RC3/src/controller/AgaviController.class.php\"\u003eController\u003c/a\u003e, różne są implementacje requestu vide \u003ca href=\"http://trac.agavi.org/browser/tags/0.11.0RC3/src/request/AgaviConsoleRequest.class.php\"\u003eConsoleRequest\u003c/a\u003e (jeszcze niegotowy, będzie w 1.0), \u003ca href=\"http://trac.agavi.org/browser/tags/0.11.0RC3/src/request/AgaviWebRequest.class.php\"\u003eWebRequest\u003c/a\u003e oraz \u003ca href=\"http://trac.agavi.org/browser/tags/0.11.0RC3/src/request/AgaviSecureWebRequest.class.php\"\u003eSecureWebRequest\u003c/a\u003e.\nW międzyczasie pożegnaliśmy również stałe View::SUCCESS, ERROR, INPUT, ALERT, a metoda \u003ca href=\"http://trac.agavi.org/browser/tags/0.11.0RC3/samples/app/modules/Default/actions/IndexAction.class.php#L69\"\u003egetDefaultViewName\u003c/a\u003e każdej akcji zwraca po prostu suffix do nazwy widoku (np. metoda akcji \u0026ldquo;Cart\u0026rdquo; zwraca wartość \u0026ldquo;Product\u0026rdquo;, stąd klasa widoku to CartProductView).\nCo więcej w połączeniu z innym mechanizmem \u003ca href=\"/2007/02/22/agavi-output-types/\"\u003eAgavi, Output types\u003c/a\u003e, zmiany formatu widoku oraz języka nie wiążą się z implementacją bądź powielaniem logiki biznesowej. Implementujemy tylko logikę związaną z widokiem.\nWarto również wspomnieć, że od tej chwili \u003cstrong\u003emetoda Controller::forward(module, action) jak i samo używanie powiązanych akcji jest odradzane\u003c/strong\u003e, jako źródło potencjalnych problemów (dlaczego widok nie jest uruchamiany) tym bardziej, że tworzenie widoków i akcji załatwia samo Agavi przez taski dla \u003ca href=\"http://phing.info\"\u003ePhinga\u003c/a\u003e. W chwili, gdy chcemy użyć innego widoku, spoza tych, które dostarcza sama akca po prostu zwracamy array(module, view name, parameters). Zniknęła również możliwości zrobienia forwarda z widoku (ogólnie problemy z request methods, to co było post-only nie szło przy fowardzie przy żądaniu otrzymanym via get), co wydaje się jak najbardziej uzasadnione.\nWidok nie jest organem decyzyjnym, który powinien wskazywać na wykonanie logiki biznesowej. Nie mniej jest możliwość przekierowania do widoku innej akcji.. poprzez redirect bądź poprzez zwrócenie array(module, view name, parameters).\u003c/p\u003e","title":"Agavi 0.11 RC3, flow"},{"content":"Jedną z nowości jaką niesie Agavi w wersji \u0026gt; 0.10 jest mechanizm output types. Jest to bardzo proste rozwiązanie, które umożliwia uniknięcie gimnastyki z tworzeniem widoków w różnych technologiach, z którymi wiąże się różna logika. Banalny przykład. Te same dane prezentujemy w postaci HTML jak i PDF a do tego możemy je pobierać przez XmlHttpRequest. Dane są praktycznie identyczne, różny jest format wynikowy i proces jego tworzenia. Dla zwykłej strony wskazujemy szablon, dorzucamy dane i koniec, dla XmlHttp zwracamy JSONa. Stworzenie outputu w formacie PDF nie będzie tak proste jak pozostałych, ponieważ konieczne będzie stworzenie układu strony, dorzucenie fontów etc. Ogólnie w żaden sposób nie da się połączyć tych formatów w jednym widoku bez sporej ilości warunków i \u0026ldquo;protez\u0026rdquo;. By uniknąć zakopania się w tym wszystkim zwykle tworzy się dodatkową akcję, która w sporej części pokrywała się z pierwotną a różni się tylko widokiem i szablonami. Począwszy od Agavi 0.11 problem przestaje istnieć.\nW pliku konfiguracyjnym output_types.xml określamy renderer dla danej technologii, dodajemy obiekty przedefiniowane (parameters name=\u0026ldquo;assigns\u0026rdquo;) i następnie konfigurujemy mapowania adresów do plików (swoją drogą najlepsza implementacja tego mechanizmu z jaką się do tej pory spotkałem). Jest odpowiedni plik zawierający definicję routingu.\nZajmijmy się jednak w pierwszej kolejności konfiguracją output types: [xml]\u0026lt; ?xml version=\u0026ldquo;1.0\u0026rdquo; encoding=\u0026ldquo;UTF-8\u0026rdquo;?\u0026gt; rreqctlusr tmsubdir text/html; charset=UTF-8\ntext/javascript; charset=UTF-8 [/xml]\nJak widać trochę tej konfiguracji jest, nie mniej celowo usunąłem przekazywanie parametrów do drugiego formatu wynikowego by pokazać, że w najskromniejszej wersji definicja taka potrafi się zmieścić maksymalnie w 10 linijkach. Do wszystkich parametrów możemy odwoływać się w widoku. Specyficzne są parametry o nazwie assigns oraz i18n. Pierwszy z nich Agavi wykorzysta po to by od razu w fazie tworzenia renderera wrzucić do niego wskazane obiekty, które znajdują się w kontekście. Drugi z atrybutów jest szczególnie przydatny podczas tworzenia aplikacji z wieloma językami. Parametr i18n jest prefiksem dla nazwy pliku. W przypadku gdy przypiszemy mu wartość subdir framework będzie szukał szablonów po katalogach np. pl/IndexSuccess, en/IndexSuccess. Inne, dopuszczalne wartości to postfix oraz prefix. Nazwy szablonów to odpowiednio IndexSuccess_pl oraz pl_IndexSuccess Atrybut extension określa suffix dla nazwy pliku, którego użyje Agavi przy wczytywaniu szablonu np IndexSuccess.tpl.php. Argumenty ignore_slots oraz ignore_decorators odnoszą się do strategii budowania widoku. W chwili gdy zrezygnujemy z nich wynik nie będzie dekorowany. Tzn. w odpowiedzi użytkownik zobaczy tylko treść wygenerowaną przez widok akcji. Tutaj drobna uwaga. W wersji stabilnej Agavi 0.11 mechanizm ten zachowuje się nieco inaczej. Wybór plików oraz zachowanie dekoratora determinuje layout i elementy layer.\nNastępnie w routes.xml dla każdej ścieżki możemy określić również format wynikowy danych. Np: [xml][/xml]\nW tym momencie, wszystkie adresy kończące się na /ajax będą obsługiwane w nieco inny sposób niż pozostałe. To znaczy, że nie będzie dekorowany output. Dodatkowo zostaną użyte inne pliki szablonów do generowania treści.\nZdaję sobie sprawę z tego, że opisałem ten mechanizm dość chaotycznie i bardziej skupiłem się na jego konfiguracji, ale na przykładową aplikację będziecie musieli poczekać do czasu gdy skończę artykuł dla PHP Solutions (czyżby Agavi tematem numeru?) bądź do pojawienia się nowego Code-House. :)\n","permalink":"https://blog.dywicki.pl/2007/02/22/agavi-output-types/","summary":"\u003cp\u003eJedną z nowości jaką niesie Agavi w wersji \u0026gt; 0.10 jest mechanizm output types. Jest to bardzo proste rozwiązanie, które umożliwia uniknięcie gimnastyki z tworzeniem widoków w różnych technologiach, z którymi wiąże się różna logika. Banalny przykład. Te same dane prezentujemy w postaci HTML jak i PDF a do tego możemy je pobierać przez XmlHttpRequest. Dane są praktycznie identyczne, różny jest format wynikowy i proces jego tworzenia. Dla zwykłej strony wskazujemy szablon, dorzucamy dane i koniec, dla XmlHttp zwracamy JSONa. Stworzenie outputu w formacie PDF nie będzie tak proste jak pozostałych, ponieważ konieczne będzie stworzenie układu strony, dorzucenie fontów etc. Ogólnie w żaden sposób nie da się połączyć tych formatów w jednym widoku bez sporej ilości warunków i \u0026ldquo;protez\u0026rdquo;. By uniknąć zakopania się w tym wszystkim zwykle tworzy się dodatkową akcję, która w sporej części pokrywała się z pierwotną a różni się tylko widokiem i szablonami. Począwszy od Agavi 0.11 problem przestaje istnieć.\u003c/p\u003e","title":"Agavi, Output types"},{"content":"Wiele razy spotykałem się z negatywnymi opiniami na temat Propela. Przyznaję, nie jest to narzędzie doskonałe, ale bez wątpienia, w tej chwili jest to wiodący ORM dla PHP.\nJedną z wad Propela, która pojawia się chyba najczęściej jest XML i definiowanie tabel w pliku XML. Otóż drodzy moi, nie jest to konieczność. Schemat z istniejącej bazy danych można bez problemu przenieść do XMLa a następnie bez najmniejszego problemu wygenerować z niego klasy. Możemy zrobić to dwoma poleceniami. Pierwsze jest dostępne po instalacji przy pomocy PEARa, drugie przy korzystaniu z Phinga:\n[code]// propel-gen project target propel-gen sheep creole propel-gen sheep om // bądź phing -Dproject=project -Dtarget=target phing -Dproject=sheep -Dtarget=creole phing -Dproject=sheep -Dtarget=om[/code]\nNaszym oczom ukaże się kilka informacji o przebiegu całego procesu, po czym będziemy mogli korzystać z wygenerowanych klas. :)\nPropel 1.3 Propel 1.3 korzysta z PDO dlatego też, task \u0026ldquo;creole\u0026rdquo; niestety nie działa. Jeśli ktoś chce korzystać z możliwości generowania schematu musi niestety korzystać na przemian z wersji 1.2 i 1.3 (1.2 generuje schemat, 1.3 generuje klasy).\nMigrowanie pomiędzy bazami danych Propel umożliwia zrzucenie struktury bazy danych do pliku zawierającego definicje tabel. Aby to zrobić wystarczy skorzystać z taska sql. Warto pamiętać, że schemat SQL jest budowany na podstawie pliku XML. Zmieniając jedną dyrektywę w konfiguracji generatora (propel.database.url) można bez problemu przenieść całą bazę\nPrzenoszenie danych Istnieje również możliwość przeniesienia danych z istniejącej bazy, służy do tego task datadump. Propel zrzuca zawartość wszystkich tabeli do plików XML po to by móc następnie wygenerować z niego zapytania insert. Aby to zrobić wystarczą dwa polecenia: [code]propel-gen sheep datadump propel-gen sheep datasql[/code]\nPropel a ociężałość Trudno się nie zgodzić, że używanie narzędzi typu ORM powoduje wydłużenie czasu wykonywania skryptu, ale jak by nie patrzeć, znacznie też skraca czas potrzebny na tworzenie kodu odpowiedzialnego za warstwę DAO, co zwykle tuż po tworzeniu widoku zajmuje najwięcej czasu. Myślę, że warto tu wspomnieć o Propelu 2.0, który ma obsługiwać dostęp do pól przez metody __get i __set dzięki czemu całość może stać się lżejsza a ilość kodu, który jest generowanego ulegnie widocznemu zmniejszeniu.\n","permalink":"https://blog.dywicki.pl/2007/02/11/propel-12-a-istniejaca-baza-danych/","summary":"\u003cp\u003eWiele razy spotykałem się z negatywnymi opiniami na temat Propela. Przyznaję, nie jest to narzędzie doskonałe, ale bez wątpienia, w tej chwili jest to wiodący ORM dla PHP.\u003c/p\u003e\n\u003cp\u003eJedną z wad Propela, która pojawia się chyba najczęściej jest XML i definiowanie tabel w pliku XML. Otóż drodzy moi, nie jest to konieczność. Schemat z istniejącej bazy danych można bez problemu przenieść do XMLa a następnie bez najmniejszego problemu wygenerować z niego klasy. Możemy zrobić to dwoma poleceniami. Pierwsze jest dostępne po instalacji przy pomocy PEARa, drugie przy korzystaniu z Phinga:\u003c/p\u003e","title":"Propel 1.2 a istniejąca baza danych"},{"content":"Singleton jest chyba pierwszym z \u0026ldquo;wzorców projektowych\u0026rdquo; jaki wszyscy poznaliśmy. Prosty w implementacji, jeszcze łatwiejszy w użyciu, ale pociągający za sobą stos negatywnych konsekwencji.\nW poszukiwaniu informacji i zdań o singletonie w polskim internecie trafiłem na Wikipedię, gdzie znalazłem zdanie, które podsumowało to czym jest tenże \u0026ldquo;wzorzec\u0026rdquo;:\nSingleton jest też uznawany za antywzorzec, gdyż często jest tylko eufemizmem dla zmiennej globalnej.\nW książce \u0026quot; Refaktoryzacja do wzorców projektowych\u0026quot; padają kolejne dwa ważne zdania:\nSingleton to przede wszystkim wykorzystanie mechanizmów chroniących języka programowania do ochrony tylko jednego aspektu: jednostkowości. Prawdziwym problemem z singletonami polega na tym, że są doskonałą wymówką, aby lekko potraktować kwestię widoczności obiektów.\nGłówną przesłanką do stosowania singletonu jest to by mieć tylko jedną instancję danej klasy, ale czy nie da się załatwić tego w inny sposób? Oczywiście, że da się. Problemem jest tylko to by poświęcić więcej czasu na projekt, po prostu pomyśleć. W chwili gdy mamy połączenie z bazą danych i tak jest ono tworzona w jakimś miejscu, zwykle jest to jakiś kontroler bądź inny przyczółek w którym koncentruje się \u0026ldquo;władza\u0026rdquo;. Jest to miejsce w którym i tak musimy daną instancję skonfigurować. Co to znaczy? Ano to, że cały ten singleton i tak nie jest autonomiczny, ponieważ jest zależny od czynników zewnętrznych. Idąc dalej - czy nie lepiej by było pchnąć stworzony już obiekt do tych miejsc gdzie będzie potrzebny? Oczywiście, ktoś powie, że wydłużą się definicje metod i tak dalej. Fakt, to może być problem, ponieważ metody, które przyjmują powyżej 4 argumentów stają się \u0026ldquo;ciężkie\u0026rdquo;. Ciężkie również pod względem zapamiętania ich wywoływania. Nie można tu również zapominać o tym, że nie musi być przymusu przekazywania za każdym razem danej instancji. Mamy do dyspozycji konstruktory jak również kompozycję, ogólnie pojętą fazę \u0026ldquo;konfiguracji\u0026rdquo;. Zaletą unikania singletonów jest bardzo duży plus - obiekt nie jest widoczny tam gdzie nie powinien. Jest to znacznie lepsze podejście tym bardziej, że globalnie dostępny obiekt lubi kusić, kusić łatwością dostępu. Zawsze gdy myślisz o tym by użyć singletonu myśl o nim jak o zmiennej globalnej, bo tym w gruncie rzeczy się wkrótce stanie, elementem, który będzie powodował, że kod stanie się nieczytelny a kontrola dostępu do instancji wbrew pozorom, zamiast trudniejsza, jeszcze łatwiejsza.\nWydajność Za singletonem może przemawiać to, że powoduje on wzrost wydajności poprzez oszczędność pamięci (mniej stworzonych obiektów, mniej zużytej pamięci). Niestety często pomijanym faktem jest to, że zysk z takiego singletonu i tak jest niezauważalny, a w samym PHP wywołania statyczne są znacznie wolniejsze od tradycyjnych \u0026ldquo;dynamicznych\u0026rdquo; metod.\nSingleton a testy jednostkowe Singleton znacznie utrudnia testowanie kodu, ponieważ uniemożliwia on pełne rozbicie komponentów. Elastyczniejsze okazuje się użycie metod, które pozwalają \u0026ldquo;wstrzyknąć\u0026rdquo; określony obiekt, który jest w danej chwili potrzebny. Elementy, które są przykryte singletonem są niewymienne, muszą być stałe. W chwili gdy singleton tworzy sam instancję klasy pochodnej zaczynamy mieć do czynienia w gruncie rzeczy z abstract factory (fabryką abstrakcyjną) bądź factory method (metodą fabryczną) co w efekcie można nazwać bardzo prosto - przerostem formy nad treścią. Raz stworzony i zaszyty wewnątrz singletonu obiekt jest świętą krową, nie da się go zastąpić mimo, że na potrzeby testów potrzebny jest leciutki obiekt, który tylko dostarczy odpowiednie dane bądź zachowa informacje o wywołaniach (stub, mock object). Co gorsza, w chwili gdy mamy do czynienia z typowym \u0026ldquo;kontekstem\u0026rdquo;, który tworzy w prywatnym konstruktorze kolejne usługi nie mamy możliwości ich podmiany na czas testów. Osobiście spotkałem się z sytuacją, w której testy kończyły się niepowodzeniem, ponieważ w konstruktorze kontekstu było tworzone okno aplikacji.\nPołączenie singleton+singleton a Java Warto zapamiętać, że odwołania pomiędzy singletonami w Javie nie mogą występować w fazie inicjowania obiektów. To znaczy że kod, w którym konstruktor singletonu A wymaga singletonu B, a ten z kolei singletonu A to dostaniemy odpowiedni wyjątek. Przykładowo: kontekst tworzy nowe połączenie, które pobiera instancję jeszcze niestworzonego kontekstu by dobrać się do konfiguracji.\nWnioski Zanim zdecydujesz się na użycie singletonu przeczytaj trzy cytowane zdania i zastanów się czy rzeczywiście nie ma alternatywy? Nie ma sytuacji w której singleton jest niezbędny, zawsze można znaleźć coś lepszego niż zmienna globalna do przekazywania instancji. Pamiętaj singleton jest wypaczeniem idei programowania obiektowego na potrzeby leniwych programistów.\n","permalink":"https://blog.dywicki.pl/2007/02/01/singleton/","summary":"\u003cp\u003eSingleton jest chyba pierwszym z \u0026ldquo;wzorców projektowych\u0026rdquo; jaki wszyscy poznaliśmy. Prosty w implementacji, jeszcze łatwiejszy w użyciu, ale pociągający za sobą stos negatywnych konsekwencji.\u003c/p\u003e\n\u003cp\u003eW poszukiwaniu informacji i zdań o singletonie w polskim internecie trafiłem na \u003ca href=\"http://pl.wikipedia.org/wiki/Wzorzec_singletonu\"\u003eWikipedię\u003c/a\u003e, gdzie znalazłem zdanie, które podsumowało to czym jest tenże \u0026ldquo;wzorzec\u0026rdquo;:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSingleton jest też uznawany za \u003ca href=\"http://pl.wikipedia.org/wiki/Antywzorzec\" title=\"Antywzorzec\"\u003eantywzorzec\u003c/a\u003e, gdyż często jest tylko eufemizmem dla \u003ca href=\"http://pl.wikipedia.org/wiki/Zmienna_globalna\" title=\"Zmienna globalna\"\u003ezmiennej globalnej\u003c/a\u003e.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eW książce \u0026quot; \u003ca href=\"http://helion.pl/ksiazki/refawp.htm\"\u003eRefaktoryzacja do wzorców projektowych\u003c/a\u003e\u0026quot; padają kolejne dwa ważne zdania:\u003c/p\u003e","title":"Singleton"},{"content":"No.. kolejny powrót. :) Dzięki serdeczne wszystkim za pomoc w odzyskaniu backupu, mam nadzieję, że to był ostatni raz, kiedy doszło do takiej sytuacji. Na deser kawałek kodu, który kiedyś wyprodukowałem mylnie przekonany, że będzie szybszy niż explode\u0026hellip; [php]\u0026lt; ?php /\\\\ \\* Funkcja zwracajaca prawa i lewa strone ciagu z kropka \\* \\* @param string $string ciag z kropka \\* @return array lewa strona, prawa strona kropki \\* @author Lukasz Dywicki **/ function explodedot($string) { $dotpos = strpos($string, \u0026lsquo;.\u0026rsquo;); if($dotpos !== false) { return array( substr($string, 0, $dotpos), substr($string, $dotpos+1) ); } return array($string, $string); } ?\u0026gt;[/php]\n","permalink":"https://blog.dywicki.pl/2006/11/22/powrot/","summary":"\u003cp\u003eNo.. kolejny powrót. :) Dzięki serdeczne wszystkim za pomoc w odzyskaniu backupu, mam nadzieję, że to był ostatni raz, kiedy doszło do takiej sytuacji.\nNa deser kawałek kodu, który kiedyś wyprodukowałem mylnie przekonany, że będzie szybszy niż explode\u0026hellip;\n[php]\u0026lt; ?php\n/\\\u003cem\u003e\\\u003c/em\u003e\n\\* Funkcja zwracajaca prawa i lewa strone ciagu z kropka\n\\*\n\\* @param string $string ciag z kropka\n\\* @return array lewa strona, prawa strona kropki\n\\* @author Lukasz Dywicki\n**/\nfunction explodedot($string) {\n$dotpos = strpos($string, \u0026lsquo;.\u0026rsquo;);\nif($dotpos !== false) {\nreturn array(\nsubstr($string, 0, $dotpos),\nsubstr($string, $dotpos+1)\n);\n}\nreturn array($string, $string);\n}\n?\u0026gt;[/php]\u003c/p\u003e","title":"Powrót"},{"content":"Mapa strony :)\n","permalink":"https://blog.dywicki.pl/mapa-strony/","summary":"\u003cp\u003eMapa strony :)\u003c/p\u003e","title":"Mapa strony"},{"content":"Zend od jakiegoś czasu rozwija z powodzeniem swój framework. Szturmuje on rynek dzięki wsparciu firmy i dobrej dokumentacji. Zastanawia mnie jednak, dlaczego inni zaczęli kopiować to co w ZF jest. Rozumiem konwencję nazewniczą, ok - to może komuś się podobać, rozumiem strukturę katalogów, może ktoś uzna ją za logiczną.. Nie mniej nazewnictwo i struktura prawdę mówiąc nie różni się niczym od tego co było standardem w PEAR.\nCo więcej, niektórzy po prostu przepisują spore fragmenty kodu, które są w ZF na swoje. Zapytam po co? Skoro jest coś podobnego w Zendzie to jaki sens jest w powielaniu praktycznie tego samego (Zend::loadClass, ZendRegistry, Zend_Router_Rewrite itp.)? Pomijam fakt, że Zend jest otwarty w tej chwili i na pomysły i na ludzi i zapytam, czy to ma jakiś sens?\nNie. Nie ma najmniejszego sensu ponieważ klony padną. ZF na 90% kiedyś wyjdzie i z powodzeniem wyprze wszystkie klony. Wyjście ZF to w dużej mierze kwestia prestiżu i marketingu a także być albo nie być dla PHP w świecie \u0026ldquo;rapid application development\u0026rdquo;, zgodnie z tym co głosi oficjalna strona http://framework.zend.com: Now, the world\u0026rsquo;s most popular web programming language gets even better with an easy to use framework for developing the next generation of web applications.. Bez tego Ruby oraz inne języki wspierane frameworkami po prostu zepchną PHP w kąt. Jak widać po statystykach PHP odrobiło spore straty rosnące niemal bez przerwy od zeszłego roku. Czy to tylko zasługa ZF? Wydaje mi się, że w dużej mierze tak.\nWnioskuję, że jeśli ktoś już zaczął robić framework wzorowany na zendowym to zna architekturę tego drugiego i nie tylko łatwiej ale i szybciej byłoby stworzyć to w oparciu o ZF. Pragnę nadmienić, że ZF ewoluuje, ostatnie propozycje zmian dotyczą między innymi warstwy MVC (dodatkowe informacje tu i tu).\n","permalink":"https://blog.dywicki.pl/2006/10/03/zend-framework-and-others/","summary":"\u003cp\u003eZend od jakiegoś czasu rozwija z powodzeniem swój framework. Szturmuje on rynek dzięki wsparciu firmy i dobrej dokumentacji. Zastanawia mnie jednak, dlaczego inni zaczęli kopiować to co w ZF jest. Rozumiem konwencję nazewniczą, ok - to może komuś się podobać, rozumiem strukturę katalogów, może ktoś uzna ją za logiczną.. Nie mniej nazewnictwo i struktura prawdę mówiąc nie różni się niczym od tego co było standardem w PEAR.\u003c/p\u003e\n\u003cp\u003eCo więcej, niektórzy po prostu przepisują spore fragmenty kodu, które są w ZF na swoje. Zapytam po co? Skoro jest coś podobnego w Zendzie to jaki sens jest w powielaniu praktycznie tego samego (Zend::loadClass, ZendRegistry, Zend_Router_Rewrite itp.)? Pomijam fakt, że \u003ca href=\"http://framework.zend.com/wiki/display/ZFDEV/Home\"\u003eZend jest otwarty w tej chwili i na pomysły i na ludzi\u003c/a\u003e i zapytam, czy to ma jakiś sens?\u003c/p\u003e","title":"Zend Framework i inni"},{"content":"Dzisiejszego dnia skończyłem opisywać implementację techniki Mock Objects przy użyciu PHP Unit. Zapraszam do zapoznania się z tekstem i wyrażania opinii na jego temat.\n","permalink":"https://blog.dywicki.pl/2006/09/27/php-unit-3-i-mock-objects-2/","summary":"\u003cp\u003eDzisiejszego dnia skończyłem opisywać implementację techniki \u003ca href=\"http://en.wikipedia.org/wiki/Mock_object\"\u003eMock Objects\u003c/a\u003e przy użyciu \u003ca href=\"http://phpunit.de\"\u003ePHP Unit\u003c/a\u003e. Zapraszam do zapoznania się z \u003ca href=\"http://code-house.net/PHPUnit3MockObjects\"\u003etekstem\u003c/a\u003e i wyrażania opinii na jego temat.\u003c/p\u003e","title":"PHP Unit 3 i Mock Objects"},{"content":"Dzisiaj na wiki opisałem wszystkie znane dyrektywy konfiguracyjne generatora dla Propela 1.2 (wygląda na to, że pokrywają się one w dużej mierze z dyrektywami Propela 2.0). W najbliższym czasie opis konfiguracji projektu.\n","permalink":"https://blog.dywicki.pl/2006/09/24/propel-12-konfiguracja-generatora/","summary":"\u003cp\u003eDzisiaj \u003ca href=\"http://code-house.net/Propel12GeneratorConfiguration\"\u003ena wiki opisałem\u003c/a\u003e wszystkie znane \u003ca href=\"http://propel.phpdb.org/trac/browser/branches/1.2/generator/default.properties\"\u003edyrektywy konfiguracyjne generatora\u003c/a\u003e dla Propela 1.2 (wygląda na to, że \u003ca href=\"http://propel.phpdb.org/trac/browser/trunk/generator/default.properties\"\u003epokrywają się one\u003c/a\u003e w dużej mierze z dyrektywami Propela 2.0). W najbliższym czasie opis \u003ca href=\"http://code-house.net/Propel12ProjectConfiguration\"\u003ekonfiguracji projektu\u003c/a\u003e.\u003c/p\u003e","title":"Propel 1.2 - konfiguracja generatora"},{"content":"Wiem, że Smarty ma równie wielu przeciwników co zwolenników, ale odcinając się od dyskusji postanowiłem polecić zarówno tym pierwszym jak i drugim artykuł na temat obsługi cache w Smarty.\n","permalink":"https://blog.dywicki.pl/2006/09/24/cache-w-smarty/","summary":"\u003cp\u003eWiem, że Smarty ma równie wielu przeciwników co zwolenników, ale odcinając się od dyskusji postanowiłem polecić zarówno tym pierwszym jak i drugim artykuł na temat obsługi \u003ca href=\"http://www.mao.pl/art-cache-smarty.php\"\u003ecache w Smarty\u003c/a\u003e.\u003c/p\u003e","title":"Cache w Smarty"},{"content":"Zachęcony komentarzem do poprzedniego posta postanowiłem zoptymalizować cały builder dla Propela. Zasada działania jest taka sama jak wcześniej - usunięcie zbędnych iteracji. Kod generowany przez moje poprawki nie należy do najszybszych, ale z moich testów wynika jednoznacznie - jest szybszy. Szybki sposób instalacji FasterPHP5ComplexPeerBuilder.php: pobrać plik http://delta.dywicki.pl/propel/FasterPHP5ComplexPeerBuilder.php skopiować do folderu propel/engine/builder/om/php5. w build.properties dla projektu ustawić dyrektywę: [code]propel.builder.peer.class = propel.engine.builder.om.php5.FasterPHP5ComplexPeerBuilder[/code] Wskazuje ona na nazwę klasy której obiekt będzie odpowiedzialny za wygenerowanie kodu dla klasy tabeli (*Peer). Po tym wszystkim odpalamy generator z targetem om poleceniem: [code]propel-gen katlog-projektu om[/code] bądź [code]phing -Dproject=nazwa -Dtarget=om[/code].\nPamiętaj, zmienić można o wiele więcej!\n","permalink":"https://blog.dywicki.pl/2006/09/23/propel-12-przyspieszamy/","summary":"\u003cp\u003eZachęcony \u003ca href=\"/2006/09/21/propel-12-przyspiesz-go-nawet-do-2-razy/#comment-1094\"\u003ekomentarzem\u003c/a\u003e do \u003ca href=\"/2006/09/21/propel-12-przyspiesz-go-nawet-do-2-razy\"\u003epoprzedniego posta\u003c/a\u003e postanowiłem zoptymalizować cały builder dla Propela. Zasada działania jest taka sama jak wcześniej - usunięcie zbędnych iteracji. Kod generowany przez moje poprawki nie należy do najszybszych, ale z \u003ca href=\"http://www.phpfi.com/155990\"\u003emoich testów\u003c/a\u003e wynika jednoznacznie - jest szybszy.\nSzybki sposób instalacji \u003ca href=\"http://delta.dywicki.pl/propel/FasterPHP5ComplexPeerBuilder.php\"\u003eFasterPHP5ComplexPeerBuilder.php\u003c/a\u003e:\npobrać plik \u003ca href=\"http://delta.dywicki.pl/propel/FasterPHP5ComplexPeerBuilder.php\"\u003ehttp://delta.dywicki.pl/propel/FasterPHP5ComplexPeerBuilder.php\u003c/a\u003e\nskopiować do folderu propel/engine/builder/om/php5.\nw build.properties dla projektu ustawić dyrektywę:\n[code]propel.builder.peer.class = propel.engine.builder.om.php5.FasterPHP5ComplexPeerBuilder[/code]\nWskazuje ona na nazwę klasy której obiekt będzie odpowiedzialny za wygenerowanie kodu dla klasy tabeli (*Peer).\nPo tym wszystkim odpalamy generator z targetem om poleceniem:\n[code]propel-gen katlog-projektu om[/code]\nbądź\n[code]phing -Dproject=nazwa -Dtarget=om[/code].\u003c/p\u003e","title":"Propel 1.2 - przyśpieszamy"},{"content":"Jak wiadomo szybkość nie jest domeną Propela. Dzisiejszego popołudnia na oficjalnym kanale Propela odbyłem rozmowę z osobą która twierdziła, że można przyśpieszyć propela o 3 razy (a przymajmniej metodę doSelectJoinAll). Nie zdziwcie się - miała ona rację! :)\nProblem w doSelectJoinAll polega na tym, że są wykonywane zbędne iteracje mające na celu sprawdzenie czy element zawiera obiekt dołączanej encji. Można je z powodzeniem zastąpić odpowiednią mapą, która zawiera identyfikatory tych encji, które już są dodane do obiektu. Osoba, która to twierdziła miała odpowiedni kod, który zgadnijcie - zadziałał. Aby zamiana była uniwersalna - zmieniłem co trzeba w generatorze. Sama metoda działa dwa i pół raza szybciej! Dla zainteresowanych - plik zmieniony przeze mnie - PHP5ComplexPeerBuilder.php. Sprawdź czy Twoje doSelectJoinAll przyśpieszy. :)\nObecnie czasy, które uzyskuje: 0.045847177505493s - nowy build 0.06196403503418s - stary build Nie mniej wcześniej różnice były znaczne - stary build potrafił zająć do 0.12 s! Wynik prosty - po zmianach (czasy mają znacznie mniejsze wahania) można przyśpieszyć tylko tą jedną metodę o dwa razy. Różnica będzie rosła wraz z ilością kluczy obcych w jednej tabeli. Im ich więcej tym stary build będzie wolniejszy.\n","permalink":"https://blog.dywicki.pl/2006/09/21/propel-12-przyspiesz-go-nawet-do-2-razy/","summary":"\u003cp\u003eJak wiadomo szybkość nie jest domeną Propela. Dzisiejszego popołudnia na oficjalnym kanale Propela odbyłem rozmowę z osobą która twierdziła, że można przyśpieszyć propela o 3 razy (a przymajmniej metodę doSelectJoinAll). Nie zdziwcie się - miała ona rację! :)\u003c/p\u003e\n\u003cp\u003eProblem w doSelectJoinAll polega na tym, że są wykonywane zbędne iteracje mające na celu sprawdzenie czy element zawiera obiekt dołączanej encji. Można je z powodzeniem zastąpić odpowiednią mapą, która zawiera identyfikatory tych encji, które już są dodane do obiektu. Osoba, która to twierdziła miała odpowiedni kod, który zgadnijcie - zadziałał.\nAby zamiana była uniwersalna - zmieniłem co trzeba w generatorze. Sama metoda działa dwa i pół raza szybciej! Dla zainteresowanych - plik zmieniony przeze mnie - \u003ca href=\"http://delta.dywicki.pl/propel/PHP5ComplexPeerBuilder.php\"\u003ePHP5ComplexPeerBuilder.php\u003c/a\u003e. Sprawdź czy Twoje doSelectJoinAll przyśpieszy. :)\u003c/p\u003e","title":"Propel 1.2 - przyśpiesz go nawet do 2 razy!"},{"content":"Zapraszam do zapoznania się z tekstem odnośnie użycia frameworków, który opublikowałem wczoraj na wiki.\n","permalink":"https://blog.dywicki.pl/2006/09/20/gotowe-rozwiazania/","summary":"\u003cp\u003eZapraszam do zapoznania się z tekstem \u003ca href=\"http://code-house.net/Frameworks\"\u003eodnośnie użycia frameworków\u003c/a\u003e, który opublikowałem wczoraj na wiki.\u003c/p\u003e","title":"Gotowe rozwiązania"},{"content":"Dzisiejszego popołudnia udało mi się napisać kilka zdań na temat Creole. Zaintereoswanych zapraszam do odpowiedniej kategorii na moim prywatnym wiki. Komentarze proszę umieszczać pod tym postem.\n","permalink":"https://blog.dywicki.pl/2006/09/17/kilka-slow-na-temat-creole/","summary":"\u003cp\u003eDzisiejszego popołudnia udało mi się napisać kilka zdań na temat Creole. Zaintereoswanych zapraszam do odpowiedniej kategorii na moim \u003ca href=\"http://code-house.net/CreoleCategory\"\u003eprywatnym wiki\u003c/a\u003e. Komentarze proszę umieszczać pod tym postem.\u003c/p\u003e","title":"Kilka słów na temat Creole"},{"content":"Od jakiegoś czasu zastanawiam się nad tym, czy rzeczywiście mam rację. Chodzi mi o moje przekonania. Ostatnio, druzgodzący upadek Mojavi 4 dał mi sporo do myślenia.\nMam taki sposób bycia, że gdy się do czegoś przekonam staram się to poznać jak najlepiej oraz.. promuję? Nie wiem jak to dokładnie nazwać. Czasami angażuję się w dyskusje, które przeradzają się w typowe walki. Nie chcę mówić, że narzucam swoje zdanie, bo staram się by nigdy tego nie robić. Udało mi się kilka osób przekonać do Propela/Mojavi, ale czy zrobiłem to słusznie? Mam na myśli to, czy moje podejście jest \u0026ldquo;w porządku\u0026rdquo;? Czy w swym przekonaniu o nieomylności w stosunku do pewnych rzeczy nie przekraczam granic?\n","permalink":"https://blog.dywicki.pl/2006/09/11/pomylki-i-ja/","summary":"\u003cp\u003eOd jakiegoś czasu zastanawiam się nad tym, czy rzeczywiście mam rację. Chodzi mi o moje przekonania. Ostatnio, druzgodzący upadek Mojavi 4 dał mi sporo do myślenia.\u003c/p\u003e\n\u003cp\u003eMam taki sposób bycia, że gdy się do czegoś przekonam staram się to poznać jak najlepiej oraz.. promuję? Nie wiem jak to dokładnie nazwać.\nCzasami angażuję się w dyskusje, które przeradzają się w typowe walki. Nie chcę mówić, że narzucam swoje zdanie, bo staram się by nigdy tego nie robić.\nUdało mi się kilka osób przekonać do Propela/Mojavi, ale czy zrobiłem to słusznie? Mam na myśli to, czy moje podejście jest \u0026ldquo;w porządku\u0026rdquo;? Czy w swym przekonaniu o nieomylności w stosunku do pewnych rzeczy nie przekraczam granic?\u003c/p\u003e","title":"Pomyłki i ja."},{"content":"Od jakiegoś czasu trwają prace nad drugą wersją propela. Do najważniejszych zmian należy przejście na PDO. Jest to fakt, który najbardziej mnie smuci. Koszt zwiazany z wykorzystaniem Creole był zbyt wysoki jak na ORM i autorzy przeszli na znacznie szybsze PDO. W tej chwili dla każdej bazy danych jest stworzony odpowiedni, prosty adapter. Ilość obsługiwanych baz danych nie wzrośnie. W dalszym ciągu będzie to MySQL, PostgreSQL, Oracle, Microsoft SQL Server (Sybase), SQLite. Niewątpliwą nowością jest cache, który będzie prawdopodobnie funkcjonował jako kolejny adapter. Mam nadzieję, że dodanie cache przyśpieszy nieco Propela, ponieważ część obiektów, mimo, że nie jest zmieniana (jest to fragment złączenia) zawsze jest pobierana i transformowana. Spore zmiany zajdą w Criterii. W drugiej wersji budowanie złożonych warunków stanie się banalne, a to za sprawą całkiem nowej implementacji. Doczekamy się w końcu obsługi idenity map, dzięki czemu klucz główny zawsze będzie wskazywał ten sam obiekt.\nWięcej informacji dla zainteresowanych nową wersją do znalezienia na wiki propela, na które serdecznie zapraszam. :)\n","permalink":"https://blog.dywicki.pl/2006/09/10/propel-20-co-nowego/","summary":"\u003cp\u003eOd jakiegoś czasu \u003ca href=\"http://propel.phpdb.org/trac/milestone/2.0\"\u003etrwają prace\u003c/a\u003e nad drugą wersją propela. Do najważniejszych zmian należy przejście na PDO. Jest to fakt, który najbardziej mnie smuci. Koszt zwiazany z wykorzystaniem Creole był zbyt wysoki jak na ORM i autorzy przeszli na znacznie szybsze PDO. W tej chwili dla każdej bazy danych jest stworzony odpowiedni, prosty adapter. Ilość obsługiwanych baz danych nie wzrośnie. W dalszym ciągu będzie to MySQL, PostgreSQL, Oracle, Microsoft SQL Server (Sybase), SQLite.\nNiewątpliwą nowością jest cache, który będzie prawdopodobnie funkcjonował jako kolejny adapter. Mam nadzieję, że dodanie cache przyśpieszy nieco Propela, ponieważ część obiektów, mimo, że nie jest zmieniana (jest to fragment złączenia) zawsze jest pobierana i transformowana.\nSpore zmiany zajdą w Criterii. W drugiej wersji budowanie złożonych warunków \u003ca href=\"http://propel.phpdb.org/trac/wiki/Development/Criteria\"\u003estanie się banalne\u003c/a\u003e, a to za sprawą całkiem nowej implementacji. Doczekamy się w końcu obsługi \u003ca href=\"http://www.martinfowler.com/eaaCatalog/identityMap.html\"\u003eidenity map\u003c/a\u003e, dzięki czemu klucz główny zawsze będzie wskazywał ten sam obiekt.\u003c/p\u003e","title":"Propel 2.0, co nowego"},{"content":"W czasach kiedy najbardziej trendy jest YAML twierdzę, że jest on niczym w porównaniu do tego, co oferuje XML. DLaczego?\nDlatego, że tworząc dowolny dokument XML mogę go w bardzo prosty sposób rozszeżyć. Jak? Poprzez XInclude. Jego obsługa jest nawet w PHP więc nie ma z tym jakichkolwiek problemów. Definiuję tylko odnośnik i mam dołączony ten XML [po wykonaniu $DOMDocument-\u0026gt;xinclude();].\nKolejna sprawa. Walidacja. Nie muszę tworzyć żadnego kodu w PHP by sprawdzić poprawność XMLa. Wystarczy, że stworzę dobry schemat w XSD i mam walidację załatwioną bez jakiegokolwiek warunku. Do tego dochodzą ograniczenia takie jak rekurencja. W PHP muszę to załatwiać poprzez wielokrotne wywołanie funkcji, które za każdym razem wydłuża czas. Normalnie załatwi mi to DOM XML, który jest napisany w C i będzie znacznie szybszy.\nParę linijek kodu i moja konfiguracja zapisana w XMLu stanie się czytelna dla oka przy użyciu XSLT w połączeniu z PHP. Także czy dalej YAML i INI jest najlepszym sposobem przechowywania konfiguracji? Moim zdaniem nie - i nigdy nie będzie. XML jest technologią, która fakt faktem, jest nadmiarowa, ale oferuje bardzo dużą popularność. Można mówić, że YAML jest czytelny i przyjazny, ale nie oferuje takiej funkcjonalności przy takim małym nakładzie sił. XML jest wszędzie, jest prosty. Sprawdzanie poprawności dokumentu można załatwić poprzez inny XML a jego prezentacje poprzez kolejny, także znajomość technologii związanych z XMLem jest niewątpliwie przydatna.\n","permalink":"https://blog.dywicki.pl/2006/09/07/dlaczego-konfiguracja-w-xml/","summary":"\u003cp\u003eW czasach kiedy najbardziej trendy jest YAML twierdzę, że jest on niczym w porównaniu do tego, co oferuje XML. DLaczego?\u003c/p\u003e\n\u003cp\u003eDlatego, że tworząc dowolny dokument XML mogę go w bardzo prosty sposób rozszeżyć. Jak? Poprzez XInclude. Jego obsługa jest nawet w PHP więc nie ma z tym jakichkolwiek problemów. Definiuję tylko odnośnik  i mam dołączony ten XML [po wykonaniu $DOMDocument-\u0026gt;xinclude();].\u003c/p\u003e\n\u003cp\u003eKolejna sprawa. Walidacja. Nie muszę tworzyć żadnego kodu w PHP by sprawdzić poprawność XMLa. Wystarczy, że stworzę dobry schemat w XSD i mam walidację załatwioną bez jakiegokolwiek warunku. Do tego dochodzą ograniczenia takie jak rekurencja. W PHP  muszę to załatwiać poprzez wielokrotne wywołanie funkcji, które za każdym razem wydłuża czas. Normalnie załatwi mi to DOM XML, który jest napisany w C i będzie znacznie szybszy.\u003c/p\u003e","title":"Dlaczego konfiguracja w XML."},{"content":"Jakiś czas temu w pracy dostałem troszkę inne zadanie. Mianowicie, poprawić konfigurację Apache. Konfiguracja jak konfiguracja, to nie był problem - schody zaczęły się z dodaniem virtual hostów. Zawsze miałem z tym problem, teraz do tego dochodziło skonfigurowanie tego wszystkiego z użyciem SSLa. Jak już sobie z tym poradziłem - doszło kolejne zadanie, czyli konfiguracja proxy! Problem polegał na tym, że nasza kontrolka webowa komunikuje się z serwerem, z tym, że serwer może stać na dowolnej maszynie. Przyznam, że po tym co przeszedłem z tym SSLem i vhostami miałem serdecznie dość wszystkiego co było z httpd.conf związane. ;)\nW ramach pomocy otrzymałem od project managera link z opisem konfiguracji jakiegoś proxy. No to do dzieła, gotowiec - na dole.\n[code]\nProxyRequests on # ProxyPass \u0026ldquo;lokalny folder\u0026rdquo; \u0026ldquo;serwer zewnetrzny\u0026rdquo; ProxyPass /delta/ https://delta.dywicki.pl/ # każde żądanie do tego folderu ProxyPassReverse /\n[/code]\nW ten sposób, wszystkie żądania, które trafiają do /delta/ idą na delta.dywicki.pl. Rzecz mała i prosta. Jedyny minus tego rozwiązania to konieczność konfiguracji proxy i włączenie modułów które domyślnie są wyłączone.\n","permalink":"https://blog.dywicki.pl/2006/09/07/ajax-i-wiele-domen/","summary":"\u003cp\u003eJakiś czas temu w pracy dostałem troszkę inne zadanie. Mianowicie, poprawić konfigurację Apache. Konfiguracja jak konfiguracja, to nie był problem - schody zaczęły się z dodaniem virtual hostów. Zawsze miałem z tym problem, teraz do tego dochodziło skonfigurowanie tego wszystkiego z użyciem SSLa. Jak już sobie z tym poradziłem - doszło kolejne zadanie, czyli konfiguracja proxy! Problem polegał na tym, że nasza kontrolka webowa komunikuje się z serwerem, z tym, że serwer może stać na dowolnej maszynie.\nPrzyznam, że po tym co przeszedłem z tym SSLem i vhostami miałem serdecznie dość wszystkiego co było z httpd.conf związane. ;)\u003c/p\u003e","title":"Ajax i wiele domen"},{"content":"Od publikacji ostatniej noty parę osób proponowało mi podjęcie prac nad Mojavi 4. Chcę wyjaśnić, dlaczego Mojavi 4 nie będę się zajmował.\n1. Nie ma nikogo kto byłby w stanie pomóc mi przy projekcie. Obaj byli developerzy zakończyli swoją przygodę z PHP. Nie ma również żadnej społeczności, która jest w stanie zająć się forum, wyłapywaniem błędów - jednym słowem - to by było to samo co robiłem wcześniej przy własnym frameworku.\n2. Są projekty, które być może w tej chwili nie dorównują Mojavi 4, lecz są na tyle dobre, że w przyszłości mogą osiągnąć próg czwórki a nawet go przekroczyć.\n3. Podobna sytuacja miała miejsce kiedy Sean Kerr zrezygnował z rozwijania Mojavi 3. Później prace nad czwórką przejął Tyler. Gdybym teraz miał zacząć poprawiać Mojavi 4 wyszłaby piątka, której prawdopodobnie bym nie skończył. Czy ktoś by się zajął pozostawioną wcześniejszą wersją?\n4. Nie chcę tworzyć większego projektu w PHP, mocno prawdopodobne, że po miesiącu, dwóch po prostu bym zrezygnował z pisania Mojavi pogarszając i tak już wystarczająco ciężką sytuację. Projekt, na który zwrócę teraz baczniejszą uwagę to Agavi. Jest w nim sporo znajomych rzeczy z trójki. Wersja 0.11 jest dużym krokiem w stosunku do 0.10, w której były same poprawki. W trunku widać, że developerzy nie poprzestali na poprawkach i postanowili dodać funkcjonalności. Do ciekawszych należą: routes (Symfony wymięka), translates, output types (w połączeniu z routes daje świetne możliwości), view renderers.\n","permalink":"https://blog.dywicki.pl/2006/08/30/mojavi-4-dlaczego-nie/","summary":"\u003cp\u003eOd publikacji ostatniej noty parę osób proponowało mi podjęcie prac nad Mojavi 4. Chcę wyjaśnić, dlaczego Mojavi 4 nie będę się zajmował.\u003c/p\u003e\n\u003cp\u003e1. Nie ma nikogo kto byłby w stanie pomóc mi przy projekcie. Obaj byli developerzy zakończyli swoją przygodę z PHP. Nie ma również żadnej społeczności, która jest w stanie zająć się forum, wyłapywaniem błędów - jednym słowem - to by było to samo co robiłem wcześniej przy własnym frameworku.\u003c/p\u003e","title":"Mojavi 4. Dlaczego nie?"},{"content":"Dzisiejszego dnia chciałem napisać coś o Creole by pokazać, że ten sterownik oferuje ciekawą funkcjonalność, ale nie będzie o tym.\nTo co zmieniło moje zamiary to rozmowa z Tylerem Tomphinsem, osobą prowadzącą od dłuższego czasu projekt Mojavi.\nKontakt z Tylerem jest ciężki, ponieważ on mieszka po drugiej stronie globu. Nasze rozmowy do tej pory wyglądały inaczej, niestety ta, którą zakończyłem przed chwilą zmienia wszystko.\nDowiedziałem się, że Mojavi 4 zostaje zawieszone. Framework, w którym pokładałem ogromne nadzieje, który miał szanse zmienić nieco oblicze aplikacji pisanych w PHP umiera. Można powiedzieć, że historia się powtórzyła, jest to samo co z trójką (mike_mech wykrakał), która została zawieszona dawno, dawno temu. Ówczesny lider projektu - Sean Kerr zrezygnował z jego prowadzenia na rzecz Tylera..\nOd tego czasu wiele się zmieniło. Co najważniejsze, zaczęła powstawać dokumentacja, wszystko szło w dobrą stronę, repozytorium może nie tętniło życiem, ale wszystko szło powoli w dobrym kierunku.\nTo wszystko się skończyło na utracie danych z serwera Mojavi, który miał miejsce bodajże na początku lipca.\nNajlepszy framework PHP który powstał do tej pory. Żal, że to go spotyka. Ciekawe są okoliczności rezygnacji Tylera z prowadzenia Mojavi, w ogóle z PHP. Jakiś czas temu postanowił przyjrzeć się Ruby i Ruby on Rails by wzbogacić projekt. Teraz do Mojavi a tym bardziej do samego PHP Tyler nie ma zamiaru wracać, ponieważ jest oczarowany wyżej wymienionym językiem. W sumie nie dziwię się mu i szanuję jego decyzję.\nSzkoda, wielka szkoda projektu, danych, społeczności.\n","permalink":"https://blog.dywicki.pl/2006/08/27/pozegnanie/","summary":"\u003cp\u003eDzisiejszego dnia chciałem napisać coś o Creole by pokazać, że ten sterownik oferuje ciekawą funkcjonalność, ale nie będzie o tym.\u003c/p\u003e\n\u003cp\u003eTo co zmieniło moje zamiary to rozmowa z Tylerem Tomphinsem, osobą prowadzącą od dłuższego czasu projekt Mojavi.\u003c/p\u003e\n\u003cp\u003eKontakt z Tylerem jest ciężki, ponieważ on mieszka po drugiej stronie globu. Nasze rozmowy do tej pory wyglądały inaczej, niestety ta, którą zakończyłem przed chwilą zmienia wszystko.\u003c/p\u003e\n\u003cp\u003eDowiedziałem się, że Mojavi 4 zostaje zawieszone. Framework, w którym pokładałem ogromne nadzieje, który miał szanse zmienić nieco oblicze aplikacji pisanych w PHP umiera. Można powiedzieć, że historia się powtórzyła, jest to samo co z trójką (mike_mech wykrakał), która została zawieszona dawno, dawno temu. Ówczesny lider projektu - Sean Kerr zrezygnował z jego prowadzenia na rzecz Tylera..\u003c/p\u003e","title":"Pożegnanie."},{"content":"Zgodnie z tym, co napisałem na forum php.pl zapraszam do ocen, bądź w temacie bądź tu, w zależności od sympatii. ;)\n","permalink":"https://blog.dywicki.pl/2006/07/31/exception-just-log-it/","summary":"\u003cp\u003eZgodnie z tym, co \u003ca href=\"http://forum.php.pl/index.php?showtopic=50887\"\u003enapisałem na forum php.pl\u003c/a\u003e zapraszam do ocen, bądź w temacie bądź tu, w zależności od sympatii. ;)\u003c/p\u003e","title":"Exception? Just log it!"},{"content":"Na początku odpowiedź na post, który napisał Zyx. Aktualnie każdy, kto chce napisać nowe rozszerzenie do PHP, musi tylko znać język C, znać cel swej pracy oraz przeczytać rozdział 46 dokumentacji PHP zatytułowany \u0026ldquo;Zend API: Hacking the Core of PHP\u0026rdquo; i poświęcony właśnie tworzeniu modułów.\nZend API to nie wszystko. Moduły kompilowane nie są wyjściem super-uniwersalnym. Na co drugim serwerze nie ma opcji by dorzucić własne rozszerzenie. Wiele modułów z PECLa leży tam od lat, są one praktycznie nie rozwijane, także ich ilość niewiele może poświadczyć.\nProjekt ten nie miał nigdy poprawiać po egoistycznie nastawionych twórcach baz danych oraz ich kreatywnym podejściu do implementacji standardu ANSI SQL, ale na plus należy zaznaczyć, że niektóre braki bibliotek klienckich są emulowane (np. podpinanie).\nNikt nie mówi, że PDO miałoby to poprawiać. Spójrz na JDBC, producenci baz samodzielnie dostarczają sterowników do połączeń i dbają o to by były zgodne z własną bazą oraz kolejnymi standardami w JDBC.\nAle głupotą byłoby negowanie go tylko dlatego, że w kwestiach wielkoskalowych ma braki, a Zend ostatnio stosuje dziwne podejście w kwestii doboru priorytetów i debugowania swego sztandarowego projektu.\nDiabeł tkwi w szczegółach. Brak stosownych narzędzi i rozwiniętych rozwiązań technologicznych jest sporym problemem, który znacznie utrudnia tworzenie aplikacji.\nXML i SAX SAX jest świetnym standardem. Niestety, ustawianie gromady opcji dla parsera to jakaś porażka. Do tego domyślne zmienianie nazw tagów na wielkie litery.. jak by ktoś z tego korzystał. SAX mógłby być świetnym rozwiązaniem, gdyby istniała klasa domyślnego parsera, która wymuszałaby implementacje tylko 2 metod - startElement i endElement. Niestety, jesteśmy skazani na to co, jest w PEAR, czyli kod pisany pod PHP 4. Poza tym problem z SAXem w PHP jest taki, że jeśli ktoś chce korzystać z przestrzeni nazw w dokumencie, którego używa ma niewielkie szanse na to, że cokolwiek uda mu się ugrać, ponieważ parser nie przekazuje do handlera informacji o tym do jakiej przestrzeni nazw należy tag. Dla przykładu w Javie metoda startElement wygląda w następujący sposób:\nvoid startElement(string uri, string localname, string qname, attributes atts) a w PHP void startElementImpl(resource parser, string localname, array atts) czyli zupełnie tak samo jak by tych przestrzeni nie było. Jedyny sposób to wyciąganie prefiksu w nazwie (bo otrzymujemy np foo:bar) i sprawdzanie względem wcześniej zdefiniowanych poprzez xmlns. DOM Za implementację DOM Panom z Zenda należą się gratulacje, przede wszystkim dlatego, że w końcu jest to moduł doprowadzony do standardu, zgodnie z zaleceniami W3C. Nie będę już narzekał, że jest to DOM Level 2 a nie 3 co by nie było, że się za wiele czepiam ;). Świetnie, że DOM jest częścią Core PHP. Nie ma problemów z tym, czy DOM jest czy nie.\nTestując DOM przed napisaniem tej noty trafiłem na błąd w obsłudze encji. Działają one w atrybutach ale nie w treści. Sprawa wygląda w ten sposób, że encje predefiniowane takie jak \u0026ldquo;e; są widoczne, zatem gdzie są moje? Uciekły bo się przestraszyły tagów.\nSimpleXML SimpleXML jest bramką pomiędzy DOM a SAX. Oferuje mniejszą funkcjonalność niż DOM, ale wymaga o wiele mniej pracy niż SAX. Po prostu, wczytujesz plik i działa. Niestety, nie jest tak różowo. W nim również znalazłem niedoróbkę. Nie jestem pewien czy nie została ona załatana, problem polegał na gubieniu atrybutu przy kolekcji. Denerwuje mnie również to, że nikną mi informacje o przestrzeni nazw. Jeśli przeglądam dokument iteracyjnie tracę informację o tym z jakiej przestrzeni jest element.\nXSLT Zbyt małe możliwości połączenia PHP i samego procesu transformacji. Do XSLT można przekazać tylko ciągi, zatem nie ma mowy o tym by wrzucić tablicę i na jej podstawie wykonać jakąś iterację. Niestety, nie te czasy. Plusem jest to, że można tworzyć funkcje do których parser potrafi się odwołać.. niestety są to albo funkcje albo statyczne odwołania do klas.\nXSL-FO XSL-FO to standard, który umożliwia przekształcenie dowolnego dokumentu XML do postaci binarnej takiej jak PDF. Niestety w PHP nie doczekaliśmy się jeszcze żadnej implementacji tego standardu, poza jedną klasą w PEAR, która usiłuje wykonać transformację przy użyciu Javy.\nXSD Z XSD w PHP jest zasadniczy problem. Nie istnieje. Można sprawdzić czy dokument jest zgodny ze schematem korzystając chociażby z DOMa, niestety nie ma żadnych narzędzi, które umożliwiają tworzenie klas ze schematu. Skala problemu znacznie się powiększa w chwili gdy korzystamy z WSDL, które pośrednio korzysta z XSD. Nie ma opcji, żeby stworzyć jakikolwiek typ złożony w PHP bez własnego kodu.\nRozbudowa o przykłady, być może wkrótce.\n","permalink":"https://blog.dywicki.pl/2006/07/18/7-grzechow-glownych-php-xml/","summary":"\u003cp\u003e\u003cstrong\u003eNa początku odpowiedź na post, który napisał \u003ca href=\"http://www.zyxist.com/pokaz.php/7_grzechow_php_komentarz\"\u003eZyx\u003c/a\u003e.\u003c/strong\u003e \u003cem\u003eAktualnie każdy, kto chce napisać nowe rozszerzenie do PHP, musi tylko znać język C, znać cel swej pracy oraz przeczytać rozdział 46 dokumentacji PHP zatytułowany \u0026ldquo;Zend API: Hacking the Core of PHP\u0026rdquo; i poświęcony właśnie tworzeniu modułów.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eZend API to nie wszystko. Moduły kompilowane nie są wyjściem super-uniwersalnym. Na co drugim serwerze nie ma opcji by dorzucić własne rozszerzenie. Wiele modułów z PECLa leży tam od lat, są one praktycznie nie rozwijane, także ich ilość niewiele może poświadczyć.\u003c/p\u003e","title":"7 grzechów głównych PHP, XML"},{"content":"Postami w tej kategorii chcę pokazać jak dalekie PHP jest od ideału. Mam nadzieję, że większość z tego co piszę kiedyś zostanie poprawiona, nie mniej póki co, są to grzechy ciężkie, które pokazują słabości PHP.\nZend Zend jest firmą, która bez wątpienia ma największy wpływ na PHP. To Zend tworzy najważniejszy element PHP jakim jest Zend Engine.\nTo co mam do zarzucenia Zendowi to nieumiejętność wykorzystania swojej pozycji. Nie potrafi on wykorzystać swojej pozycji by ugrać coś na rzecz PHP. Być może dlatego, że jako firma jest zbyt mały by cokolwiek znaczyć. Od jakiegoś czasu Zend powoli produkuje papkę marketingową, którą wciska, że PHP jest enterprise podczas gdy samemu PHP jest do tego bardzo daleko. To, że został zmieniony silnik obsługujący obiekty, upodobniono składnię do Javy, wydano nową (piątą) wersję PHP nie czyni go enterprise.\nKiedy PHP stanie się językiem Enterprise? Kiedy dostarczy stosownych narzędzi i technologii. Niestety w chwili obecnej nie ma ani jednego ani drugiego. PHP jest wciąż językiem, który ma do tego aspiracje, ale nie ma możliwości (zupełnie tak jak Zend). Mam nadzieję, że z biegiem czasu i not z tej kategorii będę to udowadniał.\nZ czym się do tej pory kojarzy PHP? Ze \u0026ldquo;stronkami\u0026rdquo; produkowanymi przez gimnazjalistów i licealistów. Nie odbiega to od faktów. Pytanie, dlaczego Zend zmierza w kierunku większych klientów? Odpowiedź jest oczywista, większe pieniądze. Tylko, za przeproszeniem, z czym do ludu?!\nAPI, Technologie\nBrak jakiegokolwiek API dla rozszerzeń. Parsery XML to nie tylko SAX, nie tylko DOM. Jeśli ktoś chce zaimplementować cały standard samodzielnie czy też go rozszerzać (choćby w samym PHP!) powinna być taka możliwość, niestety do tej pory jej nie ma i prawdopodobnie nie będzie, ponieważ PHP nie jest porządnie zaprojektowane. Inną sprawą jest to, że nikt się tym nie zajmował i nie zajmuje. Błędne koło się zamyka, nikt nie myśli nad nowymi, porządnymi rozwiązaniami oraz technologiami opartymi o ten język, ponieważ PHP nie jest gotowe na taki krok. Wystarczy spojrzeć na Javę\u0026hellip; Dla przykładu podam platformę J2EE. Sun publikuje pełną specyfikację i dostarcza przy okazji własny serwer, który w pełni tą specyfikację obsługuje. Nie przeszkadza to by równocześnie na rynku były obecne inne podmioty takie jak JBoss, BEA Web Logic i podstawa wszystkiego - Apache Foundation z Tomcat`em.\nSpołeczność i Zend Framework\nJak wiadomo społeczność PHP nie jest mała. Względem innych języków można powiedzieć, że jest ogromna. Nie mniej problemem społeczności jest jej podział i brak konsolidacji. Zend nie sprzyja tworzeniu społeczności wokół PHP. Przykładem może być Sun (który stoi na podobnej pozycji z Javą). Czym najłatwiej zgromadzić społeczność wokół własnej platformy? Oczywiście - projektami. Im więcej projektów tym więcej zaangażowanych ludzi i osób oraz firm nimi zainteresowanych. Tymczasem, co robi Zend? Prze ślepo w jednym kierunku, mianowicie w stronę własnego Frameworka, który od ideału jest daleki.\nJeden framework nie zdobędzie serc wszystkich programistów tym bardziej, że w PHP korzystanie z gotowych rozwiązań do w dalszym ciągu rzadkość. Zamiast wspierać chociażby konkurencyjne rozwiązania Zend nie robi nic, nawet nie kiwa palcem by przyciągnąć do siebie projekty. Przykładem może być Cake PHP, wokół którego zgromadziła się pokaźna grupka osób oraz Prado, które jest rozwiązaniem zgoła innym, działającym na zupełnie innych zasadach. Czyżby Zend nie wiedział, że w mnogości tkwi siła? Najwyraźniej tak, nie wspierając społeczności PHP wiele traci. To działa w obie strony, tak samo jak Zend może liczyć na takie samo wsparcie społeczności jako ono na jego. PDO\nPDO jest rozwiązaniem zdecydowanie spóźnionym i niedostatecznym jeśli myślimy o poważnych zastosowaniach. Podczas, gdy na rynku rozwijały się rozwiązania takie jak AdoDB i jego klony Zend nic nie robił w celu zatrzymania tego procesu. Doszło do sytuacji, kiedy PHP obsługuje wiele baz ale przez skrajnie różne rozszerzenia i funkcje. Jeszcze do niedawna było poprawiane rozszerzenie do obsługi PostgreSQL, by przypominało chociaż pozostałe. Do niedawna korzystanie chociażby z dwóch różnych baz danych wymuszało korzystanie z paskudnie napisanego AdoDB bądź implementowania tego samodzielnie.\nPDO miało to zmienić, ale niestety nie do końca. PHP5 nie jest jeszcze zainstalowane na wielu serwerach, nie wspominając PHP 5.1 od którego PDO zostało wprowadzone. Wcześniejsze rozwiązania bazujące na \u0026ldquo;tradycyjnych\u0026rdquo; implementacjach używających funkcji natywnych nie mogą przeskoczyć nagle na PDO a nie mówiąc już o brakach w PDO. Nie obsługuje ono wszystkich baz jakie do tej pory obsługiwało PHP oraz nie uwalnia definitywnie od różnic pomiędzy bazami. Pod tym względem PDO może przebić chociażby Creole nie mówiąc już o AdoDB, które obsługuje praktycznie wszystkie bazy, jakie do tej pory w PHP się pojawiły.\nPHP6 Zbyt małe zmiany. Tak jak pisałem wcześniej, to jest powolna ewolucja, podczas gdy PHP jest potrzebna przemiana. Jeśli PHP ma z brzydkiego kaczątka kiedykolwiek stać się łabędziem to w tym tempie jeszcze lata ciężkiej i rzemieślniczej pracy przed nami, tym bardziej, że jesteśmy jeszcze w jajku, z którego się nie wykluliśmy.\nCzy dodanie przestrzeni nazw diametralnie zmieni PHP? Zmieni zapewne ale nie na tyle by instytucje takie jak banki zainwestowały w PHP, bo jak wcześniej pisałem, nie jest to powód sam z siebie. Muszą się pojawić narzędzia, które wspomagają, uproszczają, porządkują prace nad bardzo dużymi aplikacjami. Ciągłe luki, niedoróbki, wydania, które są jednodniowe z racji krytycznych błędów bezpieczeństwa. To wszystko nie sprzyja budowaniu pozytywnego wizerunku samego PHP.\n","permalink":"https://blog.dywicki.pl/2006/07/15/7-grzechow-glownych-php-inwokacja/","summary":"\u003cp\u003ePostami w tej kategorii chcę pokazać jak dalekie PHP jest od ideału. Mam nadzieję, że większość z tego co piszę kiedyś zostanie poprawiona, nie mniej póki co, są to grzechy ciężkie, które pokazują słabości PHP.\u003c/p\u003e\n\u003ch3 id=\"zend\"\u003eZend\u003c/h3\u003e\n\u003cp\u003eZend jest firmą, która bez wątpienia ma największy wpływ na PHP. To Zend tworzy najważniejszy element PHP jakim jest Zend Engine.\u003c/p\u003e\n\u003cp\u003eTo co mam do zarzucenia Zendowi to nieumiejętność wykorzystania swojej pozycji. Nie potrafi on wykorzystać swojej pozycji by ugrać coś na rzecz PHP. Być może dlatego, że jako firma jest zbyt mały by cokolwiek znaczyć. Od jakiegoś czasu Zend powoli produkuje papkę marketingową, którą wciska, że PHP jest enterprise podczas gdy samemu PHP jest do tego bardzo daleko. To, że został zmieniony silnik obsługujący obiekty, upodobniono składnię do Javy, wydano nową (piątą) wersję PHP nie czyni go enterprise.\u003c/p\u003e","title":"7 grzechów głównych PHP, inwokacja."},{"content":"Zaprawdę, zaprawdę powiadam Wam drodzy czytelnicy Zend Framework do pełnej implementacji MVC ma jeszcze bardzo duży kwał drogi.\nDzisiejszego dnia postanowiłem poświęcić parę minut na bliższe spotkanie z ZF. Jak się szybko okazało nie był to czas spędzony bezowocnie. Utrwaliłem się w przekonaniu, że ZF to nie jest to czego szukam oraz znalazłem buga i to dość niewygodnego.. ;)\nDlaczego moje uprzedzenie do ZF nie zmalało a tylko wzrosło? Dlatego, że to co w sumie zobaczyłem odbiega od znanego mi (z innych frameworków) MVC. Może potraktuję Was tutaj odrobiną kodu:\n[php]\u0026lt; ?php\n$view = new Zend_View(); $view-\u0026gt;setScriptPath(\u0026rsquo;./views/\u0026rsquo;); $view-\u0026gt;a = \u0026lsquo;asdf\u0026rsquo;; echo $view-\u0026gt;render(\u0026rsquo;example.php\u0026rsquo;); ?\u0026gt;[/php]\nTaki oto kawałek kodu jesteśmy smuszeni umieścić w kodzie akcji by uruchomić widok. Gdzie jest wygoda, automatyczne uruchamianie widoku? Nie wspomnę już o tym, że w ten sposób Zend znacząco ogranicza możliwości zmiany warstwy obsługującej widok.\nWzorowym rozwiązaniem dla mnie jest użycie Render\u0026rsquo;ów, które świetnie się spisują do tworzenia outputu. Nie czepiam się tutaj braku takich elementarnych rzeczy jak konfiruacja, której praktycznie nie ma. Być może ktoś stwierdzi, że można to sobie zaimplementować, ale przepraszam, po co biorę framework? Po to by jak najmniej implementować, by tworzyć logikę biznesową a nie rozszeżać framework. Elementem, który został obsłużony w ZF niecodziennie są filtry. Są one traktowane jako pluginy. Może i dobrze, ale co oprócz filtrów może być wykonywane przed akcją? Bardzo mnie boli brak konkretnego flowa, narzuconego z góry. Przyznam, że podoba mi się taki standard ponieważ przyzwyczaiłem się do tego korzystając z Mojavi i Symfony. Komuś odpowiada swoboda? W kodzie nie ma miejsca na swobodę. Im więcej możliwych dróg tym więcej możliwych błędów. Babranie się w ścieżki i tak dalej, po co to komu? Po to by móc rozdzielać sobie aplikację na mniejsze \u0026ldquo;moduły\u0026rdquo; a te na jeszcze mniejsze akcje? Skoro tak to dlaczego Zend_Controler_Front nie działa w katalogu innym niż document root? Ano dlatego, że panowie, którzy pisali Zend_Controler_Router twarto stwierdzili, że ich adres jest stały i ma format /controller/action. A co w przypadku kiedy mam index.php/controller/action? Otóż moim kontrolerem nie będzie controller a index.php. Nasz adres ogranicza się tylko do REQUEST_URI, a to czy SCRIPT_NAME w nim się znajduje bądź jesteśmy w katalogu innym niż document root nie ma wpływu na działanie całości.\nCo dziwne. Błąd (tak, to jest wcześniej wspomniany błąd) tkwi w repozytorium od początku, to znaczy od 26 marca, kiedy to [chyba] pierwsza wersja ZF pojawiła się na SVN. Nie muszę chyba przypominać, że w M4 takich wpadek nie ma? ;) Bardzo wstrętny bug (który zgłosiłem), tym bardziej, że nie trafiłem jeszcze na oprogramowanie, które by leżało u mnie bezpośrednio w document roocie. Zwykle jest tak, że jak coś ściągam to wrzucam do podkatalogu i w nim prowadzę testy. By te testy przeprowadzić z ZF musiałem nieco się namęczyć.\nMam więcej uwag co do samego Zenda, ale o tym w kolejnej notce.. Jeśli ktoś szuka porządnej implementacji MVC, zapraszam do zapoznania się z notką Mojavi 4, z bliska.\n","permalink":"https://blog.dywicki.pl/2006/07/12/zend-framework-mvc-dalekie-jest-mu/","summary":"\u003cp\u003eZaprawdę, zaprawdę powiadam Wam drodzy czytelnicy Zend Framework do pełnej implementacji MVC ma jeszcze bardzo duży kwał drogi.\u003c/p\u003e\n\u003cp\u003eDzisiejszego dnia postanowiłem poświęcić parę minut na bliższe spotkanie z ZF. Jak się szybko okazało nie był to czas spędzony bezowocnie. Utrwaliłem się w przekonaniu, że ZF to nie jest to czego szukam oraz znalazłem buga i to dość niewygodnego.. ;)\u003c/p\u003e\n\u003cp\u003eDlaczego moje uprzedzenie do ZF nie zmalało a tylko wzrosło? Dlatego, że to co w sumie zobaczyłem odbiega od znanego mi (z innych frameworków) MVC. Może potraktuję Was tutaj odrobiną kodu:\u003c/p\u003e","title":"Zend Framework-MVC dalekie jest mu"},{"content":"I oto się stało. Pierwszy raz użyłem przestrzeni nazw w PHP! Nie do wiary? A jednak. Nie było jakichkolwiek problemów z samą instalacją, ponieważ do pobrania jest paczka (pod Win ;)), która zachowuje się jak wszystkie inne pobrane z php.net. Przykłady podane na necie działają, więc nie pozostaje nic innego jak zabrać się za używanie przestrzeni nazw. :)\nOto listingi, które działają: [php]\u0026lt; ?php\nimport class a:::AFactory; import class a:::A;\nnamespace a { class AFactory { public static function create() { return new A; } } private class A {} }\n// works perfectly: AFactory::create();\n// fails with \u0026lsquo;Fatal error: Cannot use class \u0026lsquo;a:::A\u0026rsquo; outside of its namespace, as it is private\u0026rsquo; // new A;\n?\u0026gt;[/php]\nOraz: [php]\u0026lt; ?php\nimport namespace a;\nfunction __autoload($classname) { foreach (get_imported_namespaces() as $ns) { $filename = str_replace( \u0026lsquo;:::\u0026rsquo;, \u0026lsquo;/\u0026rsquo;, $ns ) . \u0026lsquo;/\u0026rsquo; . $classname . \u0026lsquo;.php\u0026rsquo;; if (file_exists($filename)) { require_once($filename); // will require a/A.php autoload_import_class($classname, $ns); // will import class a:::A } } }\nnew A;\n?\u0026gt; // file a/A.php: \u0026lt; ?php\nnamespace a { class A {} }\n?\u0026gt;[/php]\nWięcej informacji http://phpnamespaces.org/ ","permalink":"https://blog.dywicki.pl/2006/07/09/magiczne-namespace/","summary":"\u003cp\u003eI oto się stało. Pierwszy raz użyłem przestrzeni nazw w PHP! Nie do wiary? A jednak. Nie było jakichkolwiek problemów z samą instalacją, ponieważ do pobrania jest paczka (pod Win ;)), która zachowuje się jak wszystkie inne pobrane z \u003ca href=\"http://php.net\"\u003ephp.net\u003c/a\u003e. Przykłady podane na necie działają, więc nie pozostaje nic innego jak zabrać się za używanie przestrzeni nazw. :)\u003c/p\u003e\n\u003cp\u003eOto listingi, które działają:\n[php]\u0026lt; ?php\u003c/p\u003e\n\u003cp\u003eimport class a:::AFactory;\nimport class a:::A;\u003c/p\u003e\n\u003cp\u003enamespace a {\nclass AFactory {\npublic static function create() {\nreturn new A;\n}\n}\nprivate class A {}\n}\u003c/p\u003e","title":"Magiczne namespace.."},{"content":"Przedruk z devzone - wiki z przykładowymi implementacjami wzorców projektowych w PHP. http://patterns.quantum-star.com/index.php/Main_Page\n","permalink":"https://blog.dywicki.pl/2006/07/06/patterns-for-php/","summary":"\u003cp\u003ePrzedruk z devzone - wiki z przykładowymi implementacjami wzorców projektowych w PHP.\n\u003ca href=\"http://patterns.quantum-star.com/index.php/Main_Page\"\u003ehttp://patterns.quantum-star.com/index.php/Main_Page\u003c/a\u003e\u003c/p\u003e","title":"Patterns For PHP"},{"content":"Bez żadnej pętli. :) Czy ktoś zna krótszy zapis nie korzystający z zewnętrznych funkcji? [php]\u0026lt; ?php\n$target = array_combine(array_map(\u0026lsquo;strtolower\u0026rsquo;, array_keys($target)), array_values($target));\n?\u0026gt;[/php]\n","permalink":"https://blog.dywicki.pl/2006/07/05/zmiana-kluczy-na-male-litery/","summary":"\u003cp\u003eBez żadnej pętli. :) Czy ktoś zna krótszy zapis nie korzystający z zewnętrznych funkcji?\n[php]\u0026lt; ?php\u003c/p\u003e\n\u003cp\u003e$target = array_combine(array_map(\u0026lsquo;strtolower\u0026rsquo;, array_keys($target)), array_values($target));\u003c/p\u003e\n\u003cp\u003e?\u0026gt;[/php]\u003c/p\u003e","title":"Zmiana kluczy, na małe litery"},{"content":"Zwykle, kiedy potrzebujemy zmienną ilość wartości, które są w tablicy używamy pętli. Da się jednak obejść. Dzisiejszego dnia trafiłem na zadanie, które polegało na pobraniu fragmentu tablicy. Tablica była wierszem z bazy danych, który był wynikiem złączenia kilku tabel a ja chciałem pobrać wartości tylko dla określonej tabeli. Informacje o tym, jakie klucze mnie interesują miałem zapisane w obiektach metadanych, potrzebowałem tylko odpowiednio okroić wiersz do potrzebnych mi rozmiarów.\nProblem rozwiązałem przy użyciu 4 funkcji, w tym 3 funkcji wbudowanych w PHP. Potrzebne były array_uintersect_uassoc, array_flip, strcasecmp. Dodatkowo musiałem zdefiniować 1 funkcje, która dla 2 argumentów zawsze zwraca zero. Musi ona być zgodna z wymaganiami stawianymi przez \u0026ldquo;comparatory\u0026rdquo;. Zero musi być zwracane by nie porównywać wartości (wg porównywaczy zero oznacza, że obie wartości są sobie równe).\nLinia, która pobiera określone klucze:\n[php]\u0026lt; ?php array_uintersect_uassoc($bigArray, array_flip($keysArray), \u0026lsquo;alwaysReturnZero\u0026rsquo;, \u0026lsquo;strcasecmp\u0026rsquo;); ?\u0026gt;[/php]\n","permalink":"https://blog.dywicki.pl/2006/07/03/pobieranie-roznych-wartosci-z-tablicy-bez-petli/","summary":"\u003cp\u003eZwykle, kiedy potrzebujemy zmienną ilość wartości, które są w tablicy używamy pętli. Da się jednak obejść. Dzisiejszego dnia trafiłem na zadanie, które polegało na pobraniu fragmentu tablicy. Tablica była wierszem z bazy danych, który był wynikiem złączenia kilku tabel a ja chciałem pobrać wartości tylko dla określonej tabeli. Informacje o tym, jakie klucze mnie interesują miałem zapisane w obiektach metadanych, potrzebowałem tylko odpowiednio okroić wiersz do potrzebnych mi rozmiarów.\u003c/p\u003e\n\u003cp\u003eProblem rozwiązałem przy użyciu 4 funkcji, w tym 3 funkcji wbudowanych w PHP. Potrzebne były \u003ca href=\"http://pl.php.net/array_uintersect_uassoc\"\u003earray_uintersect_uassoc\u003c/a\u003e, \u003ca href=\"http://pl.php.net/array_flip\"\u003earray_flip\u003c/a\u003e, \u003ca href=\"http://pl.php.net/strcasecmp\"\u003estrcasecmp\u003c/a\u003e. Dodatkowo musiałem zdefiniować 1 funkcje, która dla 2 argumentów zawsze zwraca zero. Musi ona być zgodna z wymaganiami stawianymi przez \u0026ldquo;comparatory\u0026rdquo;. Zero musi być zwracane by nie porównywać wartości (wg porównywaczy zero oznacza, że obie wartości są sobie równe).\u003c/p\u003e","title":"Pobieranie różnych wartości z tablicy bez pętli"},{"content":"Oto wpis, wykopany przez kolegę z pracy, na blogu pewnego programisty. Autor piesze, że stworzył łatkę do PHP która pozwala korzystać z podpowiadania dla typów prostych. Więcej : http://www.derickrethans.nl/typehints_for_scalar_types.php\n","permalink":"https://blog.dywicki.pl/2006/06/29/podpowiadanie-typow-prostych-w-php5/","summary":"\u003cp\u003eOto wpis, wykopany przez kolegę z pracy, na blogu pewnego programisty. Autor piesze, że stworzył łatkę do PHP która pozwala korzystać z podpowiadania dla typów prostych. Więcej :\n\u003ca href=\"http://www.derickrethans.nl/typehints_for_scalar_types.php\" title=\"Typehints for scalar types\"\u003ehttp://www.derickrethans.nl/typehints_for_scalar_types.php\u003c/a\u003e\u003c/p\u003e","title":"Podpowiadanie typów prostych w PHP5"},{"content":"Mały konkursik - jak pobrać stałą z klasy..? Kod jest, jedyny problem to to, że nazwa stałej może się zmienić\u0026hellip; [php]\u0026lt; ?php class Foo { const TAK = \u0026lsquo;prawda\u0026rsquo;; const NIE = \u0026lsquo;fałsz\u0026rsquo;; const CHGW = \u0026lsquo;a kto go tam wie\u0026rsquo;; }\nif($_GET[\u0026lsquo;imie\u0026rsquo;] == \u0026lsquo;Bolek\u0026rsquo;) { // $constant = \u0026lsquo;TAK\u0026rsquo;; } elseif(!empty($_GET)) { // $constant = \u0026lsquo;NIE\u0026rsquo;; } else { // $constant = \u0026lsquo;CHGW\u0026rsquo;; } echo \u0026lsquo;\u0026hellip; wlasnie co ? ..\u0026rsquo;; ?\u0026gt;[/php]\n","permalink":"https://blog.dywicki.pl/2006/06/28/jak-sie-dobrac-do-stalej-klasy/","summary":"\u003cp\u003eMały konkursik - jak pobrać stałą z klasy..? Kod jest, jedyny problem to to, że nazwa stałej może się zmienić\u0026hellip;\n[php]\u0026lt; ?php\nclass Foo {\nconst TAK = \u0026lsquo;prawda\u0026rsquo;;\nconst NIE = \u0026lsquo;fałsz\u0026rsquo;;\nconst CHGW = \u0026lsquo;a kto go tam wie\u0026rsquo;;\n}\u003c/p\u003e\n\u003cp\u003eif($_GET[\u0026lsquo;imie\u0026rsquo;] == \u0026lsquo;Bolek\u0026rsquo;) {\n// $constant = \u0026lsquo;TAK\u0026rsquo;;\n} elseif(!empty($_GET)) {\n// $constant = \u0026lsquo;NIE\u0026rsquo;;\n} else {\n// $constant = \u0026lsquo;CHGW\u0026rsquo;;\n}\necho \u0026lsquo;\u0026hellip; wlasnie co ? ..\u0026rsquo;;\n?\u0026gt;[/php]\u003c/p\u003e","title":"Jak się dobrać do stałej klasy"},{"content":"Witam, jakiś czas temu w pracy staneliśmy przed dylematem - którą bazę danych użyć? Dyskusja była długa, w końcu postanowiliśmy przetestować wydajność każdego rozwiązania. Niestety testy niejasności tylko jeszcze bardziej naświetliły.\nPierwszy test, jaki przeprowadziliśmy polegał na wstawieniu 3 milionów rekordów do tabeli, która składała się z 5 kolumn.\n[sql] \u0026ndash; pgsql CREATE TABLE users ( user_id serial NOT NULL, user_name varchar(45), user_password varchar(32), user_first_name varchar(15), user_last_name varchar(15), CONSTRAINT users_pkey PRIMARY KEY (user_id) ) [/sql]\nIdentyfikator był numerem iteracji, nie wykorzystałem ani autoincrement w MySQL ani sekwencji w PgSQL. Niestety, troszkę się zagapiłem i nie mam czasów dla MySQL do 1.5 mln wstawień i dla PgSQL do 150 tys. Obrazek prezentujący wyniki po lewej. Czerwony - PgSQL, niebieski MySQL. Na dole powinna być ilość rekordów, które są już w bazie, ale ze względu, że zaczęły one na siebie zachodzić powstawiałem zera. W każdym razie im bliżej prawej tym mniej brakuje do 3 mln. Duże skoki w wykonywaniu insertów były spowodowane wykonaniem zapytania z SELECT COUNT(user_id) FROM users. Jak widać MySQL wyraźnie wygrywa w tym teście z PgSQL. Średnio czas, który MySQL potrzebuje na wstawienie 10 tys rekordów to 12.2204 s. Gdybym dysponował czasami sprzed 1.5 mln rekordów czas ten mógłby ulce zmniejszeniu. PostgreSQL na wstawienie 10 tys rekordów potrzebuje średnio 14.7962 s.\nTo nie był koniec testów. Ciekawie zaczęło się robić, gdy trzeba było pobrać dane z tej tabeli. Oczywiście do tego celu napisałem algorytm, który losowo odpytuje tabelę z różnym limitem i offsetem oraz różnie sortuje wyniki. Ciekawi co się stało? Zarówno MySQL jak i PgSQL nie poradziły sobie z takim obciążeniem, Pg nie starczało 400 M wolnego miejsca na dysku, w przypadku MySQL nie było o czym gadać, serwer nawet nie zwrócił informacji o niepowodzeniu czy czymkolwiek tylko stanął. Tzn. pracował w dalszym ciągu stabilnie, ale zapytanie po prostu jakby pominął, nic nie zwrócił i dalej nic nie robił.\nJedynym lekarstwem na ten problem okazały się indeksy. Postanowiliśmy, że na początku zindeksujemy wszystkie kolumny (test bez indeksów w przygotowaniu). O ile dodanie indeksów w Pg to nie był problem, wystarczyło mu jakieś 40-60 minut na wszystkie kolumny o tyle w przypadku My problem już powstał. Serwer stworzył tabelę tymczasową i przez 2h nie dodał żadnego indeksu. Jedynym wyjściem było oczyszczenie tabeli. Niestety serwer po wycofaniu się z indeksów przestał odpowiadać. Po restarcie najpierw spróbowałem DELETE FROM users. Nie był to najlepszy pomysł. Restart. DELETE FROM users LIMIT 10000. Restart. DELETE FROM users LIMIT 1000. Restart. DROP TABLE users. Reset. Żadna z tych operacji nie dała skutku. Dopiero po kolejnym resecie udało mi się usunąć tabelę. Tabelę stworzyłem na nowo, dodałem indeksy i zacząłem dodawać dane na nowo. Tym razem czasy zmierzyłem od początku.\nWynik? Straszny. Czasy zaczęły lecieć na łeb, na szyję. O ile z początku jakoś to się trzymało, to później został przekroczony próg 30 s na 10 tys rekordów, następnie 50 aż doszliśmy do 85 s. Przy 1.5 mln rekordów przerwałem test.\nOprócz testów baz danych przetestowałem również na o wiele mniejszej tabeli (5 kolumn, 10 wierszy, pobranie wszystkich z losowym sortowaniem, 10 tys iteracji) AdoDB i Creole. AdoDB korzystało z PDO, Creole z natywnych funkcji. Nie bierzcie tego testu na poważnie.. Ciąg dalszy testów być może nastąpi. :) Dziękuję firmie Autoguard za pozwolenie na publikację testów. ","permalink":"https://blog.dywicki.pl/2006/06/27/mysql-i-postgresql-testy-wydajnosci/","summary":"\u003cp\u003eWitam, jakiś czas temu w pracy staneliśmy przed dylematem - którą bazę danych użyć? Dyskusja była długa, w końcu postanowiliśmy przetestować wydajność każdego rozwiązania. Niestety testy niejasności tylko jeszcze bardziej naświetliły.\u003c/p\u003e\n\u003cp\u003ePierwszy test, jaki przeprowadziliśmy polegał na wstawieniu 3 milionów rekordów do tabeli, która składała się z 5 kolumn.\u003c/p\u003e\n\u003cp\u003e[sql] \u0026ndash; pgsql\nCREATE TABLE users\n(\nuser_id serial NOT NULL,\nuser_name varchar(45),\nuser_password varchar(32),\nuser_first_name varchar(15),\nuser_last_name varchar(15),\nCONSTRAINT users_pkey PRIMARY KEY (user_id)\n) [/sql]\u003c/p\u003e","title":"MySQL i PostgreSQL - testy wydajności"},{"content":"Nie da się ukryć, że żyjemy w dziwnym kraju. Nie chcę już pić do tego kto nami rządzi bo to świadomy wybór tej większości, która przeważyła w wyborach, ale do tego jak wyglądają u nas zarobki.\nPrawda jest taka, że jeśli chcesz pracować a masz pecha to pozostają 3 wyjścia: - pracujesz na umowę o dzieło i pracodawca ewentualnie płaci Twoją zaliczkę na podatek dochodowy - pracujesz po zaniżonych kosztach - to znaczy, masz umowę na 1/4 etatu, zarabiasz 700 zł a resztę otrzymujesz pod stołem. - pracujesz na czarno i modlisz się o to by nic Ci się nie stało oraz by stosunki z pracodawcą były zawsze jak najlepsze\nCzy nie jest to zastanawiające? Co zmusza ludzi do takiej pracy i pracodawców do wystawiania takich ofert?\nKoszty. Koszty, które są po prostu horrendalne. Mocno wierzę, że sytuacja się kiedyś zmieni i koszty utrzymania etatu to nie będzie kwota 18,7% wypłaty netto (dla pracownika) i 19,8% tej samej kwoty dla pracodawcy, kiedy składki emerytalne będą faktycznie opłacalne a ubezpieczenie zdrowotne będzie jednakowe dla wszystkich.\nO co mi się rozchodzi? A o to, że faktycznie przez te wszystkie opłaty każdy z nas zarabia o wiele mniej co znaczy o wiele za mało. Dla przykładu: Pracując przez rok czasu na pełnym etacie i zarabiając miesięcznie 2 000 zł brutto - łącznie zarabiam 24 000 zł. Z tego 4 490 zł w ciągu roku zabierane jest mi na ZUS. W tej pokaźnej sumce jest 1 560 zł na składkę rentową, 2 340 zł na składkę emerytalną oraz 558 zł składki chorobowej. Żeby nie było zbyt różowo, na koniec roku muszę oddać 1 428 zł urzędowi skarbowemu ponieważ w tym kraju zarabianie na siebie jest ciężkim i surowo karanym grzechem. Po tym wszystkim w skali roku zostaje mi 16 374 zł. Jak warto policzyć, po drodze uciekło 7600 zł. Obrazowo rzecz ujmując - przez prawie 4 miesiące pracowałem za darmo, bo wszystko to co zarobiłem poszło na opłaty!\nNie liczę tutaj jeszcze 4 759 zł, które pracodawca również opłaca w ramach ZUSu.\nPomijamy teraz wersję optymistyczną, ponieważ jeśli chcesz zarabiać więcej to masz dodatkowy problem - stawki podatku dochodowego, które są ruchome i gonią Cię byś nie miał za dużo.\nNa czym to polega? Jeśli zarobisz ponad 37 024 zł netto (~ 3 100 zł netto miesięcznie) pracujesz w ciągu roku przez ponad 2 miesiące aby opłacić 6 500 zł samego podatku dochodowego.\nJeśli trafiła Ci się na prawdę dobra praca masz jeszcze gorzej, po przekroczeniu progu 74 048 zł netto ( ~6171 zł netto miesięcznie) płacisz 17 612 zł podatku dochodowego, co daje niemalże 3 miesiące (dokładnie 2,85 miesiąca) pracy na sam podatek dochodowy.\nPo tych obliczeniach prawdę mówiąc nie dziwię się większości pracodawców, że tak sceptycznie podchodzą do zatrudniania ludzi, że tak walczą o każdy grosz szukając oszczędności gdzie tylko się da, ale powoli zaczynam się dziwić i to dziwić niepomiernie, dlaczego tutaj pracuję?\nPo to by w ciągu 5 dni roboczych odrabiać 1.5 dnia pańszczyzny? (jak to policzyłem - 4 z 12 to 30% a 30% z 5 to 1.5).\nKiedy sobie pomyślę, że cały poniedziałek i pół wtorku pracuję po to by opłacić kiepską oraz niemiłą obsługę medyczną i na koniec dostać zaniżoną emeryturę to po prostu przestaje mnie dziwić masowa emigracja i to, że młodzi mają w głębokim mniemaniu to co tu się stanie.\nByć może dla Ciebie też nastała pora by sprawdzić ile tracisz na pracy w Polsce?\n","permalink":"https://blog.dywicki.pl/2006/06/26/polska-dziwny-kraj/","summary":"\u003cp\u003eNie da się ukryć, że żyjemy w dziwnym kraju. Nie chcę już pić do tego kto nami rządzi bo to świadomy wybór tej większości, która przeważyła w wyborach, ale do tego jak wyglądają u nas zarobki.\u003c/p\u003e\n\u003cp\u003ePrawda jest taka, że jeśli chcesz pracować a masz pecha to pozostają 3 wyjścia:\n- pracujesz na umowę o dzieło i pracodawca ewentualnie płaci Twoją zaliczkę na podatek dochodowy\n- pracujesz po zaniżonych kosztach - to znaczy, masz umowę na 1/4 etatu, zarabiasz 700 zł a resztę otrzymujesz pod stołem.\n- pracujesz na czarno i modlisz się o to by nic Ci się nie stało oraz by stosunki z pracodawcą były zawsze jak najlepsze\u003c/p\u003e","title":"Polska, dziwny kraj"},{"content":"Niedawno postanowiłem zaryzykować i ściągnąć Oracle XE. Samo ściągnięcie nie trwało dość długo (w międzyczasie sobie jadłem kolację), w końcu to tylko 150 MB. Zapewne niektórym w tym miejscu trudno uwierzyć, że tylko tyle. Tak tylko tyle! ;) Fakt, w porównaniu z MySQL/PgSQL to naprawdę wiele, ale nie w porównaniu do pełnego pakietu Oracle, który waży znacznie więcej. Tak więc w mych rękach wylądowała wersja express Oracle 10, która była gotowa do instalacji. Procesu instalacji nie opisywałbym gdyby nie to, że minimalna ilość pamięci to ponad 256 MB. Zatem niestety, albo i stety nie mogłem zainstalować bazy na laptopie. Nie mniej, podczas pobytu w domu z powodzeniem instalację udało mi się zakończyć. Co mnie zaskoczyło – nie zmuliło mi od razu systemu, jak to ongi bywało. Pamiętam, że gdy pierwszy raz instalowałem Oracle (rozmiar ~500 MB) to system dosłownie stawał w miejscu. Dlaczego? Ponieważ przy normalnej instalacji Oracle używa kilku i więcej procesów pomocniczych, także nie jest to tak jak w przypadku MySQL jeden proces. Dzięki temu baza o wiele lepiej sprawuje się na maszynach wieloprocesorowych. Podstawowe procesy pomocnicze to: - dbw – proces zapisujący do plików danych – procesów tych może być do 9 (dbwr0.. dbwr9) - pmon – monitor procesów - smon – monitor systemu - lgwr – proces zapisujący do plików dziennika powtórzeń - ckpt – proces punktu kontrolnego - reco – odtwarzacz - arc0 – archiwizacja danych W przypadku wersji express tych procesów nie ma, jest jeden główny, który sobie spokojnie radzi ze wszystkim. Nie mam pojęcia jak to jest realizowane, ale na systemie XP, który ma ponad pół roku, gdzie dysk naprawdę jest zawalony po brzegi i gdyby nie zakładki na tychże to by się z niego wylewało baza działała szybko a co najważniejsze nie destabilizowała systemu jak i pracy innych aplikacji. Dla mnie bomba, proces nie zżerał całej dostępnej pamięci, tak że spokojnie mogłem przy 768 MB pamięci pracować jeszcze na Eclipse. Nie do wiary? A jednak, dało radę. W tym przypadku śmiem twierdzić, że gadanie \u0026ldquo;Oracle zmula\u0026rdquo; są mocno nieaktualne. Nie zmula! Oczywiście wciąż mówimy cały czas o wersji express, która w sam raz nadaje się do testów a nie o instalacji w pełni funkcjonalnej. Cóż takiego ciekawego jest w tym oprogramowaniu? 1. Po pierwsze, dlaczego powstają książki rozmiarowo przewyższające encyklopedie na jego temat. 2. Po drugie czy nie jest to wodolejstwo. 3. Po trzecie czy możliwości są adekwatne do ceny.\nAd. 1) Nie jestem w stanie tego jednoznacznie stwierdzić, ale odnośnie opasłych tomisk – pragnę przytoczyć tytuł \u0026ldquo;Oracle. Vademecum administratora\u0026rdquo; (jeśli dobrze pamiętam). Obecnie w swej skromnej biblioteczce posiadam tytuł \u0026ldquo;Oracle 9i. Przewodnik początkujących\u0026rdquo;, który jest stosunkowo niewielki – około 420 stron. Jest to mniej niż choćby \u0026ldquo;PostgreSQL. Biblia problemów\u0026rdquo;. Nie ma jednak w niej przedruku z całą składnią SQL jaką baza obsługuje. Jest dużo teorii, sporo opisów. Rozszerzeniem lektury jednak może być Vademecum jak i \u0026ldquo;Oracle 9i i XML\u0026rdquo; (znowu, jeśli dobrze pamiętam). W sumie wychodzi o wiele więcej niż na temat innej bazy danych, chociaż może tutaj konkurować jeszcze Microsoft SQL Server. Ad. 2) Myślę, że wodolejstwo to nie jest, ponieważ sama baza danych daje ogromne możliwości, które ciężko bez dobrych podstaw wykorzystać. Mówię tutaj o czymś takim jak partycjonowanie danych czy też hurtownie danych. Dla mnie jest to swoista nowość, nigdy wcześniej z tymi pojęciami się nie spotkałem. Ad. 3) Czy warto? Zależy, najlepszą metodą na sprawdzenie tego są samodzielne testy, ponieważ w sieci brak porównań wydajnościowych (Oracle zabrania jakichkolwiek publikacji na ten temat) a nie ma dwóch takich samych sytuacji nie mówiąc już o potrzebach. Wiele osób chce tego samego, ale różnice tkwią w szczegółach. Sądzę, że funkcjonalnie jest to najlepsza baza danych, którą Microsoft dopiero goni i do której ma jeszcze kawał drogi. Są to różnice lat. Podczas gdy Bill rozwijał swój sztandarowy produkt Oracle wciąż pracowało nad bazą danych i aplikacjami mocno związanymi z jej działaniem.\nSam przyznam, że niedawno odpaliłem tą bazę pierwszy raz i nie mogę znać ogromu jej możliwości. Jestem na wierzchołku góry lodowej. Z ciekawszych możliwości – bawiłem się formularzami oraz arkuszami (chyba tak to się zwie). Przyznam, że fajne. To, do czego dążą chyba wszyscy programiści – \u0026ldquo;kliknij tutaj by stworzyć aplikację\u0026rdquo; – jest już w Oracle. Nie mam pojęcia jak wygląda to w przypadku specyficznych struktur i tak dalej, ale na tych tabelach, które są dostępne dla testowego użytkownika wszystko sprawowało się znakomicie. Można sobie edytować bądź dodawać przyciski, schematy, szablony i co tam sobie jeszcze kto wymyśli. Wszystko przez interfejs WWW, bez używania narzędzi ciężkiego kalibru. Myślę, że załączone zrzuty są wystarczającą referencją i w pełni zastąpią wszelkie opisy.. Zachęcam do zabawy z Oracle, ono nie gryzie! :) Udało mi się uruchomić bez jakiegokolwiek wysiłku PDO i z poziomu PHP korzystać z zasobów bazy. Troszkę się namęczyłem z Creole ale udało mi się również je zmusić do pracy z bazą. Być może pora na stworzenie adaptera, który rozszerzy interfejs PDO do tego, który oferuje Creole?\n","permalink":"https://blog.dywicki.pl/2006/06/25/oracle-xe/","summary":"\u003cp\u003e\u003cimg alt=\"Oracle #4\" loading=\"lazy\" src=\"/wp-content/uploads/2006/06/ora4.thumbnail.JPG\"\u003eNiedawno postanowiłem zaryzykować i ściągnąć Oracle XE. Samo ściągnięcie nie trwało dość długo (w międzyczasie sobie jadłem kolację), w końcu to tylko 150 MB. Zapewne niektórym w tym miejscu trudno uwierzyć, że tylko tyle. Tak tylko tyle! ;) Fakt, w porównaniu z MySQL/PgSQL to naprawdę wiele, ale nie w porównaniu do pełnego pakietu Oracle, który waży znacznie więcej. Tak więc w mych rękach wylądowała wersja express Oracle 10, która była gotowa do instalacji. Procesu instalacji nie opisywałbym gdyby nie to, że minimalna ilość pamięci to ponad 256 MB. Zatem niestety, albo i stety nie mogłem zainstalować bazy na laptopie. Nie mniej, podczas pobytu w domu z powodzeniem instalację udało mi się zakończyć. Co mnie zaskoczyło – nie zmuliło mi od razu systemu, jak to ongi bywało. Pamiętam, że gdy pierwszy raz instalowałem Oracle (rozmiar ~500 MB) to system dosłownie stawał w miejscu. Dlaczego? Ponieważ przy normalnej instalacji Oracle używa kilku i więcej procesów pomocniczych, także nie jest to tak jak w przypadku MySQL jeden proces. Dzięki temu baza o wiele lepiej sprawuje się na maszynach wieloprocesorowych.\nPodstawowe procesy pomocnicze to:\n- dbw – proces zapisujący do plików danych – procesów tych może być do 9 (dbwr0.. dbwr9)\n- pmon – monitor procesów\n- smon – monitor systemu\n- lgwr – proces zapisujący do plików dziennika powtórzeń\n- ckpt – proces punktu kontrolnego\n- reco – odtwarzacz\n- arc0 – archiwizacja danych\n\u003cimg alt=\"Oracle #3\" loading=\"lazy\" src=\"/wp-content/uploads/2006/06/ora3.thumbnail.JPG\"\u003eW przypadku wersji express tych procesów nie ma, jest jeden główny, który sobie spokojnie radzi ze wszystkim. Nie mam pojęcia jak to jest realizowane, ale na systemie XP, który ma ponad pół roku, gdzie dysk naprawdę jest zawalony po brzegi i gdyby nie zakładki na tychże to by się z niego wylewało baza działała szybko a co najważniejsze nie destabilizowała systemu jak i pracy innych aplikacji. Dla mnie bomba, proces nie zżerał całej dostępnej pamięci, tak że spokojnie mogłem przy 768 MB pamięci pracować jeszcze na Eclipse. Nie do wiary? A jednak, dało radę. W tym przypadku śmiem twierdzić, że gadanie \u0026ldquo;Oracle zmula\u0026rdquo; są mocno nieaktualne. Nie zmula! Oczywiście wciąż mówimy cały czas o wersji express, która w sam raz nadaje się do testów a nie o instalacji w pełni funkcjonalnej.\n\u003cimg alt=\"Oracle #2\" loading=\"lazy\" src=\"/wp-content/uploads/2006/06/ora2.thumbnail.JPG\"\u003eCóż takiego ciekawego jest w tym oprogramowaniu?\n1. Po pierwsze, dlaczego powstają książki rozmiarowo przewyższające encyklopedie na jego temat.\n2. Po drugie czy nie jest to wodolejstwo.\n3. Po trzecie czy możliwości są adekwatne do ceny.\u003c/p\u003e","title":"Oracle XE"},{"content":"Kilka listingów. W czym to jest napisane?\n[code]list = [1: \u0026ldquo;a\u0026rdquo;, 2: \u0026ldquo;b\u0026rdquo;, 3: \u0026ldquo;C\u0026rdquo;, 6: \u0026ldquo;asdf\u0026rdquo;]\nlist.each() { key, value | println \u0026ldquo;${key} = ${value}\u0026rdquo; }[/code]\n[code]add = { x -\u0026gt; { y -\u0026gt; x + y }} println add(2)(4)[/code]\n[code]def power(n) { { base -\u0026gt; base**n } }\nsquare = power(2) cube = power(3)\na = square(4) println a // =\u0026gt; 16[/code]\n","permalink":"https://blog.dywicki.pl/2006/06/16/zgadnij-jaki-to-jezyk/","summary":"\u003cp\u003eKilka listingów. W czym to jest napisane?\u003c/p\u003e\n\u003cp\u003e[code]list = [1: \u0026ldquo;a\u0026rdquo;, 2: \u0026ldquo;b\u0026rdquo;, 3: \u0026ldquo;C\u0026rdquo;, 6: \u0026ldquo;asdf\u0026rdquo;]\u003c/p\u003e\n\u003cp\u003elist.each() {\nkey, value | println \u0026ldquo;${key} = ${value}\u0026rdquo;\n}[/code]\u003c/p\u003e\n\u003cp\u003e[code]add = { x -\u0026gt; { y -\u0026gt; x + y }}\nprintln add(2)(4)[/code]\u003c/p\u003e\n\u003cp\u003e[code]def power(n) {\n{ base -\u0026gt; base**n }\n}\u003c/p\u003e\n\u003cp\u003esquare = power(2)\ncube = power(3)\u003c/p\u003e\n\u003cp\u003ea = square(4)\nprintln a // =\u0026gt; 16[/code]\u003c/p\u003e","title":"Zgadnij jaki to język"},{"content":"Nowe miasto. Po 11 miesiącach w Bydgoszczy przeprowadzka. W Bydgoszczy bądź co bądź zostaje prawie rok mojego życia. Wiele nowych osób, wiele nowych rzeczy. Przyznam, że ciężko było rezygnować z wszystkiego by zaczynać znowu od zera. Same miasto nie było złe, poza niektórymi rejonami dało się w nim żyć. Owszem, nie było tam gromady studentów tak jak w Toruniu, nie było porządku jak w moim rodzimym mieście, ale byli mili ludzie. Nikt na ulicy nie oklepał mi twarzy, nie zostałem napadnięty ani okradziony, zatem, bilans jak najbardziej dodatni. Poznałem w Bydgoszczy wiele nowych osób, nie mówiąc już o nowych miejscach. Zanim przeprowadziłem się do Bydgoszczy słyszałem o tym mieście wiele złego, nigdy nie usłyszałem zdania pozytywnego. Tak, ktokolwiek mówił o nim, mówił: szare, brudne, niemiłe. Nie przeczę - takie jest każde większe miasto, ale nie wszędzie, nie całe. Dzielnica w której mieszkałem a później i pracowałem była czysta i zadbana, nie spotykałem się tam z żadnymi problemami. Dość nostalgii. Teraz pora na Warszawę. Nowa praca. W Bydgoszczy były dwie firmy z którymi współpracowałem - IRTI oraz Front Studios. Obie wspominam miło, chociaż zmiany żadnej nie żałuję, ponieważ w każdej zmianie jest coś dobrego. Obie firmy zajmowały się PHP. W pierwszej był to głównie hosting + wykonywanie zleceń w drugiej gry + erp + zlecenia. Nowa praca, nowe możliwości. Cytat ze strony mojego obecnego pracodawcy: System AutoControl© umożliwia ciągłą analizę i optymalizację wykorzystania taboru transportowego w dowolnym przedsiębiorstwie przewozowym. Użytkownik ma zapewniony dostęp do danych z dowolnego miejsca korzystając z internetowego systemu AutoControl©. Inteligentna aplikacja dostarcza użytkownikowi zdefiniowane przez niego raporty o charakterystyce pracy poszczególnych pojazdów, pozwalając optymalizować wykorzystanie taboru. Zasięg działania systemu AutoControl© obejmuje całą Europę. Życzcie mi powodzenia. W krótce więcej o PHP Unit 3. :)\n","permalink":"https://blog.dywicki.pl/2006/06/11/nowe-miasto-nowa-praca/","summary":"\u003cp\u003e\u003cstrong\u003eNowe miasto.\u003c/strong\u003e\nPo 11 miesiącach w Bydgoszczy przeprowadzka. W Bydgoszczy bądź co bądź zostaje prawie rok mojego życia. Wiele nowych osób, wiele nowych rzeczy. Przyznam, że ciężko było rezygnować z wszystkiego by zaczynać znowu od zera. Same miasto nie było złe, poza niektórymi rejonami dało się w nim żyć. Owszem, nie było tam gromady studentów tak jak w Toruniu, nie było porządku jak w moim rodzimym mieście, ale byli mili ludzie. Nikt na ulicy nie oklepał mi twarzy, nie zostałem napadnięty ani okradziony, zatem, bilans jak najbardziej dodatni. Poznałem w Bydgoszczy wiele nowych osób, nie mówiąc już o nowych miejscach. Zanim przeprowadziłem się do Bydgoszczy słyszałem o tym mieście wiele złego, nigdy nie usłyszałem zdania pozytywnego. Tak, ktokolwiek mówił o nim, mówił: szare, brudne, niemiłe. Nie przeczę - takie jest każde większe miasto, ale nie wszędzie, nie całe.\nDzielnica w której mieszkałem a później i pracowałem była czysta i zadbana, nie spotykałem się tam z żadnymi problemami.\nDość nostalgii. Teraz pora na Warszawę.\n\u003cstrong\u003eNowa praca.\u003c/strong\u003e\nW Bydgoszczy były dwie firmy z którymi współpracowałem - IRTI oraz Front Studios. Obie wspominam miło, chociaż zmiany żadnej nie żałuję, ponieważ w każdej zmianie jest coś dobrego. Obie firmy zajmowały się PHP. W pierwszej był to głównie hosting + wykonywanie zleceń w drugiej gry + erp + zlecenia.\nNowa praca, nowe możliwości. Cytat ze strony mojego obecnego pracodawcy:\n\u003cem\u003e\u003cstrong\u003eSystem AutoControl©\u003c/strong\u003e umożliwia ciągłą analizę i optymalizację wykorzystania taboru transportowego w dowolnym przedsiębiorstwie przewozowym. Użytkownik ma zapewniony dostęp do danych z dowolnego miejsca korzystając z internetowego systemu AutoControl©.\u003c/em\u003e\n\u003cem\u003eInteligentna aplikacja dostarcza użytkownikowi zdefiniowane przez niego raporty o charakterystyce pracy poszczególnych pojazdów, pozwalając optymalizować wykorzystanie taboru. Zasięg działania systemu AutoControl© obejmuje całą Europę.\u003c/em\u003e\nŻyczcie mi powodzenia. W krótce więcej o PHP Unit 3. :)\u003c/p\u003e","title":"Nowe miasto, nowa praca."},{"content":"Jeśli używasz dużo Java Scriptu w swoich projektach - zapamiętaj adres: http://www.getelementsby.com\nZa czas jakiś wracam do pisania..\n","permalink":"https://blog.dywicki.pl/2006/06/06/link/","summary":"\u003cp\u003eJeśli używasz dużo Java Scriptu w swoich projektach - zapamiętaj adres:\n\u003ca href=\"http://www.getelementsby.com/\"\u003ehttp://www.getelementsby.com\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eZa czas jakiś wracam do pisania..\u003c/p\u003e","title":"Link"},{"content":"Halo, jeśli korzystasz z IE, wystrzegaj się for opartych na Invision Power Board. Dzisiaj padło na forum Mojavi. W każdej chwili możesz trafić na malware. Śmieć ten powoduje poważne problemy.. chyba pora zmienić przeglądarkę na lepszą? ;]\n","permalink":"https://blog.dywicki.pl/2006/05/19/forummojaviorg/","summary":"\u003cp\u003eHalo, jeśli korzystasz z IE, wystrzegaj się for opartych na Invision Power Board. Dzisiaj padło na forum Mojavi. W każdej chwili możesz trafić na malware. Śmieć ten powoduje poważne problemy.. chyba pora zmienić przeglądarkę na lepszą? ;]\u003c/p\u003e","title":"forum.mojavi.org"},{"content":"I odbył się z dawna oczekiwany przez stołeczne miasto (Warszawę) oraz jego obywatelki zjazd markowany logiem #PHP.PL a organizowany przez FanFataLa. Pragnę podać tutaj link do drugiej galerii wykonywanej przy pomocy aparatu vipa, którego to nie ma u Anakina.\n[komentarze zablokowane z powodu spamu]\nhttp://chimera.one.pl/gallery/main.php?g2_itemId=7837 ","permalink":"https://blog.dywicki.pl/2006/05/14/zlot-phppl/","summary":"\u003cp\u003eI odbył się z dawna oczekiwany przez stołeczne miasto (Warszawę) oraz jego obywatelki zjazd markowany logiem #PHP.PL a organizowany przez FanFataLa. Pragnę podać tutaj link do drugiej galerii wykonywanej przy pomocy aparatu vipa, którego to nie ma u Anakina.\u003c/p\u003e\n\u003cp\u003e[komentarze zablokowane z powodu spamu]\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://chimera.one.pl/gallery/main.php?g2_itemId=7837\"\u003ehttp://chimera.one.pl/gallery/main.php?g2_itemId=7837\u003c/a\u003e \u003ca href=\"/wp-content/uploads/2006/05/100_4177,2.jpg\" title=\"Eskapada po plastik.\"\u003e\u003cimg alt=\"Eskapada po plastik.\" loading=\"lazy\" src=\"/wp-content/uploads/2006/05/100_4177,2.thumbnail.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e","title":"Zlot #PHP.PL"},{"content":"Dzisiaj, przed chwilą, całkiem przypadkowo zajrzałem na devzone (chyba najwyższa pora zacząć subskrybować rss) - a tam, na stronie bardzo ciekawy tekst, który tylko przejrzałem, a pod którym rozgorzała dyskusja. Dziewięć komentarzy na devzone to rzadkość tak samo jak na tym blogu ;).\nOto rzecz, która sprowokowała dyskusję: Dipping a toe into rapid application development for PHP a tyczy się ona prezentacji możliwości pewnego programu: PHP Blox demo\n","permalink":"https://blog.dywicki.pl/2006/05/08/rapid-application-development-for-php/","summary":"\u003cp\u003eDzisiaj, przed chwilą, całkiem przypadkowo zajrzałem na devzone (chyba najwyższa pora zacząć subskrybować rss) - a tam, na stronie bardzo ciekawy tekst, który tylko przejrzałem, a pod którym rozgorzała dyskusja. Dziewięć komentarzy na devzone to rzadkość tak samo jak na tym blogu ;).\u003c/p\u003e\n\u003cp\u003eOto rzecz, która sprowokowała dyskusję:\n\u003ca href=\"http://devzone.zend.com/node/view/id/216\"\u003eDipping a toe into rapid application development for PHP\u003c/a\u003e\na tyczy się ona prezentacji możliwości pewnego programu:\n\u003ca href=\"http://devzone.zend.com/content/samples/editor/phpblox2/phpblox2.html\"\u003ePHP Blox demo\u003c/a\u003e\u003c/p\u003e","title":"Rapid application development for PHP"},{"content":"Pierwsze kroki z Mojavi 4 Tradycyjnie już Mojavi jest dość trudnym frameworkiem do opanowania dla początkujących. Wiele razy, podczas rozwiązywania zawiłych problemów które pojawiają się na samym początku padają przekleństwa. By tego uniknąć powstał ten oto artykuł który zakłada, że znasz MVC oraz podstawy Mojavi (wiesz czym jest web framework).\nWchodzimy, wprowadzenie By zacząć pisać aplikacje przy użyciu Mojavi 4 będziesz potrzebował komputer z zainstalowanym serverem http oraz PHP5. Jeśli masz już działający serwer, będziesz potrzebował subversion, by pobrać przy jego pomocy kopię Mojavi na swój serwer.\nUruchamianie Mojavi 4 Gratulacje! Jeśli udało Ci się z powodzeniem zainstalować kopię frameworka w katalogu udostępnianym przez Twój serwer, powinieneś uruchomić swoją przeglądarkę i zajrzeć pod adres http://localhost/source/www/ by zobaczyć domyślny moduł Mojavi 4! :) Możesz teraz uruchomić kilka przykładów (link \u0026lsquo;Examples\u0026rsquo;) które są dostarczane razem z domyślnymi modułami Mojavi 4. Możesz również uruchomić testy dostarczone z Mojavi (link \u0026lsquo;Tests\u0026rsquo;). Domyślne moduły dostarczają także bogactwo kodu, który możesz wygrzebać by zobaczyć jak to działa! Nie mniej w następnej sekcji, przeprowadzimy Cię przez proces tworzenia Twojego pierwszego modułu. Dobrze, zatem stwórzmy nowy Kontroler, Widok, Szablon, i wszystko to z zupełnie innym wyglądem ( layoutem).\nBudowanie aplikacji By nauczyć się jak zbudować jakąś aplikacje w Mojavi 4, włączając w to Moduły, Kontrolery, Widoki oraz Layouty udaj się na stronę Your First Mojavi Application by przeczytać więcej.\nOryginał http://trac.mojavi.org/wiki/Mojavi4/GettingStarted\n","permalink":"https://blog.dywicki.pl/2006/05/07/pierwsze-kroki-z-mojavi-4/","summary":"\u003ch3 id=\"pierwsze-kroki-z-mojavi-4\"\u003ePierwsze kroki z Mojavi 4\u003c/h3\u003e\n\u003cp\u003eTradycyjnie już Mojavi jest dość trudnym frameworkiem do opanowania dla początkujących. Wiele razy, podczas rozwiązywania zawiłych problemów które pojawiają się na samym początku padają przekleństwa. By tego uniknąć powstał ten oto artykuł który zakłada, że znasz MVC oraz podstawy Mojavi (wiesz czym jest web framework).\u003c/p\u003e\n\u003ch3 id=\"wchodzimy-wprowadzenie\"\u003eWchodzimy, wprowadzenie\u003c/h3\u003e\n\u003cp\u003eBy zacząć pisać aplikacje przy użyciu Mojavi 4 będziesz potrzebował komputer z zainstalowanym \u003ca href=\"http://httpd.apache.org/\"\u003eserverem http\u003c/a\u003e oraz \u003ca href=\"http://php.net/\"\u003ePHP5\u003c/a\u003e. Jeśli masz już działający serwer, będziesz potrzebował \u003ca href=\"http://subversion.tigris.org/\"\u003esubversion\u003c/a\u003e, by pobrać przy jego pomocy kopię Mojavi na swój serwer.\u003c/p\u003e","title":"Pierwsze kroki z Mojavi 4"},{"content":"Mojavi 4 przeszło długą drogę - od początkowych diagramów uml. Obecnie oferuje pełną oraz elastyczną konfigurację XML, modularną architekturę, komponenty, buforowanie, obsługę datasource\u0026rsquo;ów, wstrzykiwanie zależności, walidację oraz wiele, wiele innych. Wszystko to przechodzi na końcu przez lekkie TDD (test driven design) testy sprawdzające. Wsród innych zamiarów bądź zaimplementowanych możliwości/podstawowych aspektów Mojavi 4 jest:\nModel View Controller - Najważniejsza część architektury, podstawa poprzednich frameworków Mojavi. Multi-project support - Posiadanie różnych projektów działających na tym samym kodzie bazowym. End-user controlled filters - Zawiera konfigurowalną obsługę wyjątków. Global and Forward Filters Application Controllers - Używane do obsługi wielu następujących po sobie stron do skomplikowanych formularzy bądź wizzardów (kreatorów). Sophisticated autoload support - bardzo, bardzo przydatny mechanizm do automatczynego dołączania klas/interfejsów, również z Twoich własnych bibliotek! Easy Validation? - Walidacja zawsze jest trudnym elementem do wprowadzenia w aplikacji. Myślimy, że mamy za sobą pracę, która sprawia, że ten częsty i niemiły element staje się łatwy do oprogramowania. Helpers - Pomocnicy są zbiorem szybkich bibliotek do użytku w całym frameworku (częston ich użycie oczyszcza logikę aplikacji). Renderers? - Wspólny interfejs dla silników szablonów. Renderery umożliwiają zmiany pomiędzy silnikami w prosty sposób. Logger? - Tak jak wszystko, aplikacje w Mojavi potrzebują logowania! Datastructures? - Średniej wielkości zbiór klas, które dostarczają implementacji wspólnych wzorców struktór danych, takich jak stack stos, queue kolejka lub chain łańcuch. Service Locator - Wstrzykiwanie zależności jest gorącym tematem. W skrócie, domyślny Service Locator z Mojavi 4 jest stworzony na bazie wstrzykiwania zależności. Można z niego korzystać w całej aplikacji bez żadnych zobowiązań w kodzie. Containers - Wszyscy potrzebujemy kontenerów. ;) Modules? - the Module series classes provide a programmic way to interface with the various pieces of your application. tego nie jestem w stanie przetłumaczyć. Easy Layouts? - layouty umożliwiają stworzenie wspólnego wyglądu i wykorzystanie go na wielu stronach w wielu widokach bez kopiowania kodu. Internationalization - Internationalization, otherwise known as i18n, or l10n, is a term used to refer to a process revolving around the end goal of creating an application which can be easily ported to a new audience in terms of content language and data formatting. tego również nie jestem w stanie przetłumaczyć. Oryginał http://trac.mojavi.org/wiki/\n","permalink":"https://blog.dywicki.pl/2006/05/06/osiagi-i-marzenia/","summary":"\u003cp\u003eMojavi 4 przeszło długą drogę - od \u003ca href=\"http://forum.mojavi.org/index.php?showtopic=1236\"\u003epoczątkowych diagramów uml\u003c/a\u003e. Obecnie oferuje pełną oraz elastyczną konfigurację XML, modularną architekturę, komponenty, buforowanie, obsługę datasource\u0026rsquo;ów, wstrzykiwanie zależności, walidację oraz wiele, wiele innych. Wszystko to przechodzi na końcu przez lekkie \u003ca href=\"http://www.lastcraft.com/simple_test.php\"\u003eTDD (test driven design)\u003c/a\u003e testy sprawdzające. Wsród innych zamiarów bądź zaimplementowanych możliwości/podstawowych aspektów Mojavi 4 jest:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/MVC\"\u003eModel View Controller\u003c/a\u003e - Najważniejsza część architektury, podstawa poprzednich frameworków Mojavi.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/Mutliproject\"\u003eMulti-project support\u003c/a\u003e - Posiadanie różnych projektów działających na tym samym kodzie bazowym.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/EndUserFilters\"\u003eEnd-user controlled filters\u003c/a\u003e - Zawiera konfigurowalną obsługę wyjątków.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/GlobalAndForwardFilters\"\u003eGlobal and Forward Filters\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/ApplicationControllers\"\u003eApplication Controllers\u003c/a\u003e - Używane do obsługi wielu następujących po sobie stron do skomplikowanych formularzy bądź wizzardów \u003cem\u003e(kreatorów)\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/Autoloader\"\u003eSophisticated autoload support\u003c/a\u003e - bardzo, bardzo przydatny mechanizm do automatczynego dołączania klas/interfejsów, również z Twoich własnych bibliotek!\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/Validators\"\u003eEasy Validation?\u003c/a\u003e - Walidacja zawsze jest trudnym elementem do wprowadzenia w aplikacji. Myślimy, że mamy za sobą pracę, która sprawia, że ten częsty i niemiły element staje się łatwy do oprogramowania.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/Helpers\"\u003eHelpers\u003c/a\u003e - Pomocnicy są zbiorem szybkich bibliotek do użytku w całym frameworku (częston ich użycie oczyszcza logikę aplikacji).\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/Renderers\"\u003eRenderers?\u003c/a\u003e - Wspólny interfejs dla silników szablonów. Renderery umożliwiają zmiany pomiędzy silnikami w prosty sposób.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/Logging\"\u003eLogger?\u003c/a\u003e - Tak jak wszystko, aplikacje w Mojavi potrzebują logowania!\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/Datastructures\"\u003eDatastructures?\u003c/a\u003e - Średniej wielkości zbiór klas, które dostarczają implementacji wspólnych wzorców struktór danych, takich jak stack \u003cem\u003estos\u003c/em\u003e, queue \u003cem\u003ekolejka\u003c/em\u003e lub \u003cem\u003echain\u003c/em\u003e łańcuch.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/ServiceLocator\"\u003eService Locator\u003c/a\u003e - Wstrzykiwanie zależności jest gorącym tematem. W skrócie, domyślny Service Locator z Mojavi 4 jest stworzony na bazie wstrzykiwania zależności. Można z niego korzystać w całej aplikacji bez żadnych zobowiązań w kodzie.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/Containers\"\u003eContainers\u003c/a\u003e - Wszyscy potrzebujemy kontenerów. \u003cem\u003e;)\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/Module\"\u003eModules?\u003c/a\u003e - the Module series classes provide a programmic way to interface with the various pieces of your application. \u003cem\u003etego nie jestem w stanie przetłumaczyć.\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/Layouts\"\u003eEasy Layouts?\u003c/a\u003e - layouty umożliwiają stworzenie wspólnego wyglądu i wykorzystanie go na wielu stronach \u003cem\u003ew wielu widokach\u003c/em\u003e bez kopiowania kodu.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://trac.mojavi.org/wiki/Mojavi4/i18n\"\u003eInternationalization\u003c/a\u003e - Internationalization, otherwise known as i18n, or l10n, is a term used to refer to a process revolving around the end goal of creating an application which can be easily ported to a new audience in terms of content language and data formatting. \u003cem\u003etego również nie jestem w stanie przetłumaczyć.\u003c/em\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOryginał \u003ca href=\"http://trac.mojavi.org/wiki/\"\u003ehttp://trac.mojavi.org/wiki/\u003c/a\u003e\u003c/p\u003e","title":"Osiągi i marzenia"},{"content":"Mojavi 4 jest najnowszą generacją tego projektu, wiodącego frameworka MVC w PHP przez wiele lat. Wydanie te następuje po długiej histori frameworków pisanych wyłącznie przez Seana Kerra. Pod koniec 2005 Sean zrezygnował z prowadzenia Mojavi przekazując swoją dotychczasową funkcję Tylerowi Tompkinsowi, który został głównym architektem Mojavi 4.\nMojavi 4 jest bardzo ambitnym projektem, który ma na celu stworzenie dla PHP odpowiednika tego czym jest jądro linuksa przy tworzeniu systemów operacyjnych. Maksymlna elastyczność, zastosowania lekkie bądź ciężke, delikatne oraz trwałe dzięki zastosowanemu frameworkowi. Domyślnie Mojavi 4 powinno być spójnym frameworkiem który nie zawiera warstwy dostępu do danych (data access layer) , chociaż oczywiście będzie obsługiwać rzeczy takie jak połączenia z bazą, ftp i tym podobne. Czyt aj - twórcy Mojavi nie zamierzają tworzyć kolejnego Ado DB tudzież Creole.\nOryginał http://trac.mojavi.org/wiki/\n","permalink":"https://blog.dywicki.pl/2006/05/06/czy-bedzie-mojavi-4/","summary":"\u003cp\u003eMojavi 4 jest najnowszą generacją tego projektu, wiodącego frameworka MVC w PHP przez wiele lat. Wydanie te następuje po długiej histori frameworków pisanych wyłącznie przez \u003ca href=\"http://trac.mojavi.org/wiki/People/SeanKerr\"\u003eSeana Kerra\u003c/a\u003e. Pod koniec 2005 Sean zrezygnował z prowadzenia Mojavi przekazując swoją dotychczasową funkcję \u003ca href=\"http://trac.mojavi.org/wiki/People/TylerTompkins\"\u003eTylerowi Tompkinsowi\u003c/a\u003e, który został głównym architektem Mojavi 4.\u003c/p\u003e\n\u003cp\u003eMojavi 4 jest bardzo ambitnym projektem, który ma na celu stworzenie dla PHP odpowiednika tego czym jest jądro linuksa przy tworzeniu systemów operacyjnych. Maksymlna elastyczność, zastosowania lekkie bądź ciężke, delikatne oraz trwałe dzięki zastosowanemu frameworkowi. Domyślnie Mojavi 4 powinno być spójnym frameworkiem który nie zawiera warstwy dostępu do danych (data access layer) , chociaż oczywiście będzie obsługiwać rzeczy takie jak połączenia z bazą, ftp i tym podobne. \u003cem\u003eCzyt\u003c/em\u003e\n\u003cem\u003eaj - twórcy Mojavi nie zamierzają tworzyć kolejnego Ado DB tudzież Creole.\u003c/em\u003e\u003c/p\u003e","title":"Czym będzie Mojavi 4"},{"content":"Zainspirowany ideą Layotów w M4 postanowiłem stworzyć małą wtyczkę do agavi, która umożliwi mi korzystanie z tego rozwiązania. Jest ona bardzo prosta i ułatwia masową zmianę szablonu głównego oraz slotów (o slotach jeszcze będę pisał).\nOto moje rozwiązanie: [php]\u0026lt; ?php\nclass ViewLayout {\nstatic public function set($layout, View $view) { $config = self::getConfig($layout);\nif(isset($config[\u0026lsquo;decorator\u0026rsquo;][\u0026lsquo;directory\u0026rsquo;])) { $view-\u0026gt;setDecoratorDirectory($config[\u0026lsquo;decorator\u0026rsquo;][\u0026lsquo;directory\u0026rsquo;]); $view-\u0026gt;setDecoratorTemplate($config[\u0026lsquo;decorator\u0026rsquo;][\u0026rsquo;template\u0026rsquo;]); } if($config[\u0026lsquo;database\u0026rsquo;] == true) { Propel::init(PropelDatabase::getDefaultConfigPath()); } if(isset($config[\u0026lsquo;slots\u0026rsquo;]) \u0026amp;\u0026amp; sizeof($config[\u0026lsquo;slots\u0026rsquo;]) \u0026gt; 0) { try { $view-\u0026gt;setSlots($config[\u0026lsquo;slots\u0026rsquo;]); } catch(AgaviException $e) { $view-\u0026gt;clearSlots(); } } }\nstatic protected function getConfig($layout) { $filename = realpath(dirname(__FILE__)) .\u0026rsquo;/\u0026rsquo;. $layout .\u0026rsquo;.layout.ini\u0026rsquo;; if($filename = ConfigCache::checkConfig($filename)) { return include($filename); } return array(); } } ?\u0026gt;[/php]\nInstalacja: Stworzyć w katalogu lib katalog layout a w nim plik ViewLayout.class.php. Jego zawartość jest wyżej. 1. Dodać w autoload.ini: [code]ViewLayout = \u0026ldquo;%AG_LIB_DIR%/layout/ViewLayout.class.php\u0026rdquo;[/code]\n2. Dodac w config_handlers.ini linijki: [code] [*layout.ini] class = ReturnArrayConfigHandler[/code]\n3. Stworzyć plik konfiguracyjny (np. frontend.layout.ini) w tym samym katalogu co plik z klasą. Przykładowy plik: [code] ;ścieżki dla dekoratora (opcjonalnie) decorator.template = frontend.tpl decorator.directory = %AG_TEMPLATE_DIR%\n; czy inicjować sesję propela (opcjonalnie) database = true\n; uwaga, składnia zgodna z metodą setSlots ; klasy View, poprawna notacja ; slots..module_name = ; slots..action_name = slots.slot_last_article.module_name = Default slots.slot_last_article.action_name = LastArticle\nslots.slot_last_articles.module_name = Default slots.slot_last_articles.action_name = LastArticles[/code]\n4. Użycie w klasie widoku: [php]\u0026lt; ?php ViewLayout::set(\u0026lsquo;frontend\u0026rsquo;, $this); ?\u0026gt;[/php] Myślę, że mechanizm jest na tyle prosty, że można go rozszeżać do własnych potrzeb. Dla każdego layoutu powinien istnieć plik konfiguracyjny /lib/layout/.layout.ini. W następnej części postaram się opisać filtr umożliwiający request-mapping.\n","permalink":"https://blog.dywicki.pl/2006/05/05/view-layout-i-agavi/","summary":"Zainspirowany ideą Layotów w M4 postanowiłem stworzyć małą wtyczkę do agavi, która umożliwi mi korzystanie z tego rozwiązania. Jest ona bardzo prosta i ułatwia masową zmianę szablonu głównego oraz slotów (o slotach jeszcze będę pisał).","title":"View Layout i Agavi"},{"content":"Skorzystałem z nadzarzającej się okazji i wziąłem trzydniowy urlop. W wyniku poświęcenia tychże 3 dni mam cały tydzień wolny. Czyż to nie cudownie? :)\nZ planów na urlop: recenzja Java 2. Techniki zaawansowane, komponent walidacji do Mojavi 4, zrobienie pewnego systemu, który winien być zrobiony dawno temu.\nCo byście powiedzieli na omówienie poszczególnych elementów/paczek Mojavi 4?\n","permalink":"https://blog.dywicki.pl/2006/04/30/wolne/","summary":"\u003cp\u003eSkorzystałem z nadzarzającej się okazji i wziąłem trzydniowy urlop. W wyniku poświęcenia tychże 3 dni mam cały tydzień wolny. Czyż to nie cudownie? :)\u003c/p\u003e\n\u003cp\u003eZ planów na urlop: recenzja  \u003ca href=\"http://helion.pl/ksiazki/jv2te2.htm\"\u003eJava 2. Techniki zaawansowane\u003c/a\u003e, komponent walidacji do Mojavi 4, zrobienie pewnego systemu, który winien być zrobiony dawno temu.\u003c/p\u003e\n\u003cp\u003eCo byście powiedzieli na omówienie poszczególnych elementów/paczek Mojavi 4?\u003c/p\u003e","title":"Wolne"},{"content":"Zend nabiera tempa. Po wpinaniu do ZF smarty przyszła kolej i na Propela. Artykuł o tym znajdziecie na Zend Developer Zone. Zainteresowani zapewne się znajdą. :)\n","permalink":"https://blog.dywicki.pl/2006/04/27/zend-framework-i-propel-2/","summary":"\u003cp\u003eZend nabiera tempa. Po wpinaniu do ZF smarty przyszła kolej i na Propela. Artykuł o tym znajdziecie na \u003ca href=\"http://devzone.zend.com/node/view/id/184\"\u003eZend Developer Zone\u003c/a\u003e. Zainteresowani zapewne się znajdą. :)\u003c/p\u003e","title":"Zend Framework i Propel"},{"content":"Tak jak obiecałem informacje na temat zmian w Mojavi 4. Mojavi jest jednym ze starszych frameworków dla PHP. Swoje korzenie ma jeszcze w PHP4 kiedy to powstała pierwsza (na chwilę obecną), ostatnia stabilna wersja – Mojavi 2.0. Po wejściu PHP5 okazało się, że M2 nie jest kompatybilne z nowym interpreterem. Zaczęło powstawać Mojavi 3. Istnieje również Yuma – Mojavi 2 zgodne z PHP5. W pewnym momencie grupa (a właściwie jedyna osoba) tworząca Mojavi zdecydowała, że projekt jest nienajlepszy. Mimo wszystko była to tylko kontynuacja M2, bez wykorzystania możliwości PHP5, oparta na klasach. M3 zostało wstrzymane a Sean Kerr (na forum illusina) zaczął tworzyć Mojavi 4. M3 utkęło w fazie DEV. Mimo wszystko framework jest bardzo stabilny, sam z niego korzystałem kilka razy i nie było problemów. Wszystko czego potrzeba było to tylko kilka komponentów, które można pobrać z sieci (między innymi SmartyView). Aby praca włożona w M3 nie poszła na daremne projekt przejął Tyler Tompkins. Tak powstało Agavi. Agavi oferuje dodatkową funkcjonalność, usuwa niektóre problemy z Mojavi (min. problem z nazwami klas), oferuje również wbudowane komponenty, których brakowało Mojavi: - SmartyView - XSLTView - CreoleDatabase - PropelDatabase - AdoDBDatabase - PDODatabase - ukończony mechanizm logowania - zaczątki modelu (na forum Agavi jest do pobrania ActiveRecord rodem z Cake/Rails) - ReturnArrayConfigHandler - ConsoleController - ConsoleRequest - HTTPSRequest - CreoleStorage - wsparcie dla Phinga – taski do tworzenia projektu, modulu, akcji, widoku, unit-testów). - bodajże DateValidator - FormPHPView (ma być w krótce usunięty).\nW międzyczasie, kiedy powstawało Agavi pojawił się kolejny projekt, który nadrabia największy brak Mojavi i póki co również Agavi.. dokumentację. Chodzi tutaj oczywiście o Symfony. Znowu dodatkowe komponenty, wbudowane I18n, pełna integracja z Propelem i Phingiem (generowanie akcji na podstawie struktury bazy).\nTo co mnie jednak najbardziej inspiruje to zmiany w M4, a są one ogromne. Na pierwszy ogień idzie całkowity redesign frameworka, który wg. zapowiedzi autorów ma być na tyle elastyczny by tworzyć w oparciu o niego inne, wyspecjalizowane frameworki. Jak to padło na forum “Framework for frameworks”.\nBardzo dobrym pomysłem w M4 jest Service Locator. Nie jest to co prawda SL który znam z definicji w PoEAA, ale spełnia podobne zadanie i znacznie uelastycznia budowę aplikacji. Wcześniej, gdy tworzyłem I18n dla Agavi musiałem grzebać po kodzie by dodać jego obsługę. Teraz wystarczy dodać do services.xml odpowiednie linijki i mamy już usługę, do której możemy się odwołać poprzez Service Locatora. Jest to swojego rodzaju kontener IoC, który znalazł swoje zastosowanie w projektach takich jak Spring (framework dla aplikacji pisanych w Javie).\nKolejną wielką zmianą, która na pewno wyjdzie projektowi na dobre jest zastosowanie Application Controllerów. Podobny mechanizm jest w Springu i przyznam, że bardzo mi się spodobał. Daje on potężne możliwości oraz ułatwia tworzenie akcji. Teraz nie musimy już się męczyć z tworzeniem formularzy, które chcemy realizować na kilku stronach – mamy od tego Step Application Controllera. Co prawda kolekcja kontrolerów jest jeszcze bardzo skromna (prócz wcześniej wymienionego nie ma innego rozszeżenia ApplicationControllera) ale liczę, że z czasem zacznie ich przybywać. Wreszcie akcje będą ciekawsze. ;)\nTotalnie przebudowany został mechanizm obsługujący wywoływanie widoków. Dzięki temu unikniemy problemów z dużą ilością powtarzającego się kodu w bardzo wielu plikach. W Mojavi 3 jeden widok = jedna klasa. W czwórce jeden widok to jedna metoda.\nKolejna nowość to typy widoków. Wcześniej by stworzyć widok, który wyrzucał dane w innym formacie (np generował plik pdf) trzeba było tworzyć kolejną akcję i kolejne klasy widoku. W Mojavi 4 można zmieniać typ outputu przy pomocy przełącznika ctype, który może wędrować również po adresie. Dzięki temu nie ma potrzeby dublowania kodu akcji. W nieznacznym stopniu powtarza się kod widoku. Schemat nazwy pliku to View.class.php. Po kilku chwilach walki udało mi się stworzyć moduł który w bardzo sprawny sposób pobierał fragmenty strony poprzez Ajax. Myślę, że z udostępnianiem danych via JSON dla JS nie byłoby również problemu.\nNiejako spełnieniem oczekiwań jest wprowadzenie Layout-ów. W M3 elementy dynamiczne wchodzące w skład widoku były ustawiane poprzez setSlot. Gdy trzeba było dodać w całej aplikacji nowy blok konieczne były zmiany we wszystkich widokach. Teraz każda klasa widoku zwraca odpowiedni layout, który w gruncie rzeczy jest odseparowanym fragmentem kodu z informacjami na temat tego jakie komponenty mają być użyte. Teraz tzw. bloki mogą być również oddzielnymi szablonami. Wcześniej każdy blok musiał mieć swoją akcję, obecnie wystarczy odpowiednie wykorzystanie registerComponent.\nW czwórce możemy również w obrębie jednej klasy widoku korzystać z różnych rendererów. Wcześniej to przez jaki renderer przechodził szablon było uzależnione od tego z jakiej klasy dziedziczył widok, obecnie każdy widok może korzystać z różniastych klas (vide SmartyRenderer, PHPRenderer etc.) a zatem różne fragmenty stron, jeśli zajdzie taka potrzeba mogą być generowane różnymi technikami. Reasumując. Mojavi 4 to na pewno krok w dobrą stronę. Framework zatrzymuje to, co było najlepsze w poprzednich wersjach równocześnie dorzucając gro przydatnych nowości, które na pewno umilą tworzenie aplikacji w PHP. Sam obserwuję SVN z wypiekami na twarzy by wyłapać wszystkie zmiany jakie zachodzą. Mimo, że w PHP w chwili obecnej piszę na prawdę niewiele to nie mogę się doczekać wydania chociażby bety. M4 polecam waszej uwadze.\n","permalink":"https://blog.dywicki.pl/2006/04/25/mojavi-4-z-bliska/","summary":"Tak jak obiecałem informacje na temat zmian w Mojavi 4.\nMojavi jest jednym ze starszych frameworków dla PHP. Swoje korzenie ma jeszcze w PHP4 kiedy to powstała pierwsza (na chwilę obecną), ostatnia stabilna wersja – Mojavi 2.0. Po wejściu PHP5 okazało się, że M2 nie jest kompatybilne z nowym interpreterem. Zaczęło powstawać Mojavi 3. Istnieje również Yuma – Mojavi 2 zgodne z PHP5. W pewnym momencie grupa (a właściwie jedyna osoba) tworząca Mojavi zdecydowała, że projekt jest nienajlepszy. Mimo wszystko była to tylko kontynuacja M2, bez wykorzystania możliwości PHP5, oparta na klasach. M3 zostało wstrzymane a Sean Kerr (na forum illusina) zaczął tworzyć Mojavi 4. M3 utkęło w fazie DEV. Mimo wszystko framework jest bardzo stabilny, sam z niego korzystałem kilka razy i nie było problemów. Wszystko czego potrzeba było to tylko kilka komponentów, które można pobrać z sieci (między innymi SmartyView). Aby praca włożona w M3 nie poszła na daremne projekt przejął Tyler Tompkins. Tak powstało Agavi. Agavi oferuje dodatkową funkcjonalność, usuwa niektóre problemy z Mojavi (min. problem z nazwami klas), oferuje również wbudowane komponenty, których brakowało Mojavi:\n- SmartyView\n- XSLTView\n- CreoleDatabase\n- PropelDatabase\n- AdoDBDatabase\n- PDODatabase\n- ukończony mechanizm logowania\n- zaczątki modelu (na forum Agavi jest do pobrania ActiveRecord rodem z Cake/Rails)\n- ReturnArrayConfigHandler\n- ConsoleController\n- ConsoleRequest\n- HTTPSRequest\n- CreoleStorage\n- wsparcie dla Phinga – taski do tworzenia projektu, modulu, akcji, widoku, unit-testów).\n- bodajże DateValidator\n- FormPHPView (ma być w krótce usunięty).","title":"Mojavi 4, z bliska."},{"content":"Manual do Zend Frameworka, zajrzałem tam dopiero dzisiaj, ale dobrze wiedzieć, że jest jakaś biblioteka do PDF, która ma dokumentacje na dobrym poziomie. Jeśli zend będzie prowadził dokumentacje w taki sposób ma spore szanse na to by pobić konkurencje. Manual znajdziecie pod adresem http://framework.zend.com/manual Dokumentacja do Zend_PDF.\n","permalink":"https://blog.dywicki.pl/2006/04/24/zend-manual/","summary":"\u003cp\u003eManual do Zend Frameworka, zajrzałem tam dopiero dzisiaj, ale dobrze wiedzieć, że jest jakaś biblioteka do PDF, która ma dokumentacje na dobrym poziomie.\nJeśli zend będzie prowadził dokumentacje w taki sposób ma spore szanse na to by pobić konkurencje.\nManual znajdziecie pod adresem \u003ca href=\"http://framework.zend.com/manual\" title=\"ZF\"\u003ehttp://framework.zend.com/manual\u003c/a\u003e\nDokumentacja do \u003ca href=\"http://framework.zend.com/manual/en/zend.pdf.html\" title=\"ZF_PDF\"\u003eZend_PDF\u003c/a\u003e.\u003c/p\u003e","title":"Zend Manual."},{"content":"Sporo czasu minęło od ostatniej notki typowo technicznej.. mam nadzieję, że zmiana designu na troszkę lżejszy Wam się spodoba. :) Moja nieobecność wynikła poniekąd sama z siebie, blog przez dłuższy czas zszedł na dalszy plan. Nie robiłem również nic wielkiego także nie miałem nawet o czym zbytnio pisać. W najbliższym tygodniu postaram się opublikować sporą notkę na temat Mojavi 4.\n","permalink":"https://blog.dywicki.pl/2006/04/23/wracam/","summary":"\u003cp\u003eSporo czasu minęło od ostatniej notki typowo technicznej.. mam nadzieję, że zmiana designu na troszkę lżejszy Wam się spodoba. :)\nMoja nieobecność wynikła poniekąd sama z siebie, blog przez dłuższy czas zszedł na dalszy plan. Nie robiłem również nic wielkiego także nie miałem nawet o czym zbytnio pisać.\nW najbliższym tygodniu postaram się opublikować sporą notkę na temat Mojavi 4.\u003c/p\u003e","title":"Wracam."},{"content":"Imię: Łukasz Nazwisko: Dywicki Urodzony: 30.12.1985\nZnajomość języków/technologi:\nPHP 4: bardzo dobrze PHP 5: bardzo dobrze Java: średnio SQL: średnio PL/PGSQL: podstawy XML: bardzo dobrze XPath: bardzo dobrze XSLT: średnio XML Schema: dobrze CSS: średnio XHTML: bardzo dobrze Java Script: dobrze WSDL: średnio C++/C: podstawy Mój profil na linkedin Mój profil na goldenline\n","permalink":"https://blog.dywicki.pl/about/","summary":"\u003cp\u003eImię: Łukasz\nNazwisko: Dywicki\nUrodzony: 30.12.1985\u003c/p\u003e\n\u003cp\u003eZnajomość języków/technologi:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePHP 4: bardzo dobrze\u003c/li\u003e\n\u003cli\u003ePHP 5: bardzo dobrze\u003c/li\u003e\n\u003cli\u003eJava: średnio\u003c/li\u003e\n\u003cli\u003eSQL: średnio\u003c/li\u003e\n\u003cli\u003ePL/PGSQL: podstawy\u003c/li\u003e\n\u003cli\u003eXML: bardzo dobrze\u003c/li\u003e\n\u003cli\u003eXPath: bardzo dobrze\u003c/li\u003e\n\u003cli\u003eXSLT: średnio\u003c/li\u003e\n\u003cli\u003eXML Schema: dobrze\u003c/li\u003e\n\u003cli\u003eCSS: średnio\u003c/li\u003e\n\u003cli\u003eXHTML: bardzo dobrze\u003c/li\u003e\n\u003cli\u003eJava Script: dobrze\u003c/li\u003e\n\u003cli\u003eWSDL: średnio\u003c/li\u003e\n\u003cli\u003eC++/C: podstawy\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"http://linkedin.com/in/splatch\"\u003eMój profil na linkedin\u003c/a\u003e \u003ca href=\"http://www.goldenline.pl/lukasz-dywicki\"\u003eMój profil na goldenline\u003c/a\u003e\u003c/p\u003e","title":"About me"},{"content":"Zmieniając siebie na lepsze możemy zmienić świat. Ideał, słowo klucz. Czyż nie jest miłe dążenie do ideałów? Czyż nie jest miła świadomość tego, że możemy kształtować oraz decydować o swoim życiu? Będąc śwadomym tego, że są ideały można się cieszyć miłoścą, wiarą, wiedzą, czy po prostu życiem, po prostu tym, co się ma. Bądź kowalem swojego losu. Bądź sobą. A nawet jeśli nie uda mi się zmienić samego siebie na lepsze to czy nie będze miłe ostatnie z uczuć - spełnienie tym, że walczyłem jak tylko mogłem i jak tylko potrafiłem? Owszem będzie, będzie bardzo miłe.\n","permalink":"https://blog.dywicki.pl/2006/04/06/57/","summary":"\u003cp\u003eZmieniając siebie na lepsze możemy zmienić świat. Ideał, słowo klucz. Czyż nie jest miłe dążenie do ideałów?\nCzyż nie jest miła świadomość tego, że możemy kształtować oraz decydować o swoim życiu? Będąc śwadomym tego, że są ideały można się cieszyć miłoścą, wiarą, wiedzą, czy po prostu życiem, po prostu tym, co się ma.\nBądź kowalem swojego losu. Bądź sobą.\nA nawet jeśli nie uda mi się zmienić samego siebie na lepsze to czy nie będze miłe ostatnie z uczuć - spełnienie tym, że walczyłem jak tylko mogłem i jak tylko potrafiłem? Owszem będzie, będzie bardzo miłe.\u003c/p\u003e","title":"."},{"content":"Trudno mi opisać to, co czuję, ale postaram się. Nie podoba mi się to. Nie podoba mi się sytuacja na polskiej scenie politycznej. Obserwując to, co serwuje mi czasami odbiornik telewizyjny mam wrażenie, że ten kraj zmierza do nikąd, a jeśli nie w tą stronę, to w inną, ale tak samo niebezpieczną - w stronę radykalizmu, ksenofobii czy też szowinizmu. Wiem, że w dużej mierze powtarzam, to co jest faktem, ale chyba mam do tego prawo? Mam prawo do niezadowolenia z tego, że rządzi tym krajem partia, na która nie głosowałem, która robi to źle i kosztem społeczeństwa. W tej chwili jestem już wrogiem mniej więcej 50% polaków. Jak stworzyć sobie taką potęgę (wszak o wielkości człowieka świadczy wielkość jego wrogów, ale ich liczba również ma ogromne znaczenie)? Po prostu - sprzeciwić się woli PiSu. Znowu powtarzam utarty schemat, który wykreowały media.. notabene część układu, ale czyż tak nie jest? Czy PiS na jakąś krytykę zareagował inaczej niźli agresją? Nie podoba mi się to, że dla nich wszędzie jest układ. Układy są - i mniejsze, lokalne i większe jak słoneczny. Ale nie ma ich wszędzie. Nie ma ich pod moim łóżkiem, nie ma ich w mojej pracy, nie spotkałem się też z nimi w urzędach, które odwiedzałem (mimo wieku kilka już odwiedziłem). Czyż nie jest to wystarczający dowód, że miejsca bez skaz są? Dla wielkich, chociaż w zasadzie małych, braci to jest za mało. Uczciwi są Ci, któzy wierzą w to co oni, wyznają zasady te co oni, zgadzają się z tym co mówią tylko oni. A zatem nie jestem ucziwy, ponieważ nie wierzę w to co oni, ani w IV RP, ani w to, że oni zmienią nas na lepsze swoimi spodobami. Nie wyznaję ich zasad. Dla mnie, jeśli ktoś ma inne zdanie nie jest kłamcą, jeśli jest homoseksualistą ma prawo żyć, jest pacyfistą - ma prawo w to wierzyć. W przeciwieństwie do kaczyńskich mogę się mylić w swych przekonaniach. Jestem tego świadom i się tego nie boję. Dobrze mi z tym, ponieważ mam do tego pełne prawo. Wyznaję inne zasady - zasadę równouprawnienia bez względu na wiarę czy jej brak, przekonania polityczne, preferencje seksualne i inne. Wyznaję pluralizm, są inne partie, z którymi się zgadzam, one również powinny mieć udział w parlamencie. Nie jestem również ucziwy ponieważ nie zgadzam się z tym co mówią (to udowadniam pisząc ten tekst). Kiedy kaczyńscy \u0026ldquo;wyzwalali\u0026rdquo; sami Polskę, a reszta na nich tylko donosiła bądź się zajmowała czymś mniej poeważnym niż oni nie było mnie na świecie. Niewiele pamiętam z tego co się działo przed 89. Wiem, że kiedyś stałem z mamą w kolejce przed sklepem, gdzie sprzedawano AGD po lodówkę. Pamiętam, że tata pracował w PBRol-ach. Nie pamiętam jak mi się żyło w tedy, ale nie narzekam. O wiele więcej mogę powiedzieć o czasach, kiedy to już byliśmy wyzwoleni. W bogactwie nie żyłem i nie żyję. Nie dlatego, że nie jestem częścią żadnego układu, a dlatego, że moi rodzice pochodzili z biednych rodzin i musieli ciężko pracować na to co teraz mają. Mimo wszystko nie wierzę w to, że bogaci to tylko złodzieje i układy. Wiem, że można dorobić się nie tylko na konszachtach i oszustwach. Nie mam recepty na naprawę tego co się dzieje. Nie ma jej prawdopodobnie większość społeczeństwa. Nie mniej, nie chcę by wyznacznikiem tego, czy mam się z kimś spotykać jest jego stosunek do PiSu, tego czy mogę czytać jakieś czasopismo jest jego stosunek do PiSu, a przede wszystkim nie chcę by o wartości i uczciwości człowieka świadczył jego stosunek do PiSu.\n","permalink":"https://blog.dywicki.pl/2006/03/17/co-sie-w-tym-kraju-dzieje/","summary":"\u003cp\u003eTrudno mi opisać to, co czuję, ale postaram się. Nie podoba mi się to. Nie podoba mi się sytuacja na polskiej scenie politycznej. Obserwując to, co serwuje mi czasami odbiornik telewizyjny mam wrażenie, że ten kraj zmierza do nikąd, a jeśli nie w tą stronę, to w inną, ale tak samo niebezpieczną - w stronę radykalizmu, ksenofobii czy też szowinizmu. Wiem, że w dużej mierze powtarzam, to co jest faktem, ale chyba mam do tego prawo? Mam prawo do niezadowolenia z tego, że rządzi tym krajem partia, na która nie głosowałem, która robi to źle i kosztem społeczeństwa.\nW tej chwili jestem już wrogiem mniej więcej 50% polaków. Jak stworzyć sobie taką potęgę (wszak o wielkości człowieka świadczy wielkość jego wrogów, ale ich liczba również ma ogromne znaczenie)? Po prostu - sprzeciwić się woli PiSu. Znowu powtarzam utarty schemat, który wykreowały media.. notabene część układu, ale czyż tak nie jest? Czy PiS na jakąś krytykę zareagował inaczej niźli agresją?\nNie podoba mi się to, że dla nich wszędzie jest układ. Układy są - i mniejsze, lokalne i większe jak słoneczny. Ale nie ma ich wszędzie. Nie ma ich pod moim łóżkiem, nie ma ich w mojej pracy, nie spotkałem się też z nimi w urzędach, które odwiedzałem (mimo wieku kilka już odwiedziłem). Czyż nie jest to wystarczający dowód, że miejsca bez skaz są?\nDla wielkich, chociaż w zasadzie małych, braci to jest za mało. Uczciwi są Ci, któzy wierzą w to co oni, wyznają zasady te co oni, zgadzają się z tym co mówią tylko oni. A zatem nie jestem ucziwy, ponieważ nie wierzę w to co oni, ani w IV RP, ani w to, że oni zmienią nas na lepsze swoimi spodobami. Nie wyznaję ich zasad. Dla mnie, jeśli ktoś ma inne zdanie nie jest kłamcą, jeśli jest homoseksualistą ma prawo żyć, jest pacyfistą - ma prawo w to wierzyć. W przeciwieństwie do kaczyńskich mogę się mylić w swych przekonaniach. Jestem tego świadom i się tego nie boję. Dobrze mi z tym, ponieważ mam do tego pełne prawo. Wyznaję inne zasady - zasadę równouprawnienia bez względu na wiarę czy jej brak, przekonania polityczne, preferencje seksualne i inne. Wyznaję pluralizm, są inne partie, z którymi się zgadzam, one również powinny mieć udział w parlamencie. Nie jestem również ucziwy ponieważ nie zgadzam się z tym co mówią (to udowadniam pisząc ten tekst).\nKiedy kaczyńscy \u0026ldquo;wyzwalali\u0026rdquo; sami Polskę, a reszta na nich tylko donosiła bądź się zajmowała czymś mniej poeważnym niż oni nie było mnie na świecie. Niewiele pamiętam z tego co się działo przed 89. Wiem, że kiedyś stałem z mamą w kolejce przed sklepem, gdzie sprzedawano AGD po lodówkę. Pamiętam, że tata pracował w PBRol-ach. Nie pamiętam jak mi się żyło w tedy, ale nie narzekam. O wiele więcej mogę powiedzieć o czasach, kiedy to już byliśmy wyzwoleni. W bogactwie nie żyłem i nie żyję. Nie dlatego, że nie jestem częścią żadnego układu, a dlatego, że moi rodzice pochodzili z biednych rodzin i musieli ciężko pracować na to co teraz mają. Mimo wszystko nie wierzę w to, że bogaci to tylko złodzieje i układy. Wiem, że można dorobić się nie tylko na konszachtach i oszustwach.\nNie mam recepty na naprawę tego co się dzieje. Nie ma jej prawdopodobnie większość społeczeństwa. Nie mniej, nie chcę by wyznacznikiem tego, czy mam się z kimś spotykać jest jego stosunek do PiSu, tego czy mogę czytać jakieś czasopismo jest jego stosunek do PiSu, a przede wszystkim nie chcę by o wartości i uczciwości człowieka świadczył jego stosunek do PiSu.\u003c/p\u003e","title":"Co sie w tym kraju dzieje?"},{"content":"Przeczytałem właśnie, że Zend nie dogadał się ze społecznością tworzącą PHP Eclipse i cały projekt będzie rozwijany od nowa. Jak napisał Lester Caine: Jedynym powodem dla ktorego PHP Eclipse nie moze stac sie podstawa jest fakt, ze nie mamy czasu ani zasobow by zaglebiac sie w dokumentacje. Nie zdołalismy przekonać społeczności PHPEclipse że podejście Zenda bylo lepsze. Powiedzieli, że powinniśmy się dołączyć do ich projektu. Wygląda to bardziej na zagarnięcie niż konstruktywne programowanie. Dziękuję Tasmanowi za pomoc w tłumaczeniu. :)\nCzyżby typowe PHPowe podejście? Na to wygląda - nie bierzemy tego, bo nie nasze, ponieważ trzeba sie zapoznać z dokumentacją, bo to bo tamto. Nie dziwie się twórcom PHP Eclipse, że nie dali się wciągnąć w projekt tworzenia kolejnego IDE, skoro ich już jest w miare rozwinięte. W ten sposób pozbyli by się trzech lat włożonych w rozwój PHP Eclipse. Myślę, że tutaj to właśnie Zend winien się dołączyć do PHP Eclipse. Dziwi mnie jednak, że nie doszli do porozumienia - czyżby trafił kozak na tatarzyna? Spora szansa na stworzenie potężnego IDE dla PHP właśnie przepada. Zend i reszta będzie tworzyć całość od nowa.. Dziwi mnie, że Zend chcący uchodzić za firmę wspierającą open source nie dołączył się.. Jestem zawiedziony tym, że firma, która ma bardzo duży wpływ na PHP nie potrafi dojść do konsensusu z paroma osobami. Pora na stworzenie kolejnej fundacji: PHP - porozumienie bez barier. Zend swoim postępowaniem utrudnia konsolidację i tak jużwystarczająco podzielonego środowiska PHP. Takie postępowanie do niczego nie prowadzi, z pewnością nie sprzyja powstawaniu społeczności przy ich projekcie..\n","permalink":"https://blog.dywicki.pl/2006/03/10/eclipse-php-ide-bez-udzialu-php-eclipse/","summary":"\u003cp\u003ePrzeczytałem właśnie, że Zend nie dogadał się ze społecznością tworzącą PHP Eclipse i cały projekt będzie rozwijany od nowa. Jak napisał Lester Caine:\nJedynym powodem dla ktorego PHP Eclipse nie moze stac sie podstawa jest fakt, ze nie mamy czasu ani zasobow by zaglebiac sie w dokumentacje.\nNie zdołalismy przekonać społeczności PHPEclipse że podejście Zenda bylo lepsze. Powiedzieli, że powinniśmy się dołączyć do ich projektu. Wygląda to bardziej na zagarnięcie niż konstruktywne programowanie.\nDziękuję Tasmanowi za pomoc w tłumaczeniu. :)\u003c/p\u003e","title":"Eclipse PHP IDE, bez udzialu PHP Eclipse"},{"content":"Warto zaznaczyć, że projekt jest już zatwierdzony, i chyba będzie tworzony w ramach IDE, które miało powstać dla ZF. Jak niosą wieści: Jest idea stworzenia open-source\u0026rsquo;owego IDE dla PHP opartego na platformie Eclipse Tools. Dalej - PHP zaczęto rozwijać 10 lat temu jako projekt open-source. W ciągu 10 lat PHP zyskało popularność. Obecnie ponad 23 miliony domen korzysta z PHP. Prostota PHP oraz fakt iż jest bezpłatne sprzyja jego adaptowaniu. Projekt powinien być rozwijany jako wstępny plugin. Z czasem powinny powstawać kolejne pluginy wykorzystujące API Eclipse by rozszerzać funkcjonalność IDE. Projekt powinien być wpięty w rozszerzenia, docelowa funkcjonalność to tworzenie (developing), rozwijanie (deploying), dokumentowanie, debugging oraz testowanie.\nPlan: Planujemy rozpocząć prace od końca pierwszego kwartału 2006 roku. Po udostępnieniu wersji początkowej (bety?) zaczniemy rozwijać funkcjonalność. Pierwsza wersja będzie wydana możliwie szybko.\nZainteresowani: - Actuate - IBM - Intel - SAP - Zend\nWięcej interesujących szczegółów znajdziecie na http://eclipse.org/proposals/php-ide/\nW sumie, fajnie, że powstaje w końcu obiecane IDE dla PHP.. dziwi mnie jednak, że nikt nie zaznaczył, że taki projekt na plarformie eclipse jest już rozwijany - mowa tutaj o PHP Eclipse.. Ciekaw jestem czy znowu zaczną wynajdować koło na nowo czy skorzystają z już częściowo gotowych rozwiązań. Czy Zend znowu zacznie wszystko od zera tak jak z komponentami ZF? Ogromną nadzieją napawa fakt, że tym IDE zainteresowały się wielkie korporacje tj. Intel, IBM czy też SAP. Swoją drogą, byłem święcie przekonany, że SAP to stricle javowa korporacja, a tutaj taka niespodzianka. :) Interesujące wydaje się również wymienienie Intela.. czyżby tak jak Skype 2.0 tak i Eclipse PHP IDE miało chodzić tylko na dwurdzeniowych procesorach Intela? ;). Czas pokaże, co z tego wyjdzie. Nie sposób niezauważyć, że IBM bardzo się angażuje w PHP - począwszy od draftów na temat PHP6 po IDE - czyżby IBM wiązał z PHP jakieś plany? Jakiś czas temu słyszałem również, że Oracle planuje zainwestować spore pieniądze w rynek oprogramowania Open Source kupując między innymi Zenda. Interesujące, nieprawdaż?\n","permalink":"https://blog.dywicki.pl/2006/03/09/eclipse-php-ide/","summary":"\u003cp\u003eWarto zaznaczyć, że projekt jest już zatwierdzony, i chyba będzie tworzony w ramach IDE, które miało powstać dla ZF. \u003cstrong\u003eJak niosą wieści\u003c/strong\u003e:\nJest idea stworzenia open-source\u0026rsquo;owego IDE dla PHP opartego na platformie Eclipse Tools.\nDalej - PHP zaczęto rozwijać 10 lat temu jako projekt open-source. W ciągu 10 lat PHP zyskało popularność. Obecnie ponad 23 miliony domen korzysta z PHP. Prostota PHP oraz fakt iż jest bezpłatne sprzyja jego adaptowaniu.\nProjekt powinien być rozwijany jako wstępny plugin. Z czasem powinny powstawać kolejne pluginy wykorzystujące API Eclipse by rozszerzać funkcjonalność IDE. Projekt powinien być wpięty w rozszerzenia, docelowa funkcjonalność to tworzenie (developing), rozwijanie (deploying), dokumentowanie, debugging oraz testowanie.\u003c/p\u003e","title":"Eclipse PHP IDE"},{"content":"Dzisiaj zainspirowany rozmową na ircu i ciekawym zapytaniem postanowiłem zaintersować się db4o. Muszę przyznać, że całość jest dość prosta, właściwie banalna. Wykorzystanie db4o sprowadza się do zaimportowania kilku klas.. i gotowe. Koniec męczenia się z SQLem, z korzystaniem z ORMów i tak dalej.. koniec! :) Wrzucasz obiekt, dostajesz z powrotem obiekt. Jestem zachwycony możliwościami db4o, chociaż odkryłem dopiero ich nieznaczną część.. zachęcam do spojrzenia na notkę z innego bloga. Dla przykładu załączam źródła: db4o.test\n","permalink":"https://blog.dywicki.pl/2006/03/08/db4o-in-action/","summary":"\u003cp\u003eDzisiaj zainspirowany rozmową na ircu i ciekawym zapytaniem postanowiłem zaintersować się db4o. Muszę przyznać, że całość jest dość prosta, właściwie banalna. Wykorzystanie db4o sprowadza się do zaimportowania kilku klas.. i gotowe. Koniec męczenia się z SQLem, z korzystaniem z ORMów i tak dalej.. koniec! :) Wrzucasz obiekt, dostajesz z powrotem obiekt. Jestem zachwycony możliwościami db4o, chociaż odkryłem dopiero ich nieznaczną część.. zachęcam do spojrzenia \u003ca href=\"http://jacekolszak.blogspot.com/2005/09/odbms-vs-rdbms-czyli-wydajno-i-wygoda.html\"\u003ena notkę z innego bloga\u003c/a\u003e.\nDla przykładu załączam źródła: \u003ca href=\"http://img.dywicki.pl/db4o.zip\"\u003edb4o.test\u003c/a\u003e\u003c/p\u003e","title":"db4o in Action!"},{"content":"Jakiś czas temu, gdy walczyłem ze swoimi pierwszymi servletami dzięki koledze zetknąłem się ze springiem. Wiedziałem, że ten framework istnieje, ale dopiero z jego pomocą stworzyłem pierwszą akcję. Idea jest bardzo prosta - na podstawie pliku beans.xml kontener IoC dopasowywuje klasę do adresu. Może być też tak, że mapowane są nazwy beanów do adresu - np. \u0026gt;. To co mnie oczarowało w springu to świetne rozwiązania. Bardzo spodobały mi się zróżnicowane akcje. To już nie jest Cake PHP, gdzie nazwa ApplicationController ma znaczenie bardziej symboliczne niż praktyczne czy Struts ze swoimi biernym akcjami. Przy potencjale jaki oferują kontrolery Springa wiele frameworków wymięka. Poniżej prezentuje diagram klas wykonany w programie Dia obrazujący powiązania kontrolerów we wcześniej zachwalanym frameworku. Całość działa bardzo fajnie - w zależności od klasy z której dziedziczymy mamy różne rodzaje akcji. Np. SimpleFormController to typowy układ wprowadź+pokaż błędy+wykonaj akcję. AbstractWizzardController wykorzystuje się, gdy mamy kilkukrokowe formularze zapytań wykorzystujemy BaseCommandController jeśli tych kroków jest o wiele więcej wykorzystujemy AbstractWizzardController. Kontroler zawsze zwraca obiekt ModelAndView, który zawiera informację jaki widok ma być wykonany oraz dane, które mają do niego trafić. Dzięki temu jeden widok może być uruchamiany przez wiele akcji przy zmienionych danych. Układ jest bardzo dobry, zawsze brakowało mi czegoś takiego w Mojavi, które pod względem widoków jest trochę w tyle ponieważ wymusza tworzenie wielu plików i utrudnia ponowne wykorzystanie choćby samych szablonów.\nZrobiłem również prosty diagram sekwncji by pokazać jak wygląda obsługa wywołania. Niestety Dia nie dostarcza żadnych komponentów z których się przy takich diagramach korzysta i stąd taka a nie inna jakość niżej załączonego obrazka: Co daje nam zastosowanie elementu pośredniczącego jakim jest ModelAndView? Daje możliwość zastosowania dodatkowego ogniwa, którego na tym diagramie nie ma ponieważ jest to robione w Dispatcher Servlet, to znaczy View Resolverów. View Resolver to element który w rzeczywistości uruchamia widok. Na podstawie przekazanej nazwy widoku dodaje prefix, sufix i sprawdza czy plik istnieje. Jeśli istnieje to uruchamia widok z danymi, które zwróciła akcja, jeśli nie zwraca false a DispatcherServlet uruchamia kolejnego VewReoslvera w celu odnalezienia widoku. Kolejność można określić w konfiguracji. Można mieć kilka resolverów, można mieć jeden. Jeśli nie zostanie odnaleziony widok Dispatcher Servlet wywali odpowiedni wyjątek. To rozwiązanie daje możliwość tworzenia wielu typów widoku, obsługiwanego poprzez różne mechanizmy dla jednej akcji. Bez zmian w akcji można zmienić format outputu oraz to czy obsłuży go nam JSP bądź Freemaker. Czyż to nie cudowne? :) Możliwe, że całość opisałem dość niejasno, dlatego proszę - jeśli trafi się tutaj osoba znająca springa - o sprostowania.\n","permalink":"https://blog.dywicki.pl/2006/03/02/troszk-inne-mvc/","summary":"\u003cp\u003eJakiś czas temu, gdy walczyłem ze swoimi pierwszymi servletami dzięki koledze zetknąłem się ze springiem. Wiedziałem, że ten framework istnieje, ale dopiero z jego pomocą stworzyłem pierwszą akcję. Idea jest bardzo prosta - na podstawie pliku beans.xml kontener IoC dopasowywuje klasę do adresu. Może być też tak, że mapowane są nazwy beanów do adresu - np. \u003cbean id=\"/foo.html\" /\u003e\u0026gt;.\nTo co mnie oczarowało w springu to świetne rozwiązania. Bardzo spodobały mi się zróżnicowane akcje. To już nie jest Cake PHP, gdzie nazwa ApplicationController ma znaczenie bardziej symboliczne niż praktyczne czy Struts ze swoimi biernym akcjami. Przy potencjale jaki oferują kontrolery Springa wiele frameworków wymięka. Poniżej prezentuje diagram klas wykonany w programie Dia obrazujący powiązania kontrolerów we wcześniej zachwalanym frameworku.\n\u003cimg alt=\"Diagram klas\" loading=\"lazy\" src=\"http://img.dywicki.pl/Diagram1.dia.png\"\u003e\u003c/p\u003e","title":"Troszkę \"Inne\" MVC"},{"content":"Tak pod wpływem natchnienia publikuję przykład diagramu klas reprezentujący kompozycje (zawieranie). Diagram wykonany w programie Visual Paradigm. Komentarz usunięty ponieważ zachodził na klasy. :) Kod (PHP):\n\u0026lt;php class Jablon { /** *@var Jablko owoce znajdujace sie na drzewie **/ protected $owoce = array(); } class Jablko { /** *@var mixed smak owocu **/ protected $smak; } \u0026gt; Związek jest określony - jedna instancja klasy Jablon może zawierać wiele owowców, ale może tych owoców nie być wcale. Zapis można sprecyzować: Jablon: 1..n, Jablko 1 oznacza, że jedna instancja klasy Jablko moze znajdowac się tylko w jednym obiekcie Jablon. Jeśli się mylę, proszę o sprostowanie. Za jakiś czas kod w wersji dla Javy. ;)\n","permalink":"https://blog.dywicki.pl/2006/02/28/jak-widzie-kod/","summary":"\u003cp\u003eTak pod wpływem natchnienia publikuję przykład diagramu klas reprezentujący kompozycje (zawieranie).\nDiagram wykonany w programie Visual Paradigm. Komentarz usunięty ponieważ zachodził na klasy. :) \u003cimg alt=\"diagram klas\" loading=\"lazy\" src=\"http://img.dywicki.pl/kompozycja.jpg\"\u003e\nKod (PHP):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-gdscript3\" data-lang=\"gdscript3\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003ephp \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e Jablon {     \u003cspan style=\"color:#f92672\"\u003e/**\u003c/span\u003e      \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e@\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e Jablko owoce znajdujace sie na drzewie      \u003cspan style=\"color:#f92672\"\u003e**/\u003c/span\u003e     protected \u003cspan style=\"color:#f92672\"\u003e$\u003c/span\u003eowoce \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e array(); } \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e Jablko {     \u003cspan style=\"color:#f92672\"\u003e/**\u003c/span\u003e      \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e@\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e mixed smak owocu      \u003cspan style=\"color:#f92672\"\u003e**/\u003c/span\u003e     protected \u003cspan style=\"color:#f92672\"\u003e$\u003c/span\u003esmak; } \u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eZwiązek jest określony - jedna instancja klasy Jablon może zawierać wiele owowców, ale może tych owoców nie być wcale. Zapis można sprecyzować: Jablon: 1..n, Jablko 1 oznacza, że jedna instancja klasy Jablko moze znajdowac się tylko w jednym obiekcie Jablon.\nJeśli się mylę, proszę o sprostowanie. Za jakiś czas kod w wersji dla Javy. ;)\u003c/p\u003e","title":"Jak widzę kod?"},{"content":"Nie wiem jak Wy, ale ja kilka razy spotkałem się z sytuacją, że chciałem przekazać do konstuktora kilka argumentów, ale niestety urocze call_user_func_array nie daje takiej możliwości. Dlatego też w PSF musiałem wynaleść takie coś jak interfejs LazyService by móc tworzyć usługi doiero w chwili ich wywołania. Sam sposób nie jest najleszy.\nTeraz, po niewczasie znalazłem sosób na to, sposób bardzo prosty, który nie wymusza użycie eval - swoją drogą kolejny dowód na to, że bez eval da się żyć :) - oto on:\n$r = new ReflectionClass('ClassName'); $r-\u0026gt;newInstance(1,2,3);\nDo konstruktora zostaną przekazane trzy argumenty - 1, 2 oraz 3. Konstrukcje eval do tworzenia nowych bytów wdziałem w implementacji IoC dla PHP, mianowicie w PicoContainer. Swoją drogą dziwne, ponieważ biblioteka sporo korzysta z Reflection API.. czyżby pora na zmiany?.. w kodzie? :)\n","permalink":"https://blog.dywicki.pl/2006/02/27/tworzenie-nowej-instancji-klasy/","summary":"\u003cp\u003eNie wiem jak Wy, ale ja kilka razy spotkałem się z sytuacją, że chciałem przekazać do konstuktora kilka argumentów, ale niestety urocze call_user_func_array nie daje takiej możliwości. Dlatego też w PSF musiałem wynaleść takie coś jak interfejs LazyService by móc tworzyć usługi doiero w chwili ich wywołania. Sam sposób nie jest najleszy.\u003c/p\u003e\n\u003cp\u003eTeraz, po niewczasie znalazłem sosób na to, sposób bardzo prosty, który nie wymusza użycie eval - swoją drogą kolejny dowód na to, że bez eval da się żyć :) - oto on:\u003cbr\u003e\n\u003ccode\u003e$r = new ReflectionClass('ClassName'); $r-\u0026gt;newInstance(1,2,3);\u003c/code\u003e\u003c/p\u003e","title":"Tworzenie nowej instancji klasy..."},{"content":"Patrząc na to co się dzieje wokół ZFa odnoszę bardzo negatywne wrażenie. Dlaczego? Dlatego, że jest to powielanie tego, co już powstało dla PHP. Nie widzę w tym, co proponuje Zend nowości, świerzości. Wiem, że trudno o to przy implementacji MVC, ale ZF nic nie wnosi do tematu, do tego bardzo skromne informacje jakie są na temat ZF nie napawają optymizmem.\nPowody dla których Zend tworzy kolejnego frameworka:\nzachowanie konkurencyjności względem innych języków i platform .NET, J2EE, Ruby brak prostego frameworka dla PHP swobodne użycie dla zastosowań e-commerce pełne wykorzystanie możliwości PHP5 wsparcie dla nowoczesnych technologii - Web Services, RSS, wsparcie dla AJAXa Moje uwagi\nZF będzie miał bardzo duży problem z dotrzymaniem kroku gigantom - J2EE, .NET to co proponuje w dużej mierze jest już w Cake PHP CakePHP podobnie jak i Symfony ma bardzo dobrą dokumentację praktycznie większość projektów jest opartych na LGPL jak by było wiele z tych możliwości PHP5 do wykorzystania.. Web Services jak i RSS można załatwić przez istniejące już komponenty - bardzo dobry, acz przestarzały, NuSOAP czy też klasy wbudowane w PHP5. RSS nie jest niczym innym jak prostym XMLem który można obsłużyć przy pomocy kolejnej klasy z phpclassess.org. Jeśli Zend chce stworzyć spójną bibliotekę komponentów to nie powinien wynajdować koła na nowo tylko zacząć bliżej współpracować z eZ Systems, które od dłuższego czasu rozwija eZ Components. Spójrzmy na schemat: Co na nim widać?\nFront Controller z url-mappingiem. Czyżby odpowiednil ? A może od razu action-mapping jak podobnie jak struts-ie?. W chwili obecnej ma to choćby Cake (z przerośniętym request dispatcherem), a sama implementacja tego nie jest na tyle trudna by wymagała tworzenia kolejnego rozwiązania. Gdyby Zend zaproponowałby tutaj możliwość obsługi przez Web Services byłoby to bez wątpienia nowością. Tymczasem Web Services jest przesunięta do komponentów. ActionController, czyżby to co proponuje Spring a powoli pojawia się w Mojavi 4? Różne typy akcji w zależności od tego z jakiego kontrolera dziedziczą są bardzo dobrym pomysłem, niestety informacji brak. Jeśli ActionController ma być tylko formalizmem, który nic za sobą nie niesie i wszystkie akcje będą takie same to w tym punkcie ZF przegrywa całą walkę. Proste uruchamianie akcji tego samego typu to nie jest to czego się oczekuje po profesjlonalnym rozwiązaniu. Component Library, no kurde eZ components? Tak jak pisałem wcześniej, komponenty które proponuje eZ są na tyle dobrze przemyślane że można rozszeżać bibliotekę o nowe, użyteczne komponenty. Przegląd komponentów ZTemplate - jeśli nie będzie miało porównywalnych możliwości jak Smarty to z góry jest skazane na porażkę. IMO dobrym rozwiązaniem byłoby tutaj zastosowanie czegoś na podobę JSP, ASP.NET czy szablonów z Prado bądź samego WACTa - czyli komponenty. Kolejne próby stworzenia systemu szablonów który poza odmienną składnią nie wnosi nic do tematu to zły pomysł. ZForm - nie mam pojęcia co to ma robić, chociaż nie trudno wywnioskować, że chodzi o generowanie kodu HTML z metod. Moim zdaniem to pomyłka - skoro całość zamyka się i tak w szablonie to powinno to być obsłużone poprzez komponenty szablonu a nie oddzielną klasę - WACT ma to bardzo dobrze rozwiązane - dostarcza komponent Form, który w bardzo prosty sposób wpina się w szablon. To, na co Zend powinien zwrócić szczególną uwagę to również walidacja danych - bardzo fajnie jest to zrobione w Mojavi, niestety nie ma wsparcia dla wielu języków, ale skoro Zend sili się na coś dobrego mógłby się przyjrzeć walidacji w Strutsie, gdzie jest możliwość definiowania walidacji warunkowej (np. jeśli pole płeć przyjmuje wartość Kobieta wiek jest nieobowiązkowy). Całość można wyświetlić w szablonie poprzez JSP \u0026lt;html:errors /\u0026gt; i \u0026lt;html:error id=\u0026ldquo;error-id\u0026rdquo; /\u0026gt;. Słowem ZForm to pomyłka. ZAjax - powinien to być komponent szablonu a nie zupełnie oddzielny. Znowu zapewne osadzanie w HTMLu kodu PHP. To nie tędy droga. Jeśli całość ma być rozszeżalna, a szablony na pewno być takie powinny to ZAjax jest złym krokiem. Obsługę AJAXa z poziomu PHP oferuje już Symfony. ZPdf - no może w końcu coś lepszego niż FPDF? :) Ale wciąż dalego do iText, który w tej dziedzinie powinien być wzorem dla twórców ZPdf, wyższy poziom abstrakcji umożliwiający tworzenie nie tylko PDFów ale i dokumentów xsl. ZGetText - powinien być przesunięty do pakiety do obsługi języków. W tej dziedzinie bardzo fajnie zapowiada się Mojavi 4,, gdzie get text będzie tylko jednym z wielu źródeł danych. Słyszałem również, że obsługę języków ma ciekawie rozwiązane Symfony, a i w eZ Components jest pakiet Translation. Zatem sama obsługa get text już na chwilę obecną nie gwarantuje sukcesu. ZActiveRecord - jestem ciekaw jak Zend planuje załatwić relacje 1:N a jeszcze ciekawsze jak M:N. O ile mi wiadomo implementacja takich związków przy użyci ActiveRecordu do najprostszych nie należy. Sam ActiveRecord jest w Cake PHP. Nie jestem pewien czy jest on na tyle rozbudowany co w Rails, ale jeśli tak to jest to kolejne powielenie kodu, które nic nie wnosi. Jeśli Zend poważnie myśli o ORM to powinien przyjrzeć się temu jak Hibernate obsługuje relacje wiele do wielu. ZDBAdapter - rany, kolejny adapter, raz że już jest AdoDB, Pear DB, Pear MDB, Creole, eZ DB, pakiet Database w eZ Components i tak dalej. Pomyłka! ZInputFilter - eZ Components. I znowu, gdzie jest automatyczna walidacja danych..? ZSearch - coś nowego, z przykładów widzę, że całość zapowiada się dość interesująco, ciekawe jak będzie się prezentować od strony wydajności (ponieważ całość jest wzorowana na podobnych rozwiązaniach z Javy). ZAuth - pojęcia brak co by miało to robić. ZAcl - znowu kłania się Cake PHP, w którym jest już obsługa. Jeśli jesteśmy przy uprawnieniach to myślę, że jeśli już ma być to ACL z prawdziwego zdarzenia nie powinien ustępować PHP GACL-owi. ZSession - wtf? Czyżby kolejny komponent który nic poza możliwością zapisu sesji do bazy danych? Jeśli tak to jest to jakaś pomyłka. Myślę, że tutaj Zend powinien zastanowić się nad ideą scope-ów jak w Javie - czyli request, session, page i application. ZLog - jest Log4PHP, fakt że był pisany pod PHP4, ale jest to port do Log4J, które jest jednym z podstawowych pakietów, z których korzystają programujący w Javie. Są również pakiety w PEAR a i loggery w Agavi nie pozostawiają wiele do życzenia. ZConfiguration - eZ Components ZMail - eZ Components ZUrl - co to jest? :) Reasumując - to co w tej chwili proponuje Zend w swoim rozwiązaniu nie rzuca na kolana. Powiem więcej, mi się to nie podoba. Zend wydając ZF nie połączy środowiska PHP a je podzieli - podzieli na tych, którzy przekonają się do ZF i na tych, którzy dalej będą wierzyć w inne implementacje MVC. Nawet w tej chwili patrząc na Mojavi 4 mogę bez wątpienia powiedzieć, że będzie więcej oferowało. Ponadto Zend nic nie wspomina o implementacji wzorca Incrementing Filter z J2EE, który nie raz z pożytkiem wykorzystywałem. Gdy pojawiały się informacje o ZF środowiski huczało o tym, że będzie to próba nawiązania rywalizacji z innymi platformami choćby tylko na warstwie web. W tej chwili mogę powiedzieć, że Zend ze swoim frameworkiem nie jest w stanie tego zrobić. Owszem, zaoferowanie IDE - owszem jest atrakcyjnym rozwiązaniem, ale nie jest to argument szczególnie przemawiający do mnie. Z początku myślałem, że to co będzie oferował ZF będzie wymagało na prawdę złożonego IDE. Myślałem również, że w celu przyśpieszenia całości ZF będzie zaszyty w źródłach PHP, tymczasem w zupełności starczy phing z zestawem kilku tasków, tak jak jest to zrobione w Agavi czy też Symfony i jak będzie w Mojavi 4 (jeśli te zostanie ostatecznie wdane). Kolejnym argumentem, który przemawia przeciw ZF jest brak wymuszenia standaryzacji, czyli określony sposób obsługi widoku jak to jest w J2EE (JSP, JSF, Velo City, Free Maker, JSF, czy komponenty w Tapestry). Jeśli PHP ma się rozwijać określonym, dobrym torem to powinny być narzucone pewne normy - jak w przypadku J2EE. Mimo, że jest już tam zaimplementowane MVC samo w sobie to w dalszym ciągu powstają nowe, dobre frameworki. Niestety ZF będzie rozwiązaniem na tyle niekompletnym i nieudolnym, że choćby próba narzucenia ograniczeń skończyłaby się porażką. Chociaż tutaj chyba nie mam prawa zbytnio winić twórców ZF za to, bo po prostu doszło do takiej a nie innej sytuacji - to znaczy każdy ma swój ulubiony system szablonów. Wiele osób używa Smarty (hm.. Velo City w javie?), ale są również tacy, którzy wolą PHP osadzane w HTMLu (skryplety w JSP?). Po drodze jest jeszcze PHP TAL i kilka innych rozwiązań..\nZainteresowanych zapraszam do dyskusji - co myślicie o Tym, co zaproponował Zend? Czy Wy jesteście przekonani do ZF czy tylko ja jestem nastawiony anty? Więcej materiałów na temat ZF: http://shiflett.org/archive/171 - przykłady z webcasta PHP Architecta PHP Architect Webcast: The Zend Framework Oficjalna strona ZF (PHP Collaboration Project)\n","permalink":"https://blog.dywicki.pl/2006/02/23/why-not-zend-framework/","summary":"\u003cp\u003ePatrząc na to co się dzieje wokół ZFa odnoszę bardzo negatywne wrażenie. Dlaczego? Dlatego, że jest to powielanie tego, co już powstało dla PHP. Nie widzę w tym, co proponuje Zend nowości, świerzości. Wiem, że trudno o to przy implementacji MVC, ale ZF nic nie wnosi do tematu, do tego bardzo skromne informacje jakie są na temat ZF nie napawają optymizmem.\u003c/p\u003e\n\u003cp\u003ePowody dla których Zend tworzy kolejnego frameworka:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ezachowanie konkurencyjności względem innych języków i platform .NET, J2EE, Ruby\u003c/li\u003e\n\u003cli\u003ebrak prostego frameworka dla PHP\u003c/li\u003e\n\u003cli\u003eswobodne użycie dla zastosowań e-commerce\u003c/li\u003e\n\u003cli\u003epełne wykorzystanie możliwości PHP5\u003c/li\u003e\n\u003cli\u003ewsparcie dla nowoczesnych technologii - Web Services, RSS, wsparcie dla AJAXa\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMoje uwagi\u003c/p\u003e","title":"Why not Zend Framework?"},{"content":"Dzisiaj miałem nietypowy problem - chciałem stworzyć sobie obsługę mod_rewrite ale nie babrać się z wyciąganiem zmiennych które był w żądanym adresie, dlatego też udałem się do google.pl w poszukiwaniu dodatkowych flag, które można ustawiać. Znalazłem bardzo fajną stronkę z kartą podręczną do mod_rewrite - http://www.ilovejackdaniels.com/cheat-sheets/mod_rewrite-cheat-sheet/ jest ich tam więcej - css, php, javascript, html, mysql. A moje rozwiązanie wygląda w następujący sposób: RewriteEngine On\nRewriteBase /z-tego-adresu/ RewriteCond %{REQUEST_URI} !^.*\\.(css|png|gif|jpe?g|php|js)$ RewriteRule ^.*$ /z-tego-adresu/index.php?%{REQUEST_URI} [QSA,L] Oczywiście wymaga dotarcia i obsługi w kodzie, ale GET jest bez zmian.. i to najważniejsze :)\n","permalink":"https://blog.dywicki.pl/2006/02/21/mod_rewrite-plus-zmienne-z-get/","summary":"\u003cp\u003eDzisiaj miałem nietypowy problem - chciałem stworzyć sobie obsługę mod_rewrite ale nie babrać się z wyciąganiem zmiennych które był w żądanym adresie, dlatego też udałem się do google.pl w poszukiwaniu dodatkowych flag, które można ustawiać. Znalazłem bardzo fajną stronkę z kartą podręczną do mod_rewrite - \u003ca href=\"http://www.ilovejackdaniels.com/cheat-sheets/mod\"\u003ehttp://www.ilovejackdaniels.com/cheat-sheets/mod\u003c/a\u003e_rewrite-cheat-sheet/ jest ich tam więcej - css, php, javascript, html, mysql. A moje rozwiązanie wygląda w następujący sposób:\n\u003ccode\u003eRewriteEngine  On\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eRewriteBase /z-tego-adresu/\nRewriteCond %{REQUEST_URI} !^.*\\.(css|png|gif|jpe?g|php|js)$\nRewriteRule ^.*$ /z-tego-adresu/index.php?%{REQUEST_URI} [QSA,L]\nOczywiście wymaga dotarcia i obsługi w kodzie, ale GET jest bez zmian.. i to najważniejsze :)\u003c/p\u003e","title":"mod_rewrite plus zmienne z GET"},{"content":"Po dłuższym zastanowieniu - zdecydowałem się na zrezygnowanie z prowadzonych do tej pory projektów, także framework i draft templatów można uznać za zawieszone na czas nieokreślony. Chcę spróbować czegoś nowego, czegoś lepszego - biorę się za javę.\n","permalink":"https://blog.dywicki.pl/2006/02/20/phpoutofrangeexception/","summary":"\u003cp\u003ePo dłuższym zastanowieniu - zdecydowałem się na zrezygnowanie z prowadzonych do tej pory projektów, także framework i draft templatów można uznać za zawieszone na czas nieokreślony.\nChcę spróbować czegoś nowego, czegoś lepszego - biorę się za javę.\u003c/p\u003e","title":"PHPOutOfRangeException"},{"content":"Dzisiaj postanowiłem przyjrzeć się bliżej szablonom z WACTa. Pamiętam, że jakiś czas temu przyglądałem się kompilatorowi, ale.. było to kilka tygodni temu. Aby nie być w tyle postanowiłem zaciągnąć zmiany z CVSa. Jakież było moje zdziwienie kiedy zobaczyłem w kodzie interfejsy! Od razu powędrowałem do webloga. Byłem ogromnie zaskoczony tym, co się dzieje z WACTem, byłem święcie przekonany, że ten projekt jest martwy - tym bardziej, że są pliki i katalogi nie ruszane od 2 lat. Najnowsze zmiany jakie udało mi się znaleść są sprzed dwóch dni.. WACT ze względu na świetne, komponentowe szablony to dla mnie obok Mojavi jeden z lepszych frameworków. Panowie, czyżby WACT miał odżyć? :)\n","permalink":"https://blog.dywicki.pl/2006/02/19/wact-yje/","summary":"\u003cp\u003eDzisiaj postanowiłem przyjrzeć się bliżej szablonom z WACTa. Pamiętam, że jakiś czas temu przyglądałem się kompilatorowi, ale.. było to kilka tygodni temu. Aby nie być w tyle postanowiłem zaciągnąć zmiany z CVSa. Jakież było moje zdziwienie kiedy zobaczyłem w kodzie interfejsy! Od razu powędrowałem do webloga. Byłem ogromnie zaskoczony tym, co się dzieje z WACTem, byłem święcie przekonany, że ten projekt jest martwy - tym bardziej, że są pliki i katalogi nie ruszane od 2 lat. Najnowsze zmiany jakie udało mi się znaleść są sprzed dwóch dni..\nWACT ze względu na świetne, komponentowe szablony to dla mnie obok Mojavi jeden z lepszych frameworków. Panowie, czyżby WACT miał odżyć? :)\u003c/p\u003e","title":"WACT żyje!"},{"content":"Rozmawiałem wczoraj z Zyxem na temat testów czasowych i dowiedziałem się, że korzysta on do tego celu z apache benchmark - nie zwlekając również wykonałem testy\u0026hellip;\nPomiary wykonane przy użyciu apache benchmark (apache 2.0.53, php 5.1.1) dla 500 requestów. Odczyt pliku 70 KB file+implode: 5.640589 s file_get_contents: 2.562484 s\nFrameworki: CakePHP (z warrningiem dot. połączenia mysql): 76.421385 s Mojavi 3.0-dev (debug_mode = off): 63.155846 s Agavi 0.10-stable (debug_mode = off): 51.187172 s PSF: 46.390328 s (bez cache configa etc) Prado 2.0.1 (też Hangman): 169.14543 s Prado 3.0-alpha (Samples.Hangman.Home): 196.279994 s Odin: 28.499818 s Phiend: 11.359303 s (gołe hello world) Daeron: 1.156242 s Pinky: 53.843750 s\nWygrywa, jak zwykle pod względem optymalizacji niedościgniony Odin.. phienda nie biorę pod uwagę ponieważ w wersji którą mam u siebie nie jest to pełna implementacja MVC - kod html w kodzie akcji, Daeron kończył pracę bardzo wcześnie, jak tylko wykrył, że nie mam zainstalowanego PDO. Co mogę powiedzieć o Prado - optymalizacja jego developerom jest najwyraźniej obca.. miło mnie zaskoczył lepszy wynik agavi od mojavi, widać coś poprawili :). Cieszy mnie również, że PSF jest na 2 miejscu, a jeśli się je doszlifuje, może przybliżyć się do pierwszego miejsca.. :)\n","permalink":"https://blog.dywicki.pl/2006/02/14/proste-testy/","summary":"\u003cp\u003eRozmawiałem wczoraj z Zyxem na temat testów czasowych i dowiedziałem się, że korzysta on do tego celu z apache benchmark - nie zwlekając również wykonałem testy\u0026hellip;\u003c/p\u003e\n\u003cp\u003ePomiary wykonane przy użyciu apache benchmark (apache 2.0.53, php 5.1.1) dla 500 requestów.\nOdczyt pliku 70 KB\nfile+implode: 5.640589 s\nfile_get_contents: 2.562484 s\u003c/p\u003e\n\u003cp\u003eFrameworki:\nCakePHP (z warrningiem dot. połączenia mysql): 76.421385 s\nMojavi 3.0-dev (debug_mode = off): 63.155846 s\nAgavi 0.10-stable (debug_mode = off): 51.187172 s\nPSF: 46.390328 s (bez cache configa etc)\nPrado 2.0.1 (też Hangman): 169.14543 s\nPrado 3.0-alpha (Samples.Hangman.Home): 196.279994 s\nOdin: 28.499818 s\nPhiend: 11.359303 s (gołe hello world)\nDaeron: 1.156242 s\nPinky: 53.843750 s\u003c/p\u003e","title":"Proste testy:"},{"content":"Tak.. minął miesiąc od ostatniego wpisu. Jak ten czas leci. Już 1/12 roku za nami.. Czym jest spowodowany brak notek na blogu od miesiąca? Rozterkami. Mam poważny dylemat czy dalej skupić się na PHP czy przejść na javę? PSF stoi w miejscu, no może nie - rozgrzebałem kod próbując zaimplementować akcje jako ApplicationController-y i mechanizm View Resolverów (obydwie idee zaczerpnięte ze springa, acz uproszczone na potrzeby PHP). W chwili obecnej wiszę w próżni niepewności szarpany uczuciami - miłością do pierwszego języka i porządaniem możliwości jakie daje Java. Które z nich zwycięży? Co do PSF - powiem tak. Nie piszę go tylko dla siebie, chcę by to był nie za duży, szybki framework do małych, ewentualnie średnich zastosowań i dlatego zwracam się z prośbą do osób, które to miejsce odwiedzają a chciałby wspomóc przy tworzeniu projektu (PSF = Personal Site Framework). Mam do dyspozycji repozytorium SVN, Traca oraz konto na którym można zaparkować domenę (tą z kolei skłonny jestem zakupić..). Po prostu - szukam osób które chcą się dołączyć do projektu i stworzyć na prawdę dobry kawałek kodu. Jeśli ktoś jest zainteresowany współpracą mój numer gg to \u0026ldquo;8 5 6.3,4.2:4\u0026rdquo; (zostaw same cyfry) a jid splatch@wafel.com. Mail \u0026ldquo;lukasz@d y w i c k i . pl\u0026rdquo;\n","permalink":"https://blog.dywicki.pl/2006/01/23/pustka/","summary":"\u003cp\u003eTak.. minął miesiąc od ostatniego wpisu. Jak ten czas leci. Już 1/12 roku za nami.. Czym jest spowodowany brak notek na blogu od miesiąca? Rozterkami. Mam poważny dylemat czy dalej skupić się na PHP czy przejść na javę? PSF stoi w miejscu, no może nie - rozgrzebałem kod próbując zaimplementować akcje jako ApplicationController-y i mechanizm View Resolverów (obydwie idee zaczerpnięte ze springa, acz uproszczone na potrzeby PHP). W chwili obecnej wiszę w próżni niepewności szarpany uczuciami - miłością do pierwszego języka i porządaniem możliwości jakie daje Java. Które z nich zwycięży? Co do PSF - powiem tak. Nie piszę go tylko dla siebie, chcę by to był nie za duży, szybki framework do małych, ewentualnie średnich zastosowań i dlatego zwracam się z prośbą do osób, które to miejsce odwiedzają a chciałby wspomóc przy tworzeniu projektu (PSF = Personal Site Framework). Mam do dyspozycji repozytorium SVN, Traca oraz konto na którym można zaparkować domenę (tą z kolei skłonny jestem zakupić..). Po prostu - szukam osób które chcą się dołączyć do projektu i stworzyć na prawdę dobry kawałek kodu. Jeśli ktoś jest zainteresowany współpracą mój numer gg to \u0026ldquo;8 5 6.3,4.2:4\u0026rdquo; (zostaw same cyfry) a jid \u003ca href=\"mailto:splatch@wafel.com\"\u003esplatch@wafel.com\u003c/a\u003e. Mail \u0026ldquo;lukasz@d y w i c k i . pl\u0026rdquo;\u003c/p\u003e","title":"Pustka"},{"content":"Framework, który usiłuję pisać można pobrać z svn://ivpro.net/PSF. Kod jest przepisywany na nowo, ponieważ zmieniła się nieco koncepcja :). Lista zmian: - Przesunięcie tablicy z mapą ConfigManager::$map do oddzielnej klasy ConfigMapper (dziedziczącej klasy abstrakcyjnej Mapper, pakiet Mapper) opartej na singletonie. - Dodanie nowej klasy konkretnej - ConfigProperties, która parsuje config przy pomocy parse_ini_file. Zastosowanie w sam raz do tworzenia plików językowych. Z tego rodzaju configu nie można uzyskać struktury takiej jak w pliku XML. - Przesunięcie funkcji do obsługi tablic do klasy ArrayUtil w pakiecie Util. - Zlikwidowanie pakietu AutoLoad i przeniesienie go częściowo do pakietu Util (część AutoLoad powędrowała do pl.splatch.BuildTool jako task Phinga). - Nowy pakiet - Dispatcher (jak narazie bez wyraźnego podziału na klasy do obsługi widoku, requestu) służący do wykonywania forwardów jak i redirectów. - Dodanie \u0026ldquo;warstwy usług\u0026rdquo; - nowy pakiet - Service (jeśli zajdzie potrzeba powstanie również Service.Activator). - Wprowadzenie większej liczby interfejsów w miejsce dziedziczenia z klas abstrakcyjnych. I jeszcze pare innych kosmetycznych poprawek\u0026hellip;\nPrzy okazji - wesołych świąt, wolnych od pracy, w ciepłej, rodzinnej i przyjaznej atmosferze :)\n","permalink":"https://blog.dywicki.pl/2005/12/23/repozytorium-svn/","summary":"\u003cp\u003eFramework, który usiłuję pisać można pobrać z \u003cstrong\u003esvn://ivpro.net/PSF\u003c/strong\u003e. Kod jest przepisywany na nowo, ponieważ zmieniła się nieco koncepcja :).\nLista zmian:\n- Przesunięcie tablicy z mapą ConfigManager::$map do oddzielnej klasy ConfigMapper (dziedziczącej klasy abstrakcyjnej Mapper, pakiet Mapper) opartej na singletonie.\n- Dodanie nowej klasy konkretnej - ConfigProperties, która parsuje config przy pomocy \u003cstrong\u003eparse_ini_file\u003c/strong\u003e. Zastosowanie w sam raz do tworzenia plików językowych. Z tego rodzaju configu nie można uzyskać struktury takiej jak w pliku XML.\n- Przesunięcie funkcji do obsługi tablic do klasy ArrayUtil w pakiecie Util.\n- Zlikwidowanie pakietu AutoLoad i przeniesienie go częściowo do pakietu Util (część AutoLoad powędrowała do pl.splatch.BuildTool jako task Phinga).\n- Nowy pakiet - Dispatcher (jak narazie bez wyraźnego podziału na klasy do obsługi widoku, requestu) służący do wykonywania forwardów jak i redirectów.\n- Dodanie \u0026ldquo;warstwy usług\u0026rdquo; - nowy pakiet - Service (jeśli zajdzie potrzeba powstanie również Service.Activator).\n- Wprowadzenie większej liczby interfejsów w miejsce dziedziczenia z klas abstrakcyjnych.\nI jeszcze pare innych kosmetycznych poprawek\u0026hellip;\u003c/p\u003e","title":"Repozytorium SVN"},{"content":"Oto co zrozumiałem z http://www.php.net/~derick/meeting-notes.html. Nie jest to tłumaczenie a moja interpretacja, a jako, że znam angielski gorzej niż źle błędów może być bardzo wiele. W sumie bardzo nawet bym tego chciał, bo z tego co przeczytałem zmian jest na prawde mniej niż można by było się spodziewać.\nUnicode on/off Wprowadzenie obsługi unicode spowolni niektóre funkcje do ciągów o 300% a całe aplikacje nawet o 25%. Stąd logiczne wydaje się przesunięcie konfiguracji unicode do php.ini tak by providerzy mogli dynamicznie włączać i wyłączać to wsparcie. Dodatkowo wszystkie rozszerzenia muszą zostać teraz oparte na UTF, a te, które go nie wspierają będą musiały konwertować ciągi do oczekiwanego formatu.\nOptymalizacja [] Obecnie używanie operatora [] do pobierania kolejnych znaków ciągu jest bardzo wolne (rzutowanie ciągu do tablicy = wrzucanie kolejnych znaków do tablicy i zwracanie spod określonego indeksu), wymusza na PHP skanowanie ciągu od początku.\nUsuwanie funkcjonalności register_globals = zmienne globalne są źródłem wielu problemów związanych z bezpieczeństwem aplikacji. Wyrzucenie tej opcji będzie najlepszym sposobem na pozbycie się ich. W końcu register_globals miało zniknąć już w PHP5, ale została tylko domyślnie wyłączona. Nareszcie jakiś stanowczy krok.. magic_quotes = automatyczne dodawanie do ciągów slashy również prowadziło do wielu problemów. Dokumentacja jest wystarczającym uzasadnieniem. Usunięcie tej opcji ma zmotywować programistów do używania rozszerzenia input_filter. safe_mode = na serwerach unikowych pojawiał się problem z uprawnieniami, ponieważ najczęściej PHP jest uruchamiane z uprawnieniami użytkownika nobody. Stąd posunięcie związane z wyłączeniem kontrolowania identyfikatora grupy/użytkownika i pozostawienie tylko dyrektywy open_basedir, która powinna być wystarczająca do kontrolowania dostępu do katalogów i plików.\nVar w klasach. W PHP 5 użycie słowa kluczowego var powodowało wyświetlenie błędu przy raportowaniu na poziomie E_STRICT. W PHP6 var będzie aliasem dla słowa kluczowego public i nie będzie powodowało wyświetlania błędu. Referencje przy tworzeniu obiektów będą powodowały wyświetlenie ostrzeżenia przy raportowaniu E_STRICT.\nW PHP6 zabraknie również wsparcia dla ZE1 (dyrektywa zend.ze_compatibility zostanie usunięta), ponieważ była to tylko metoda by zachować kompatybilność wstecz do PHP4. Próba uruchomienia PHP6 z włączoną dyrektywą ze_compatibility spowoduje błąd z poziomu E_CORE_ERROR.\nUsunięcie wsparcia dla GD1 i Freetype 1 jest podyktowane tym, że są to biblioteki dla których są już rozwinięte nowsze wersje.\ndl() – funkcja ta była przyczyną wielu problemów. Od tej pory funkcja dl będzie tylko dostępna w CLI.\nCGI/FastCGI mode FastCGi jest znacznie szybsze od CGI i dlatego teraz domyślnie jeśli PHP będzie korzystać z interfejsu CGI będzie nim FastCGI.\nDynamiczne klasy – definiowanie klas w warunkach - if() { class … } else { class … } spowalnia silnik i utrudnia kompilowanie klas.\nregister_long_arrays, HTTP_*_VARS – podobnie jak ze wsparciem dla ZE1 – opcja usunięta. Przy próbie uruchomienia z włączoną dyrektywą zostanie wyrzucony błąd.\nStare nazewnictwo konstruktorów – jest ono problemem, ponieważ powoduje konflikty, gdy w klasie istnieją metody o nazwie konstruktora klasy dziedziczącej: class A { function B() { // zostanie wywołane przy new B!!! } } class B { }\n$b = new B(); ?\u0026gt; Spowoduje to wywołanie metody A::B(). Nie mniej postanowiliśmy pozostawić tą opcję.\nMałe literki – będziemy dążyć do tego by standaryzować nazewnictwo funkcji – by były one zapisywane małymi literami lecz nie usuniemy tego problemu w PHP6.\nbreak $var; W rzeczywistości ta opcja nie działa i nie ma ku temu wyraźnych przesłanek. Usuwamy wsparcie dla dynamicznego break.\nPECL Domyślnie w PHP6 będzie w kompilowany XMLReader oparty na SAX (Simple Api for XML) oraz XMLWriter. Przeniesienie rozszerzeń do obsługi bazy danych (nie PDO) do PECL. Od wprowadzenia w PHP 5.1 nie potrzebujemy już rozszerzeń do obsługi baz danych. Część rozszerzeń zostanie zastąpiona przez PDO, a te których możliwości nie można było w nim zaimplementować (MySQLi, OCI8) zostaną przeniesione. Przeniesienie ereg do PECL. Od teraz wyrażenia POSIX zostaną domyślnie wyłączone. Nie będzie też możliwości wyłączenia PCRE. Decyzje o przesunięciu innych rozszerzeń do PECL zostanie podjęta po ich przejrzeniu. Naprawa ext/soap oraz dodanie wsparcia dla wsse/secext – rozszerzenie ext/soap będzie domyślnie włączone (w PHP5 najpierw trzeba było je ściągać, dopiero potem pojawiło się jako biblioteka). Dopuścimy również możliwość usunięcia otwartego pliku. Pod unixem nie jest to problem – wystarczy użyć unlink, niestety pod windows broni używanych plików przed usunięciem (w obawie o utratę stabilności? ;)).\nDodatki w silniku 64o bitowy integer. Dodanie goto. Hm… chyba komuś za bardzo zależy na zbliżeniu PHP do Javy. for ($i = 0; $i if (true) { break blah; } echo \u0026quot;not shown\u0026quot;; blah: echo \u0026quot;iteration $i\\n\u0026quot;; } ?\u0026gt; Zastąpienie isset($foo) ? $foo : ‘bar’ poprzez operator ?:. Planujemy również użyć ifsetor przy nowym rozszerzeniu input_filter: $blahblah = input_filter_get(GET, 'foo', FL_INT) ?: 42; ?\u0026gt; Opuszczamy środkową wartość w ?: i odrzucamy propozycję z ifsetor().\nDopuszczenie w foreach przeglądania tablic wielowymiarowych. Od tej pory konstrukcje typu… $a = array(array(1, 2), array(3, 4)); foreach( $a as $k =\u0026gt; list($a, $b)) { } ?\u0026gt; …będą obsługiwane. Dopuszczony zostanie również foreach bez as – foreach($var $key =\u0026gt; $val).\nW PHP6 zostanie rozwiązany problem z operatorami {} i [] przy stringach. Obsługa {} zostanie usunięta, a obsługa [] rozszerzona o dodatkowe możliwości: Np. będą możliwe konstrukcje jak w pytonie [2,4] [2,] [,-2] [-3,2]\nOperator @ jest bardzo wolny. Obecnie Ilia and Marcus pracują nad rozwiązaniem tego problemu.\nParametry nazwane – nie wprowadzimy ich. (jednak nie wszystko z pytona się podoba ;))\nUstalenie kolejności argumentów dla wszystkich funkcji. Jako, że tak diametralna zmiana pociągnie za sobą wiele problemów z istniejącymi aplikacjami postanowiliśmy nie robić tego.\nZmiany w OO. Wymagam wywołania mojego konstruktora!! W PHP6 będzie możliwość ustawienia czy wywołanie konstruktora jest ważne. Jeśli tak klasa dziedzicząca będzie zmuszona do wykonania parent::__construct(); Dopuszczenie w interfejsach definiowania konstruktorów. W chwili obecnej nie ma takiej możliwości. Nie widzieliśmy sprzeciwów do umieszczenia tej możliwości, dlatego w PHP6 się pojawi.\nObecnie podpowiadanie typów dla metod dziedziczonych nie jest zachowywane. Stąd mogą powstawać spore rozbieżności w interfejsach różnych klas konkretnych. Jako, że nie jest to sprawa najwyższej wagi na razie rezygnujemy ze sprawdzania tego.\nRzutowanie obiektów. Stwierdziliśmy, ze nie ma sensu dodawać kolejnych magicznych metod które będą wykonywane przy rzutowaniu – pozostaje jedna __toString().\nPrzestrzenie nazw. Jak wiadomo obecnie w PHP nie ma przestrzeni nazw. Alternatywą mogą stać się moduły (kod w oryginalnym dokumencie). Nie wiadomo jednak jak przestrzenie w końcu będą wyglądać.\nUżywanie nie zadeklarowanego pola spowoduje błąd. Zwiększy to niezawodność kodu.\nPodpowiadanie typów: Nie będzie podpowiadania typów dla pól/własności – to jest nie po PHPowemu. Będzie podpowiadanie typów dla wartości zwracanych, musimy tylko\nWywoływanie metod. Próba wywołania metody dynamicznej jako statycznej jak dynamicznej spowoduje błąd – E_FATAL. Wywoływanie metod statycznych jako dynamicznych będzie dalej dopuszczalne.\nDelegatorzy. PHP nie obsługuje delegatorów, i nie da możliwości ich implementacji.\nZostanie usunięte wsparcie dla znaczników \u0026lt;%. W dalszym ciągu będzie dostępny znacznik \u0026lt;?, zostanie dodany również \u0026lt;?php =.\n","permalink":"https://blog.dywicki.pl/2005/12/20/php6-bo-mialy-byc-wielkie-zmiany/","summary":"Oto co zrozumiałem z \u003ca href=\"http://www.php.net/~derick/meeting-notes.html\"\u003ehttp://www.php.net/~derick/meeting-notes.html\u003c/a\u003e. Nie jest to tłumaczenie a moja interpretacja, a jako, że znam angielski gorzej niż źle błędów może być bardzo wiele. W sumie bardzo nawet bym tego chciał, bo z tego co przeczytałem zmian jest na prawde mniej niż można by było się spodziewać.","title":"PHP6 bo miały być wielkie zmiany ..."},{"content":"No\u0026hellip; rozpoczynamy testowanie \u0026hellip;.\n\u0026hellip; i kończymy, bo namespace {} powoduje parse error\u0026hellip;\n","permalink":"https://blog.dywicki.pl/2005/12/13/php6-krok-1/","summary":"\u003cp\u003eNo\u0026hellip; rozpoczynamy testowanie \u0026hellip;.\u003cbr\u003e\n\u003cimg alt=\"PHP 6.0\" loading=\"lazy\" src=\"http://img.dywicki.pl/php-6.0.gif\"\u003e \u0026hellip; i kończymy, bo namespace {} powoduje parse error\u0026hellip;\u003c/p\u003e","title":"PHP6 - krok 1"},{"content":"Planuję w końcu uporządkować swoje sprawy. Mam już dość spóźniania się do pracy – najpóźniejsza godzina, na którą powinienem się zjawić w pracy to dziesiąta i jeszcze zdarza mi się zaspać..\nDlatego postanawiam wszem i wobec, że od dzisiaj staram się walczyć o to by stać się punktualnym. Postaram się również przestawić swój zegar biologiczny w tryb normalny a nie nocny. Nie mam jeszcze dokładnej koncepcji jak zorganizować sobie popołudnie – to znaczy jak podzielić czas po godzinie siedemnastej.\nMałą zmianą w moim życiu była czasowa rezygnacja ze studiów. :)\nNa blogu również szykują się zmiany. Będą przenosiny na nowy serwer, będzie nowa domena, będzie nowy design. Mam zamiar postawić również nowy system.\nCo z tego wyjdzie? Czas pokaże :)\n","permalink":"https://blog.dywicki.pl/2005/12/08/zmiany-oj-zmiany/","summary":"\u003cp\u003ePlanuję w końcu uporządkować swoje sprawy. Mam już dość spóźniania się do pracy – najpóźniejsza godzina, na którą powinienem się zjawić w pracy to dziesiąta i jeszcze zdarza mi się zaspać..\u003c/p\u003e\n\u003cp\u003eDlatego postanawiam wszem i wobec, że od dzisiaj staram się walczyć o to by stać się punktualnym. Postaram się również przestawić swój zegar biologiczny w tryb normalny a nie nocny. Nie mam jeszcze dokładnej koncepcji jak zorganizować sobie popołudnie – to znaczy jak podzielić czas po godzinie siedemnastej.\u003c/p\u003e","title":"Zmiany, oj zmiany!"},{"content":" W zeszłym tygodniu firma, w której pracuję nabyła za moją namową książkę – \u0026ldquo;Architektura systemów zarządzania przedsiębiorstwem. Wzorce projektowe\u0026rdquo;[ 1]. Tłumaczenie – przyznam nienajlepsze. Szczególnie rozbawiło mnie tłumaczenie słowa widgety na widżety – skojarzenia z bajką o podobnym tytule nasuwają się same.\nSama treść zapewne byłaby dzięki dobremu tłumaczeniu bardzo dobra, a tak jest tylko średnia. Na naganę zasługuje też polonizowanie diagramów, na których widnieją kwiatki typu getMiasto, getAdres są też Miksy takie jak nazwa tabeli po polsku (Album), po angielsku druga tabela (Track) i wszystkie kolumny łącznie z danymi. Słowem tłumaczenie, co najwyżej mierne. Drugą i trzecią książkę nabyłem samodzielnie.\nJest to \u0026ldquo;Podstawowy wykład z systemów baz danych\u0026rdquo;[ 2] Wydawnictwa Naukowo Technicznego oraz \u0026ldquo;Analiza i projektowanie obiektowe\u0026rdquo;[ 3] wydawnictwa Helion.\nZ obiema nie miałem czasu się dobrze zapoznać, starałem się tylko przeczytać rozdział o projektowaniu bazy w pierwszej, lecz zraziło mnie bardzo matematyczne podejście. Czytałem o normalizacji w innej książce (Java. Najlepsze rozwiązania bazodanowe[ 4]) i tam było to o wiele przystępniej wyjaśnione. Brakuje w książce również omówienia diagramów encji tworzonych według standardów branżowych w narzędziach takich jak CASE Studio. Owszem E/R jest, ale bardziej to przypomina diagramy przepływu UML niż logiczny schemat bazy danych, z którego można wygenerować strukturę. Autor szeroko się rozwodzi nad ODL, z którym jeszcze ani razu się nie spotkałem.\nZ Analizy i projektowania obiektowego przeczytałem tylko rozdział o kryzysie oprogramowania, ale w najbliższym czasie na pewno zapoznam się z tą książką głębiej.\nNotes [ 1] http://helion.pl/ksiazki/szabko.htm\n[ 2] http://wnt.pl/product.php?action=0\u0026amp;prod_id=225\u0026amp;hot=1\n[ 3] http://helion.pl/ksiazki/anobie.htm\n[ 4] http://helion.pl/ksiazki/jabnar.htm\n","permalink":"https://blog.dywicki.pl/2005/12/08/nowe-nabytki/","summary":"\u003cp\u003e\u003cimg alt=\"Projektowanie i analiza obiektowa\" loading=\"lazy\" src=\"http://splatch.php.org.pl/_img/anobie.jpg\"\u003e\u003cimg alt=\"Architektura systemów zarządzania przedsiębiorstwem. Wzorce projektowe\" loading=\"lazy\" src=\"http://splatch.php.org.pl/_img/szabko.jpg\"\u003e W zeszłym tygodniu firma, w której pracuję nabyła za moją namową książkę – \u0026ldquo;Architektura systemów zarządzania przedsiębiorstwem. Wzorce projektowe\u0026rdquo;[ \u003ca href=\"#pnote-37-1\"\u003e1\u003c/a\u003e]. Tłumaczenie – przyznam nienajlepsze. Szczególnie rozbawiło mnie tłumaczenie słowa widgety na widżety – skojarzenia z bajką o podobnym tytule nasuwają się same.\u003c/p\u003e\n\u003cp\u003eSama treść zapewne byłaby dzięki dobremu tłumaczeniu bardzo dobra, a tak jest tylko średnia. Na naganę zasługuje też polonizowanie diagramów, na których widnieją kwiatki typu getMiasto, getAdres są też Miksy takie jak nazwa tabeli po polsku (Album), po angielsku druga tabela (Track) i wszystkie kolumny łącznie z danymi. Słowem tłumaczenie, co najwyżej mierne. Drugą i trzecią książkę nabyłem samodzielnie.\u003c/p\u003e","title":"Nowe nabytki"},{"content":"Wczoraj, bądź przedwczoraj wpadłem na pomysł wykorzystania DOM XML i XSL przy tworzeniu szablonów. Zainspirował mnie PHP TAL (Template Attribute Language).\nZ początku szablon miał być stylem XSL, jednak pomysł ten szybko odpadł ze względu na to, że uniemożliwia to tworzenie własnych komponentów, a przynajmniej ja nie wiem jak to zrobić. W tym układzie w pamięci przechowywany byłby obiekt DomDocument z odpowiednią struktórą - odwzorowaniem dodanych zmiennych. Drugi pomysł wyklucza użycie XSL. Szablon jest parsowany DOM XMLem a następnie rekurencyjnie przeglądany. Na podstawie nazw tagów i zarejestrowanych na początku szablonu rozszeżeń parser tworzy odpowiednie obiekty odpowiadające za komponenty. Ogólnie idea tworzenia własnych rozszeżeń jest rodem z JSP. Nie wiem co z tego wyjdzie i wogóle czy coś z tego będzie.. ;)\nJedno jest pewne - odpada problem z gromadą wyrażeń regularnych, pozbywam się kompilatora. Zostaje parser i być może cache. Sam jestem ciekaw czy to rozwiązanie będzie szybsze niż np. Smarty. Poniżej bardzo abstrakcyjne przykłady.\n[sourcecode lang=\u0026ldquo;xml\u0026rdquo;]\n\u003c?xml version=\"1.0\" ?\u003e \u0026lt;i18n:message select=\u0026ldquo;Hello\u0026rdquo;\u0026gt; \u0026lt;pst:test equals=\u0026ldquo;true\u0026rdquo; assigned:variable=\u0026ldquo;AssignedVar\u0026rdquo; assigned:value=\u0026ldquo;OtherVar\u0026rdquo;\u0026gt; Test 1 \u0026lt;/pst:test\u0026gt; \u0026lt;pst:test identical=\u0026ldquo;true\u0026rdquo; assigned:variable=\u0026ldquo;AssignedVar\u0026rdquo; value=\u0026ldquo;TestVar\u0026rdquo;\u0026gt; Test 2 \u0026lt;/pst:test\u0026gt; [/sourcecode]\n[sourcecode lang=\u0026ldquo;php\u0026rdquo;]\n\u003c?php $tpl = new PST; $i18 = ConfigParserFactory::get('i18n-test/pl.ini'); $tpl-\u003esetI18nDatasource($i18); // ConfigParser $tpl-\u003eassign('AssignedVar',true); $tpl-\u003eassign('OtherVar',false); $tpl-\u003edisplay('test.xml'); ?\u003e [/sourcecode]\n","permalink":"https://blog.dywicki.pl/2005/12/01/system-szablonow/","summary":"\u003cp\u003eWczoraj, bądź przedwczoraj wpadłem na pomysł wykorzystania DOM XML i XSL przy tworzeniu szablonów. Zainspirował mnie PHP TAL (Template Attribute Language).\u003c/p\u003e\n\u003cp\u003eZ początku szablon miał być stylem XSL, jednak pomysł ten szybko odpadł ze względu na to, że uniemożliwia to tworzenie własnych komponentów, a przynajmniej ja nie wiem jak to zrobić. W tym układzie w pamięci przechowywany byłby obiekt DomDocument z odpowiednią struktórą - odwzorowaniem dodanych zmiennych.\nDrugi pomysł wyklucza użycie XSL. Szablon jest parsowany DOM XMLem a następnie rekurencyjnie przeglądany. Na podstawie nazw tagów i zarejestrowanych na początku szablonu rozszeżeń parser tworzy odpowiednie obiekty odpowiadające za komponenty. Ogólnie idea tworzenia własnych rozszeżeń jest rodem z JSP.\nNie wiem co z tego wyjdzie i wogóle czy coś z tego będzie.. ;)\u003c/p\u003e","title":"Parser szablonów"},{"content":"W nieoficjalnych notkach GoF często przwija się wspomniana w tytule proteza, oto co udało mi się wywnioskować ze znalezionych materiałów w sieci:\n_Zaawansowana technika programowania przeznaczona dla koneserów inżynierii oprogramowania polegająca na zachowaniu rozsądnej granicy pomiędzy warstwą implementacji a logiką biznesową tudzież warstą prezentacyjną. Stosowanie wzorca protezy owocuje znacznym skróceniem czasu implementacji oraz zwiększeniem stopnia powiązań przy jednoczesnym zachwianiu spójności projektu.\n_ Proteza jest wzorcem wymagającym idealnego dopasowania do kontekstu. Przy złym zasosowaniu tego wzorca pojawiają się problemy z elastycznością i skalowalnością. Początkujący projektanci powinni unikać protezy ze względu na problemy z późniejszymi zmianami zaprowadzanymi w innych częściach aplikacji\u0026hellip;\u0026rsquo;'\n","permalink":"https://blog.dywicki.pl/2005/11/14/prosthesis-pattern-wzorzec-protezy/","summary":"\u003cp\u003eW nieoficjalnych notkach GoF często przwija się wspomniana w tytule proteza, oto co udało mi się wywnioskować ze znalezionych materiałów w sieci:\u003cbr\u003e\n_Zaawansowana technika programowania przeznaczona dla koneserów inżynierii oprogramowania polegająca na zachowaniu rozsądnej granicy pomiędzy warstwą implementacji a logiką biznesową tudzież warstą prezentacyjną. Stosowanie wzorca protezy owocuje znacznym skróceniem czasu implementacji oraz zwiększeniem stopnia powiązań przy jednoczesnym zachwianiu spójności projektu.\u003cbr\u003e\n_\n\u003cem\u003eProteza jest wzorcem wymagającym idealnego dopasowania do kontekstu. Przy złym zasosowaniu tego wzorca pojawiają się problemy z elastycznością i skalowalnością. Początkujący projektanci powinni unikać protezy ze względu na problemy z późniejszymi zmianami zaprowadzanymi w innych częściach aplikacji\u0026hellip;\u0026rsquo;'\u003c/em\u003e\u003c/p\u003e","title":"Prosthesis Pattern / Wzorzec protezy"},{"content":"Nareszcie jest internet w domu. :) Po 4 miesiącach życia na płytach (CD) wreszcie usłyszałem odgłos przychodzącej wiadomości z PSI, odebrałem pocztę. Ten mały sukces będzie spektakularny jeśli uda mi się zbudować sieć lokalną razem z innymi lokatorami, bo póki co internetem cieszę się tylko ja. No, ale mam nadzieję, że się uda skombinować jakiś AP z routerem i czteroportowym switchem. Jedyny mankament to opłata instalacyjna (200 zł) plus koszt AP (kolejne 200 zł). Ale pokrywamy je wspólnie, więc powinno być ok. :) Abonament 89 zł brutto + 25 zł za zewnętrzny IP. Przepustowość 260/130 kbps. Dziwi mnie jedno - dzierżawiona karta, która ma niby kosztować 300 zł, kiedy podobne na komputroniku są za mniej niż 150 zł.\nTak przy okazji nabyłem również \u0026ldquo;nowy\u0026rdquo; dysk. Matrox 160 GB 7200 RPM/8MB cache po okazyjnej cenie (jeszcze z roczną gwarancją) za 250 zł.\n","permalink":"https://blog.dywicki.pl/2005/11/06/homewithnet/","summary":"\u003cp\u003eNareszcie jest internet w domu. :) Po 4 miesiącach życia na płytach (CD) wreszcie usłyszałem odgłos przychodzącej wiadomości z PSI, odebrałem pocztę. Ten mały sukces będzie spektakularny jeśli uda mi się zbudować sieć lokalną razem z innymi lokatorami, bo póki co internetem cieszę się tylko ja. No, ale mam nadzieję, że się uda skombinować jakiś AP z routerem i czteroportowym switchem. Jedyny mankament to opłata instalacyjna (200 zł) plus koszt AP (kolejne 200 zł). Ale pokrywamy je wspólnie, więc powinno być ok. :) Abonament 89 zł brutto + 25 zł za zewnętrzny IP. Przepustowość 260/130 kbps. Dziwi mnie jedno - dzierżawiona karta, która ma niby kosztować 300 zł, kiedy podobne na komputroniku są za mniej niż 150 zł.\u003c/p\u003e","title":"home@with.net"},{"content":"Wczoraj podczas rozmowy z Chmolu dowiedziałem się, że podobno są źródła nowego frameworka w CVSie. Nie czekając pobrałem najnowszą wersję (oznaczoną numerkiem 6)\nTroszkę to trwało, zanim pobrały się te wszystkie biblioteki, ale w końcu są.. Rozglądam się po źródłach (teoretycznie wersji 6), ale nic specjalnego tam nie ma, jakiś przykład napisany w C do filtrowania globalsów (moduł main?!), który i tak w praktyce na nic się nie zda, bo kto da możliwość dodawania własnych rozszeżeń na serwie\u0026hellip; ;), w Zend Engine również zmian brak, nic specjalnego nie ma poza bałaganem. Zdaje się, że poza pracami nad wsparciem unicode nic się tam nie dzieje. Owszem są branche do namespaces, ale nic się nie zmienia w samych plikach. Zmiany w zend_objects.h kończą się 3 sierpnia. Rozglądałem się za jakąś wersją pośredniczącą (5.5), ale takiej gałęzi w CVSie nie ma. Po przejrzeniu ChangeLoga stwierdziłem, że tam nic o PHP6 nie ma, jedyne co się pojawia to PHP 5.1. Dodam, że postępowałem zgodnie z instrukcjami na PHP.net. No, ale nic znalazłem moduł php6, zobaczymy co w nim jest.\nPowiem, że poczułem zawód, ale nie tylko przez to, że nie znalazłem źródeł nowego frameworka. Mam wrażenie, że prace nad nowszymi wersjami (pięć i sześć) są opóźniane przez to, że wciąż jest prowadzony support dla czwórki. Przecież piątka była wydana przeszło rok temu, a tutaj cały czas wlecze się 4. PHP.net dostało cięgi za wydanie wersji 4.4, ale powinno coraz bardziej dostawać w kość za wydawanie kolejnych fiksów do 4.4\u0026lt;. Jak ma wejść piątka na stałe, skoro cały czas są poprawiane stare błędy. IMO gdyby pojawiły się jakieś krytyczne bugi, które nie zostałyby usunięte w 4 ale w 5 tak to część hostów zdecydowałaby się na przejście z średniowiecza do renesansu :). Możliwe, że się mylę w tym ostatnim zdaniu, bo nie znam do końca faktów, ale IMO przyjdzie nam jeszcze sporo poczekać za PHP6 jak i PCP, tak długo, że Mojavi 4 z pewnością zdąży wyjść i kolejna wersja tego dobrego frameworka będzie pisana pod PHP 6/PCP.\nPrzy okazji spójrzcie jakie cuda można zobaczyć z MySQL:\nhttp://splatch.php.org.pl/_img/baza.jpg\n","permalink":"https://blog.dywicki.pl/2005/11/03/zend-framework-i-php6/","summary":"\u003cp\u003eWczoraj podczas rozmowy z Chmolu dowiedziałem się, że podobno są źródła nowego frameworka w CVSie. Nie czekając pobrałem najnowszą wersję (oznaczoną numerkiem 6)\u003c/p\u003e\n\u003cp\u003eTroszkę to trwało, zanim pobrały się te wszystkie biblioteki, ale w końcu są.. Rozglądam się po źródłach (teoretycznie wersji 6), ale nic specjalnego tam nie ma, jakiś przykład napisany w C do filtrowania globalsów (moduł main?!), który i tak w praktyce na nic się nie zda, bo kto da możliwość dodawania własnych rozszeżeń na serwie\u0026hellip; ;), w Zend Engine również zmian brak, nic specjalnego nie ma poza bałaganem. Zdaje się, że poza pracami nad wsparciem unicode nic się tam nie dzieje. Owszem są branche do namespaces, ale nic się nie zmienia w samych plikach. Zmiany w zend_objects.h kończą się 3 sierpnia. Rozglądałem się za jakąś wersją pośredniczącą (5.5), ale takiej gałęzi w CVSie nie ma. Po przejrzeniu ChangeLoga stwierdziłem, że tam nic o PHP6 nie ma, jedyne co się pojawia to PHP 5.1. Dodam, że postępowałem zgodnie z instrukcjami na PHP.net. No, ale nic znalazłem moduł php6, zobaczymy co w nim jest.\u003c/p\u003e","title":"Zend Framework, PHP5, PHP6"},{"content":"Oj tak, mała przerwa. Przez miniony tydzień praktycznie nic nie dopisałem do frameworka, naturalnie z braku czasu. Czasu miałem tylko tyle, żeby zacząć bawić się Strutsem (ebook \u0026ldquo;Struts in action\u0026rdquo;), ściągnąć Springa.. Struts spodobał mi się, na prawdę ciekawy. Zainspirował mnie do nowych przemyśleń.\nNajprawdopodobniej w przyszłym tygodniu będę miał już internet w domu, więc nie będzie problemów z publikowaniem notek. Koszt instalacji i aktywacji to 200 zł, ale dochodzi jeszcze router i dodatkowe okablowanie (tak, będzie sieć domowa) + 200 zł. Mam nadzieje, że całość zamknie się w tych czterystu złotych. ;)\nDo przyszłej soboty mam też skończyć jedno zlecenie, szkoda, że praktycznie za bezcen, ale czego to się nie robi by ratować przyjaciół w potrzebie. Proste zarządzanie kilkoma podstronami + moduł do obsługi produktów i nie powiązanych z nimi dystrybutorów (oni są tylko w województwach). Ciekawie zapowiadają się grupy produktów, bo każdy produkt może być w kilku grupach. Mam zamiar załatwić to drzewkiem + tabelą pośredniczącą pomiędzy product a group.\nPrzy okazji, jakiś czas temu robiłem fotki - mój pokój:\nhttp://splatch.php.org.pl/dom/1.jpg\ni dom w którym obecnie mieszkam:\nhttp://splatch.php.org.pl/dom/20.jpg\ni stanowisko pracy:\nhttp://splatch.php.org.pl/biurko.jpg\n","permalink":"https://blog.dywicki.pl/2005/10/27/bya-maa-przerwa/","summary":"\u003cp\u003eOj tak, mała przerwa. Przez miniony tydzień praktycznie nic nie dopisałem do frameworka, naturalnie z braku czasu. Czasu miałem tylko tyle, żeby zacząć bawić się Strutsem (ebook \u0026ldquo;Struts in action\u0026rdquo;), ściągnąć Springa.. Struts spodobał mi się, na prawdę ciekawy. Zainspirował mnie do nowych przemyśleń.\u003c/p\u003e\n\u003cp\u003eNajprawdopodobniej w przyszłym tygodniu będę miał już internet w domu, więc nie będzie problemów z publikowaniem notek. Koszt instalacji i aktywacji to 200 zł, ale dochodzi jeszcze router i dodatkowe okablowanie (tak, będzie sieć domowa) + 200 zł. Mam nadzieje, że całość zamknie się w tych czterystu złotych. ;)\u003c/p\u003e","title":"Była mała przerwa :)"},{"content":"No.. siedzę właśnie w nowej pracy. Jest super. Ludzie spoko, szef w porządku - słowem pracować i nie odchodzić. Do nowego miejsca pracy mam nieco ponad 10 minut pieszo, więc odchodzi problem z autobusami (ostatnio tyle czasu potrzebowałem na dojście do przystanku). Pojawił się mały problem, bo straciłem hasło do kompa w domu i jak by nie patrzećjestem uziemiony. Prace nad PSF stoją, a ja kwitnę wieczorami przed telewizorem. Ale nie będzie źle \u0026hellip; po reinstalacji systemu pewnie będzie troszkę szybciej działać. W sumie, może w grudniu wezmę laptopa w raty \u0026hellip;\nCo do PSF naszkicowałem diagramy klas dla filtrów i configów. Ten pierwszy nie różni się niczym od tego, który można zobaczyć w Core J2EE patterns przy custom filter strategy.\nWcześniej zarzucano mi definiowanie na sztywno ścieżek do plików konfiguracyjnych. Wpadłem na pomysł jak to rozwiązać:\n\u0026lt;module\u0026gt; \u0026lt;name\u0026gt;JakiśMod\u0026lt;/name\u0026gt; \u0026lt;default\u0026gt;JakaśAkcja\u0026lt;/default\u0026gt; \u0026lt;config\u0026gt;%PSF_DIR%/Modules/%PSF_MODULE_NAME%/Config.xml\u0026lt;/config\u0026gt; \u0026lt;/module\u0026gt; Myślę, że rozwiąże to częściowo problem z definiowaniem typu parsera..\n","permalink":"https://blog.dywicki.pl/2005/10/06/return-new-work/","summary":"\u003cp\u003eNo.. siedzę właśnie w nowej pracy. Jest super. Ludzie spoko, szef w porządku - słowem pracować i nie odchodzić. Do nowego miejsca pracy mam nieco ponad 10 minut pieszo, więc odchodzi problem z autobusami (ostatnio tyle czasu potrzebowałem na dojście do przystanku). Pojawił się mały problem, bo straciłem hasło do kompa w domu i jak by nie patrzećjestem uziemiony. Prace nad PSF stoją, a ja kwitnę wieczorami przed telewizorem. Ale nie będzie źle \u0026hellip; po reinstalacji systemu pewnie będzie troszkę szybciej działać. W sumie, może w grudniu wezmę laptopa w raty \u0026hellip;\u003c/p\u003e","title":"return new Work;"},{"content":"Źródła mojego frameworka do pobrania pobierz\nScreen z daeronem zobacz\n","permalink":"https://blog.dywicki.pl/2005/09/29/roda-do-pobrania/","summary":"\u003cp\u003eŹródła mojego frameworka do pobrania \u003ca href=\"http://splatch.php.org.pl/_img/pl.splatch.zip\"\u003epobierz\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eScreen z daeronem \u003ca href=\"http://splatch.php.org.pl/_img/daeron.gif\"\u003ezobacz\u003c/a\u003e\u003c/p\u003e","title":"Źródła do pobrania"},{"content":"Troszkę mało czasu mam, bo zmieniam pracę, ale za jakiś czas opiszę to i owo.\n","permalink":"https://blog.dywicki.pl/2005/09/28/wrzeniowa-zawierucha/","summary":"\u003cp\u003eTroszkę mało czasu mam, bo zmieniam pracę, ale za jakiś czas opiszę to i owo.\u003c/p\u003e","title":"Wrześniowa zawierucha"},{"content":"Jako, że prace nad frameworkiem troszkę się posunęły (doszło uruchamianie akcji) postanowiłem sprawdzić ile czasu zajmuje jedno ządanie. Jakież było moje zaskoczenie, gdy mym oczom ukazał się czas ponad 1 sekundy. Szybko sobie jednak przypomiałem, że autoloader jest do wymiany. Przebudowałem stary tak, aby współpracował z tokenizerem beli. Zmiana – względem poprzedniego czasu – znaczna. Czas spadł do około 0.2 s. Kilka poprawek i zszedłem poniżej – teraz czas jednego rządania wynosi od 0.12 do 0.15 s. Stwierdziłem, że to strasznie długo tym bardziej, że nie ma jeszcze obsługi kilku istotnych rzeczy (FilterChain, Validator, View, ActionForms). Wniosek? Błędy w projekcie. Oto porównanie z innymi skryptami, które udało mi się odanleść na dysku:\nMój framework:\nczas od 0.12 do 0.15 – 33 włączone pliki.\nOdin:\nczas od 0.047 do 0.063 – 23 włączone pliki (w tym Smarty.class.php)\nBlog+ (Pinky):\nczas od 0.24 do 0.26 - 58 włączonych plików (plus połączenie z MySQL)\nDaeron:\nczas od 0.92 do 0.96 – 15 włączonych plików (PDO zgłasza wyjątek)\nCake:\nczas od 0.11 do 0.14 – 28 włączonych plików (troszkę niedziałająca wersja)\nMojavi 3.0:\nczas od 0.16 do 0.23 – 41 włączonych plików (PHPView, bez połączenia z bazą)\nCo dziwne – najmniej włączający Daeron okazał się znacznie wolniejszy od reszty. Za to kolejny pod względem liczby dołączanych plików Odin najszybszy. Przypadek? Trudno powiedzieć, ponieważ wszystkie testowane frameworki/aplikacje są w różnym stadium rozwoju. Obrazowo – Odin szybszy od Daerona ponad 19 razy, a od drugiego w testach Cake\u0026rsquo;a o ponad 2 razy. Stosunek czasów Odina do Blog+ i Mojavi to 5 i 3. Podkreślam, że testy były przeprowadzane manualnie i pomyłki są bardzo prawdopodobne. Testy przeprowadziłem na swoim domowym sprzęcie: Athlon 2000 XP (1.67 Ghz), 768 MB RAM (DDR 400), OS: Windows XP HE, Apache 1.3.33 i PHP 5.1.0 b2 (z PDO i XSL). W tle działały wciąż te same aplikacje.\n","permalink":"https://blog.dywicki.pl/2005/09/22/optimization/","summary":"\u003cp\u003eJako, że prace nad frameworkiem troszkę się posunęły (doszło uruchamianie akcji) postanowiłem sprawdzić ile czasu zajmuje jedno ządanie. Jakież było moje zaskoczenie, gdy mym oczom ukazał się czas ponad 1 sekundy. Szybko sobie jednak przypomiałem, że autoloader jest do wymiany. Przebudowałem stary tak, aby współpracował z tokenizerem beli. Zmiana – względem poprzedniego czasu – znaczna. Czas spadł do około 0.2 s. Kilka poprawek i zszedłem poniżej – teraz czas jednego rządania wynosi od 0.12 do 0.15 s. Stwierdziłem, że to strasznie długo tym bardziej, że nie ma jeszcze obsługi kilku istotnych rzeczy (FilterChain, Validator, View, ActionForms). Wniosek? Błędy w projekcie. Oto porównanie z innymi skryptami, które udało mi się odanleść na dysku:\u003c/p\u003e","title":"O::ptimization"},{"content":" Tak to już jest, że coraz większość problemów pojawia się przy detalach\u0026hellip; Również i w przypadku tego, co piszę obecnie pojawiła się garść problemów.\nPierwszy problem to zrezygnowanie z buforowania plików konfiguracyjnych. Do operowania na XMLu wykorzystuję XPatha, a ten jest dostępny poprzez DOM bądź SimpleXML. Podejrzewam, że tak czy owak SimpleXML przerzuca swój obiekt do obiektu DOM, żeby wykonać xpath_eval, ale nie jestem w stanie tego udowodnić. Jak wielkie spowolnienie z tego wyniknie? Nie jestem w stanie powiedzieć. Bez buforu konfiguracji jedno żądanie zajmuje około 0.05s. Gdy tworzona jest mapa klas czas ten wzrasta ponad dziesięciokrotnie.\nNo, ale jakoś sobie poradzę. Mogę tam, gdzie SimpleXML jest konwertowany do tablicy zastosować warunek, który będzie sprawdzał czy w pliku zostały wprowadzone zmiany. Problem drugi to łańcuchy. Kolega z pracy, który wiele pracował ze Strutsem zaproponował, żeby nie implementować łańcuchów tylko obsługę forwardów tak jak w wyżej wymienionym frameworku.\nW sumie nie jest to problem, stworzę obiekt ForwardConfig, który będzie wczytywał dane z forwardami lokalnymi i globalnymi dla całego modułu/aplikacji.\nWalczyłem również z obsługą Requestu.Tzn. problem pojawił się, gdy postanowiłem rozdzielić odpowiedzialność na dwie klasy. Console oraz Web. Ostatecznie, aby wiedzieć skąd pochodzi zmienna w przypadku korzystania z obiektu WebRequest nadpisałem metodę\nRequest::getParameter. Teraz przyjmuje dwa argumenty zamiast jednego. Pierwszy to nazwa argumentu, drugito miejse, skąd ma pochodzić zmienna. Jest to numer – odpowiednio 0 dla COOKIE, 1 dla GET, 2 dla POST, 3 dla FILES. Domyślnie drugi argument przyjmuje wartość 1, czyli dane będą pobierane z GETa.\nObecnie cały czas walczę nad skończeniem Controllera. Wtedy będę mógł zająć się klasą ApplicationController, która będzie miała za zadanie obsługiwać moduły.\nNo a najcięższy kawałek chleba zapowiada się przy XML2Form. Myślę, że za około miesiąc, może 2, gdy całość zacznie jako-tako funkcjonować uwolnię źródła.\nDzisiaj udało mi się również uruchomić SimpleTest. Być może dzisiaj napiszę kilka testów do frameworka. Wczoraj straciłem ponad 2 godziny na próbę uruchomienia Propela. To kurewskie środowisko jest nie do uruchamienia. Tym, bardziej, że bez dostępu do internetu w domu nie mogę ściągnąć wersji z SVN, a bez tego po prostu klapa. Teoretycznie wykonuję wszystko tak jak jest w dokumentacji, ale w praktyce nie są generowane klasy, bo pojawia się wszędobylski błąd \u0026lsquo;Class File not found\u0026rsquo;. Wg. wskazówek, które są na stronie powinno starczyć tylko dodanie w jednym pliku Phing do linii, ale nie pomaga.\n","permalink":"https://blog.dywicki.pl/2005/09/14/dylematy/","summary":"\u003cp\u003e\u003cimg alt=\"kliknij aby powiększyć\" loading=\"lazy\" src=\"http://splatch.php.org.pl/_img/dev_m.gif\"\u003e Tak to już jest, że coraz większość problemów pojawia się przy detalach\u0026hellip; Również i w przypadku tego, co piszę obecnie pojawiła się garść problemów.\u003c/p\u003e\n\u003cp\u003ePierwszy problem to zrezygnowanie z buforowania plików konfiguracyjnych. Do operowania na XMLu wykorzystuję XPatha, a ten jest dostępny poprzez DOM bądź SimpleXML. Podejrzewam, że tak czy owak SimpleXML przerzuca swój obiekt do obiektu DOM, żeby wykonać xpath_eval, ale nie jestem w stanie tego udowodnić. Jak wielkie spowolnienie z tego wyniknie? Nie jestem w stanie powiedzieć. Bez buforu konfiguracji jedno żądanie zajmuje około 0.05s. Gdy tworzona jest mapa klas czas ten wzrasta ponad dziesięciokrotnie.\u003c/p\u003e","title":"Dylematy."},{"content":"Odnośnie książki prezentowanej niżej\u0026hellip; :)\nChciałem Was ostrzec przed nabywaniem czy nawet zbliżaniem się do tego tytułu. Fakt, książka zaczyna od omówienia XMLa, którego nie czytałem, bo jak XML wygląda to wiem. Dzięki tej książce chciałem lepiej poznać DTD oraz XSD. Pomimo szczerych chęci nie udało się.\nAutorka tak pokrętnie wyjaśnia wszytko, że nie sposób to zrozumieć. Z wielkimi trudami przyswoiłem wiadomości o DTD, podobnie jak o XSL, ale XSD to męka. Tym, bardziej że nigdzie nie ma dłuższego fragmentu kodu. Tylko pare linijek i na dole podpis. Nie sposób w ten sposób zrozumieć o co chodzi. Tym bardziej przy XSD, gdzie widzi się wyrwane z kontekstu definicje a potem szuka fragmentu kodu, do którego on się odwołuje.\nPodobnie jak moich przedmówców razi konstrukcja książki i częste odsyłacze w przód i w tył. A rozwiązanie z krokami? Fatalne, po dłuższym czasie człowieka zaczyna ogarniać wrażenie, że książka ta była pisana z myślą o tych, którzy mają problem z przyswajaniem wiadomości..\nZe swojej strony zalecam zapoznanie się z pozycją \u0026ldquo;XML na poważnie\u0026rdquo;. Jest ona droższa, ale zdecydowanie lepsza od tej.\n","permalink":"https://blog.dywicki.pl/2005/09/09/komentarz-na-helionpl/","summary":"Odnośnie książki prezentowanej niżej\u0026hellip; :)","title":"Komentarz na helion.pl"},{"content":"Chciałem Was ostrzec przed nabywaniem czy nawet zbliżaniem się do tego tytułu. Książka zaczyna od omówienia XMLa, którego nie czytałem, bo jak XML wygląda to wiem. Pożyczając tą książkę chciałem lepiej poznać DTD oraz XSD. Pomimo szczerych chęci nie udało się.\nAutorka tak pokrętnie wyjaśnia wszytko, że nie sposób to zrozumieć. Z wielkimi trudami przyswoiłem wiadomości o DTD, podobnie jak o XSL, ale XSD to męka.. nie wiem, może to zmęczenie po pracy działa na mnie tak otępiająco? Chyba nie, bo komentarze na helionie też nie są zbyt pochlebne. W każdym razie, czekam na kolejną pozycję o XMLu którą, będę miał pożyczoną - mianowicie “XML. Na poważnie”, która zapowiada się świetnie. Jutro to zweryfikuję. Tym czasem powracam do bojów z Propelem i PHPUnit.\n// właśnie mam przed sobą XML na poważnie, za gruba to ona nie jest, ale zobaczymy co ciekawego piszą o XMLu :)\nLinki do plików:\nconfig.xml\ntest.dtd\ntest.xsl\nconfig.xml\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;!-- conf for web application --\u0026gt; \u0026lt;config cache=\u0026#34;false\u0026#34;\u0026gt; \u0026lt;plugins\u0026gt; \u0026lt;plugin name=\u0026#34;Request1\u0026#34; class=\u0026#34;WebRequest1\u0026#34; /\u0026gt; \u0026lt;plugin name=\u0026#34;Request2\u0026#34; class=\u0026#34;WebRequest2\u0026#34; /\u0026gt; \u0026lt;/plugins\u0026gt; \u0026lt;database driver=\u0026#34;PDODatabase\u0026#34;\u0026gt; \u0026lt;type\u0026gt;PgSQL\u0026lt;/type\u0026gt; \u0026lt;user\u0026gt;root\u0026lt;/user\u0026gt; \u0026lt;pass\u0026gt;Splatch22\u0026lt;/pass\u0026gt; \u0026lt;name\u0026gt;test_\u0026lt;/name\u0026gt; \u0026lt;host\u0026gt;localhost\u0026lt;/host\u0026gt; \u0026lt;!-- This parameter is optional \u0026lt;port\u0026gt;5502\u0026lt;/port\u0026gt; --\u0026gt; \u0026lt;/database\u0026gt; \u0026lt;modules default=\u0026#34;HomePage\u0026#34;\u0026gt; \u0026lt;module name=\u0026#34;Default\u0026#34; default=\u0026#34;Index\u0026#34; /\u0026gt; \u0026lt;module name=\u0026#34;City\u0026#34; default=\u0026#34;UserCites\u0026#34; /\u0026gt; \u0026lt;/modules\u0026gt; \u0026lt;mapping\u0026gt; \u0026lt;pattern module=\u0026#34;Default\u0026#34;\u0026gt;/HomePage\u0026lt;/pattern\u0026gt; \u0026lt;!-- propozycja --\u0026gt; \u0026lt;variable module=\u0026#34;Default\u0026#34; equals=\u0026#34;home\u0026#34;\u0026gt;module\u0026lt;/variable\u0026gt; \u0026lt;/mapping\u0026gt; \u0026lt;/config\u0026gt; test.dtd test.dtd\n\u0026lt;!-- Typ BOOL przyjmuje tylko wartosci true/false --\u0026gt; \u0026lt;!ENTITY % BOOL \u0026#34;(true|false)\u0026#34;\u0026gt; \u0026lt;!ELEMENT config (plugins,database,mapping)?\u0026gt; \u0026lt;!ATTLIST config cache %BOOL; #FIXED \u0026#34;true\u0026#34;\u0026gt; \u0026lt;!ELEMENT plugins (plugin*)\u0026gt; \u0026lt;!ELEMENT plugin EMPTY\u0026gt; \u0026lt;!ATTLIST plugin name CDATA\t#REQUIRED class CDATA\t#REQUIRED\u0026gt; \u0026lt;!ELEMENT database (type,user,pass,name,host,port)\u0026gt; \u0026lt;!ATTLIST database driver\tCDATA #REQUIRED\u0026gt; \u0026lt;!ELEMENT type (#PCDATA)\u0026gt; \u0026lt;!ELEMENT user (#PCDATA)\u0026gt; \u0026lt;!ELEMENT pass (#PCDATA)\u0026gt; \u0026lt;!ELEMENT name (#PCDATA)\u0026gt; \u0026lt;!ELEMENT host (#PCDATA)\u0026gt; \u0026lt;!ELEMENT port (#PCDATA)\u0026gt; \u0026lt;!ELEMENT mapping (pattern,variable)*\u0026gt; \u0026lt;!ELEMENT pattern (#PCDATA)\u0026gt; \u0026lt;!ATTLIST pattern module\tCDATA\t#REQUIRED action\tCDATA\t#IMPLIED\u0026gt; \u0026lt;!ELEMENT variable (#PCDATA)\u0026gt; \u0026lt;!ATTLIST variable equals\tCDATA\t#REQUIRED action\tCDATA\t#IMPLIED\u0026gt; text.xsl\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;xsl:stylesheet xmlns:xsl=\u0026#34;http://www.w3.org/1999/XSL/Transform\u0026#34; version=\u0026#34;1.0\u0026#34;\u0026gt; \u0026lt;xsl:template match=\u0026#34;/\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Framework config\u0026lt;/h2\u0026gt;\u0026lt;hr /\u0026gt; Buforowanie: \u0026lt;b\u0026gt; \u0026lt;xsl:choose\u0026gt; \u0026lt;xsl:when test=\u0026#34;config/@cache\u0026#34;\u0026gt; \u0026lt;xsl:apply-templates select=\u0026#34;config/@cache\u0026#34; /\u0026gt; \u0026lt;/xsl:when\u0026gt; \u0026lt;xsl:otherwise\u0026gt;domyslne - true\u0026lt;/xsl:otherwise\u0026gt; \u0026lt;/xsl:choose\u0026gt; \u0026lt;/b\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;h2\u0026gt;Wtyczki:\u0026lt;/h2\u0026gt; Razem: \u0026lt;xsl:value-of select=\u0026#34;count(.//plugins/*)\u0026#34; /\u0026gt; \u0026lt;table border=\u0026#34;1\u0026#34; width=\u0026#34;500px\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;Nazwa\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Klasa\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;xsl:for-each select=\u0026#34;.//plugins/plugin\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;50%\u0026#34;\u0026gt;\u0026lt;xsl:value-of select=\u0026#34;@name\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;xsl:value-of select=\u0026#34;@class\u0026#34; /\u0026gt;.php\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/xsl:for-each\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;h2\u0026gt;Moduly\u0026lt;/h2\u0026gt; Razem: \u0026lt;xsl:value-of select=\u0026#34;count(.//modules/*)\u0026#34; /\u0026gt;, domyslny \u0026lt;xsl:value-of select=\u0026#34;.//modules/@default\u0026#34; /\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;table border=\u0026#34;1\u0026#34; width=\u0026#34;500px\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;Modul\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Domyslna akcja\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;xsl:for-each select=\u0026#34;.//modules/module\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;50%\u0026#34;\u0026gt;\u0026lt;xsl:value-of select=\u0026#34;@name\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;xsl:value-of select=\u0026#34;@default\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/xsl:for-each\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;h2\u0026gt;Mapowanie\u0026lt;/h2\u0026gt; Razem \u0026lt;xsl:value-of select=\u0026#34;count(.//mapping/*)\u0026#34; /\u0026gt; (wzorce: \u0026lt;xsl:value-of select=\u0026#34;count(.//mapping/pattern)\u0026#34; /\u0026gt;) \u0026lt;table border=\u0026#34;1\u0026#34; width=\u0026#34;500px\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;Wzorzec\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Akcja\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;xsl:for-each select=\u0026#34;.//mapping/pattern\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;50%\u0026#34;\u0026gt;\u0026lt;xsl:value-of select=\u0026#34;.\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;xsl:value-of select=\u0026#34;@module\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/xsl:for-each\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/xsl:template\u0026gt; \u0026lt;/xsl:stylesheet\u0026gt; ","permalink":"https://blog.dywicki.pl/2005/09/08/po-prostu-xml/","summary":"\u003cp\u003e\u003cimg alt=\"Po prostu?\" loading=\"lazy\" src=\"http://helion.pl/okladki/181x236/ppxml.jpg\"\u003eChciałem Was ostrzec przed nabywaniem czy nawet zbliżaniem się do tego tytułu. Książka zaczyna od omówienia XMLa, którego nie czytałem, bo jak XML wygląda to wiem. Pożyczając tą książkę chciałem lepiej poznać DTD oraz XSD. Pomimo szczerych chęci nie udało się.{{ double-space-with-newline }}\nAutorka tak pokrętnie wyjaśnia wszytko, że nie sposób to zrozumieć. Z wielkimi trudami przyswoiłem wiadomości o DTD, podobnie jak o XSL, ale XSD to męka.. nie wiem, może to zmęczenie po pracy działa na mnie tak otępiająco? Chyba nie, bo komentarze na helionie też nie są zbyt pochlebne. W każdym razie, czekam na kolejną pozycję o XMLu którą, będę miał pożyczoną - mianowicie “XML. Na poważnie”, która zapowiada się świetnie. Jutro to zweryfikuję. Tym czasem powracam do bojów z Propelem i PHPUnit.{{ double-space-with-newline }}\n// właśnie mam przed sobą XML na poważnie, za gruba to ona nie jest, ale zobaczymy co ciekawego piszą o XMLu :)\u003c/p\u003e\n\u003cp\u003eLinki do plików:{{ double-space-with-newline }}\u003ca href=\"http://splatch.php.org.pl/_img/config.xml\"\u003econfig.xml\u003c/a\u003e{{ double-space-with-newline }}\u003ca href=\"http://splatch.php.org.pl/_img/test.dtd\"\u003etest.dtd\u003c/a\u003e{{ double-space-with-newline }}\u003ca href=\"http://splatch.php.org.pl/_img/test.xsl\"\u003etest.xsl\u003c/a\u003e\u003c/p\u003e\n","title":"Po prostu. XML"},{"content":"Planowałem to zrobić wcześniej, ale dopiero świadectwo Beli mnie ostatecznie zmotywowało :). Byłem pozytywnie zakoczony tym, że jeszcze ktoś mnie odwiedza\u0026hellip;\nObok prezentuję struktóre katalogów. Myślę, że jest ona dośćprzejrzysta, można powiedzieć zapożyczona z Mojavi.\nTroszkę może Was dziwić tak wielkie rozbicie konfiguracji, ale jest to zamierzone, moim zdaniem łatwiej się pracuje w takim rozdrobnieniu, ponieważ każdy moduł posiada oddzielnąkonfigurację i może mieć zgoła inne parametry. W kataloguWebApp znajdują się ustawienia globalne takie jak dostęp do bazy danych oraz zdefiniowane moduły + pluginy, czyli klasy które można zastąpić (rozwiązanie Beli z Odina).\nWebApp/Config.php zawiera definicje ścieżek.\nWebApp/Modules/Default/config.xml to definicja akcji, jakie znajdują się w module oraz obsługę błędów (404,403,500);\nWebApp/Modules/Config/ActionName.xml zawiera szczegółowe dane takie jak używane filtry i akcje odpalane w stosie (można to nazwać blokami). Zastanawiam się czy implementować coś takiego jak Bela – fallbacki, dla tych akcji które zwróciły fałsz.\nGdyby trafiły się jakieś pytania odnośnie katalogów i ich zawartości piszcie.\nTeraz garść informacji o tym, jak całość ma być zorganizowana.\nZgodnie z tym, co pisałem na forum.php.pl zaimplementuję łańcuchy akcji, czyli możliwość uruchamiania kilku akcji połączonych w logiczną całość.Będzie to przypominało kreatory na kształt tych, które są w Prado. Przykład takiego łańcucha dla dodawania nowego użytkownika:\nWpisz token -\u0026gt; Podaj dane -\u0026gt; Wpisz kod aktywacyjny Nie ma możliwości odpalenia akcji “Podaj dane” poza stosem. Podobnie jak “kod aktywacyjny” jest dostępna tylko po przejściu wcześniejszego ogniwa. Zainteresowanych zapraszam do zapoznania się z tematem na forum.\nNa akcję składać będą się różne obiekty.\nAction – warstwa logincza\nActionForm – część warstwy prezentacyjnej, interfejs XML2Form\nActionValidator – filtr sprawdzający poprawność danych\nActionErrors – lista błędów, które zostały wygenerowane poprzez wcześniejsze elementy\nObiekt ActionErrors zawiera obiekty ActionError, które umożliwiają internacjonalizację na poziomie walidacji formularzy. ;)\nW temacie na forum wspominałem o beanach, ale nie pisałem jak planuję to rozwiązać. Do użytkownika będzie docierać tylko FormBean więc łatwo załatwić to poprzez dodanie hiddena z jego nazwą. Podczas, gdy na serwerze wciąż będzie kopia użytkownik będzie miał do dyspozycji swój egzemplarz, który będzie mógł modyfikować.\nAkcja będzie mogła samodzielnie sprawdzać dane (podobnie jak w Strutsie i Mojavi) poprzez metodę Action::validate(). Gdy metoda ta zwróci fałsz nie dojdzie do uruchomienia metody Action::run(). Zostanie wyświetlona poprzednia akcja razem z błędami, które powinny znajdować się już w obiekcie ActionErrors. Gdy walidacja przebiegnie pomyślnie zostanie uruchomiona warstwa logiczna. Jeśli metoda Action::run() zwróci fałsz zostanie cofnięta transakcja uruchomiona poprzez kontroler (ROLLBACK). Akcja może zawierać również metodę finalize, która jest uruchamiana tylko po pomyślnym zakończeniu tranzakcji (COMMIT). Jeśli akcja znajduje się w łańcuchu to metoda finlize nie jest wykorzystywana. Jest ona uruchamiana dopiero w ostatniej akcji, czyli jak we wcześniejszym przykładzie po poprawnym wpisaniu kodu aktywacyjnego.\nActionForm\nJak wcześniej pisałem jest to interfejs do obsługi formularzy. Jeśli pojawią się błędy ActionForm powinien samodzielnie podświetlić pola i dodać komunikaty o błędach.\nW ustawieniach odnośnie formularzy można zdefiniować czy formularz może być wysłany kilkakrotnie (blokada post-backu). Jeśli istnieje potrzeba blokady ponownego wysłania danych to do formularza jest dodawany hidden z losowym tokenem, który równocześnie jest zapisywany w sesji.\nActionForm to klasa uniwesalna, zawsze jest wykorzystywany tylko jeden egzemplarz/byt.\nXML2Form\nJest to bardzo ważny elementcałego systemu. Klasa XML2Form zawiera obiekty elementów, beany oraz obiekt klasy XML2FormLayout. Po dodaniu do obiektu XML2Form beana trafia on do odpowiedniego elementu, który powinien samodzielnie zmienić wartości swych pól.\nPrzy wyświetlaniu XML2Form przekazuje referencje do Layoutu ($this), który kolejno wyświetla elementy. Element formularza ma podstawową metodę, która zwraca kod kontrolki, np. \u0026lt;input ..\u0026gt;, Opis jest wyciągany poprzez metodę Element::getDesc(), a sprawdzany poprzez Element::gasDesc().\nTeraz przykładowy szablon. ColumnRadioLayout:\n\u0026lt;table [class=”\u0026lt;?=$this-\u0026gt;hasError()?\u0026#39;error_input\u0026#39;:\u0026#39;normal_input\u0026#39;?\u0026gt;\u0026#34;]\u0026gt;\u0026lt;tr\u0026gt;\u0026lt;td\u0026gt; \u0026lt;?=$this-\u0026gt;getLabel()?\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;?=$this-\u0026gt;getDesc()?\u0026gt; \u0026lt;/td\u0026gt;\u0026lt;td\u0026gt; \u0026lt;?$this-\u0026gt;toLayout()?\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;?$this-\u0026gt;gerError()?\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt;\u0026lt;/table\u0026gt; Jeżeli w szablonie strony wcześniej pojawiło się wywołanie getErrors to przy elementach getError() nie zwraca tekstu, jest tylko podświetlone pole. Myślę, aby część tego zadania przerzucić na CSS i zmieniać tylko klasę.\nDiagram nie zgadza się z opisem, ponieważ od pewnego czasu nie zajmowałem się XML2Form i rozmyła mi się wizja całości. Być może, uda mi się to lepiej zorganizować, póki co czekam na opinie. Internacjonalizacja załatwiona będzie niemal tradycyjnie, tzn. Formularz + zczytywaniez nagłowka ACCEPT_LANGUAGE przy tworzeniu nowej sesji. W zależności od wybranego tłumaczenia jest wczytywany plik z komunikatami.\nTym sposobem straciłem 2h na pisanie tego i nie stworzyłem DTD do plików konfiguracyjnych..\n","permalink":"https://blog.dywicki.pl/2005/09/01/gar-informacji/","summary":"\u003cp\u003ePlanowałem to zrobić wcześniej, ale dopiero świadectwo Beli mnie ostatecznie zmotywowało :). Byłem pozytywnie zakoczony tym, że jeszcze ktoś mnie odwiedza\u0026hellip;\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"katalogi\u0026hellip;\" loading=\"lazy\" src=\"http://splatch.php.org.pl/_img/katalogi.gif\"\u003e Obok prezentuję struktóre katalogów. Myślę, że jest ona dośćprzejrzysta, można powiedzieć zapożyczona z Mojavi.\u003c/p\u003e\n\u003cp\u003eTroszkę może Was dziwić tak wielkie rozbicie konfiguracji, ale jest to zamierzone, moim zdaniem łatwiej się pracuje w takim rozdrobnieniu, ponieważ każdy moduł posiada oddzielnąkonfigurację i może mieć zgoła inne parametry. W kataloguWebApp znajdują się ustawienia globalne takie jak dostęp do bazy danych oraz zdefiniowane moduły + pluginy, czyli klasy które można zastąpić (rozwiązanie Beli z Odina).\u003cbr\u003e\n\u003cstrong\u003eWebApp/Config.php\u003c/strong\u003e zawiera definicje ścieżek.\u003cbr\u003e\n\u003cstrong\u003eWebApp/Modules/Default/config.xml\u003c/strong\u003e to definicja akcji, jakie znajdują się w module oraz obsługę błędów (404,403,500);\u003cbr\u003e\n\u003cstrong\u003eWebApp/Modules/Config/ActionName.xml\u003c/strong\u003e zawiera szczegółowe dane takie jak używane filtry i akcje odpalane w stosie (można to nazwać blokami). Zastanawiam się czy implementować coś takiego jak Bela – fallbacki, dla tych akcji które zwróciły fałsz.\u003c/p\u003e","title":"Garść informacji ;)"},{"content":"W głowie mej pojawił się nowy pomysł. :) W krótce więcej detali. Jak na razie powiem tyle, że chodzi o \u0026ldquo;coś\u0026rdquo; co załatwi problem walidacji danych i jednocześnie generowania formularzy. Nie jest to kolejna kopia PEAR::QuickForm, tylko coś innego, w sensie działającego w zgoła inny sposób..\n","permalink":"https://blog.dywicki.pl/2005/08/23/pomys/","summary":"\u003cp\u003eW głowie mej pojawił się nowy pomysł. :) W krótce więcej detali. Jak na razie powiem tyle, że chodzi o \u0026ldquo;coś\u0026rdquo; co załatwi problem walidacji danych i jednocześnie generowania formularzy. Nie jest to kolejna kopia PEAR::QuickForm, tylko coś innego, w sensie działającego w zgoła inny sposób..\u003c/p\u003e","title":"Pomysł"},{"content":"Znowu ponad dwutygodniowa przerwa w notach.. Nic dziwnego, że liczba odwiedzin od czerwca ma tendencję spadkową. Dla zainteresowanych (na oko) czerwiec 413, lipiec 387, sierpień 285. Ale wracając do spraw związanych z programowaniem i od razu na wstępie tłumacząc tytuł notki - zafascynowanie narzędziami z Javy. Moje szczególne uznanie zdobył Struts oraz Hibernate. Jedno i drugie ma swój odpowiednik w PHP - Studs oraz Propel. Co do pierwszego: nic ciekawego, bo pod PHP 4, odnośnie drugiego - dopiero poznaję. :] Z tego co widziałem w pracy Hibernate do niektórych zastosowań jest znakomity, jak wypadnie Propel - to się okaże. Jedno co mnie martwi to brak wsparcia dla PDO i brak konkretnej odpowiedzi czy w końcu się ono pojawi. Mam nadzieję, że w końcu zostanie to wymuszone.. Ze Strutsa najbardziej mi się widzi walidacja formularzy poprzez configi, stosunkowo łatwa internacjonalizacja oraz beany. Mam jakieś ebooki odnośnie budowania aplikacji w nim, ale mószę jeszcze raz wrócić do nauki Javy, ponieważ wcześniej czytałem tą książkę bez dostępu do komputera, a wiadomo każdy przykład trzeba sprawdzić. ;) Najgorsze jest to, że wcześniej przerabiając TiJ miałem pomysły/koncepcje rozwiązania niektórych zadań, a teraz mam w głowie same pytajniki - \u0026ldquo;o co tam chodziło???\u0026rdquo;. W pracy, można powiedzieć, zaaklimatyzowałem się, pojawiają się dyskusje odnośnie przeglądarek itp.\nCo do Thora, można powiedzieć - zawieszony. Nie ma co kryć na dzisiejszy stan rzeczy (czytaj mojej wiedzy) nie jestem w stanie go dokończyć. Swój czas w sporej mierze poświęcam poznawaniu Mojavi, tzn. bardziej przeglądaniu źródeł niż tworzeniu aplikacji z użyciem tego frameworka.\nTak w zarysie - zero programistycznych konkretów, znowu same ogólniki. Ale nie ma co się dziwić. Brak sieci w chacie doskwiera\u0026hellip;\n","permalink":"https://blog.dywicki.pl/2005/08/22/zafascynowanie/","summary":"\u003cp\u003eZnowu ponad dwutygodniowa przerwa w notach.. Nic dziwnego, że liczba odwiedzin od czerwca ma tendencję spadkową. Dla zainteresowanych (na oko) czerwiec 413, lipiec 387, sierpień 285. Ale wracając do spraw związanych z programowaniem i od razu na wstępie tłumacząc tytuł notki - zafascynowanie narzędziami z Javy. Moje szczególne uznanie zdobył Struts oraz Hibernate. Jedno i drugie ma swój odpowiednik w PHP - Studs oraz Propel. Co do pierwszego: nic ciekawego, bo pod PHP 4, odnośnie drugiego - dopiero poznaję. :] Z tego co widziałem w pracy Hibernate do niektórych zastosowań jest znakomity, jak wypadnie Propel - to się okaże. Jedno co mnie martwi to brak wsparcia dla PDO i brak konkretnej odpowiedzi czy w końcu się ono pojawi. Mam nadzieję, że w końcu zostanie to wymuszone.. Ze Strutsa najbardziej mi się widzi walidacja formularzy poprzez configi, stosunkowo łatwa internacjonalizacja oraz beany. Mam jakieś ebooki odnośnie budowania aplikacji w nim, ale mószę jeszcze raz wrócić do nauki Javy, ponieważ wcześniej czytałem tą książkę bez dostępu do komputera, a wiadomo każdy przykład trzeba sprawdzić. ;) Najgorsze jest to, że wcześniej przerabiając TiJ miałem pomysły/koncepcje rozwiązania niektórych zadań, a teraz mam w głowie same pytajniki - \u0026ldquo;o co tam chodziło???\u0026rdquo;. W pracy, można powiedzieć, zaaklimatyzowałem się, pojawiają się dyskusje odnośnie przeglądarek itp.\u003c/p\u003e","title":"Zafascynowanie"},{"content":"Za jakość diagramu przepraszam :)\nNa przedstawionym diagramie widać 4 węzły. Pierwszy to użytkownik, który będzie wywoływał zdarzenia. Myślę, że jego zadań nie trzeba opisywać ;). Celowo operuję na ogólnikach aby nie zawężać Wam jak i sobie pola widzenia.\nPierwszy element dostarczany przez Thora to komponent. Każdy komponent posiada obiekt JavaScript, który komunikuje się z obserwatorem. Komponent przekazuje informacje o rodzaju zdarzenia. Jako parametr jest przekazywana zdefiniowana wcześniej wartość. Np. OnClick=”KliknietoMnie();” zostaje przekształcone na OnClick=IDentyfikator.call( onClick, KliknietoMnie()) powoduje to, że do obserwatora wędruje OnClick oraz KliknietoMnie.\nObiekt obserwatora ma za zadanie przekazać informację do serwera, którą zajmie się w dalszym ciągu framework. Obserwator jest bardzo ważnym elementem. Od jego działania zależy poprawność działania systemu. Obserwator musi rozróżnić operacje które ma zlecić do wykonania innym obiektom reprezentującym komponenty czy wysłać żądanie prosto do serwera.\nNota: czy rozsądniejsze by nie było stworzenie rozbudowanego zaplecza po stronie JS i pozwolić operować komponentom na sobie, a informacje do serwera wysyłać tylko po to żeby np. zapamiętać pozycję komponentu typu \u0026lsquo;sticky\u0026rsquo;?\nZ pewnością AJAX będzie miał za zadanie zwracać treści z bazy danych. Myślę, że będzie się to odbywało poprzez zmianę atrybutu datasource. Zostanie o tym powiadomiony obserwator, który automatycznie wyślę rządanie do serwera. Ten odpowiednio sparsuje rządanie oraz określi czy użytkownik posiada uprawnienia do pobrania określonej treści. Ostatnim elementem w łańcuchu, lecz najważniejszą jest samo PHP. Thor będzie musiał na początku wygenerować stronę wraz z zestawem początkowych komponentów. Dobrze by było gdyby mógł później wydawać polecenia Obserwatorowi, który dalej kazałby usuwać komponenty bądź je dodawać.\nGdzieś trzeba jeszcze zostawić miejsce na style, to znaczy będzie musiała starczyć zwykła zmiana cssa, ale w dobie CSS 2 oraz 3 to nie powinno stanowić problemu (poza IE).\n","permalink":"https://blog.dywicki.pl/2005/08/02/thor-omowienie-diagramu-sekwencji/","summary":"\u003cp\u003e\u003cstrong\u003eZa jakość diagramu przepraszam :)\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"kliknij aby powiększyć\" loading=\"lazy\" src=\"http://splatch.php.org.pl/_img/ds_m.jpg\"\u003eNa przedstawionym diagramie widać 4 węzły. Pierwszy to użytkownik, który będzie wywoływał zdarzenia. Myślę, że jego zadań nie trzeba opisywać ;). Celowo operuję na ogólnikach aby nie zawężać Wam jak i sobie pola widzenia.\u003c/p\u003e\n\u003cp\u003ePierwszy element dostarczany przez Thora to komponent. Każdy komponent posiada obiekt JavaScript, który komunikuje się z obserwatorem. Komponent przekazuje informacje o rodzaju zdarzenia. Jako parametr jest przekazywana zdefiniowana wcześniej wartość. Np. OnClick=”KliknietoMnie();” zostaje przekształcone na OnClick=IDentyfikator.call( onClick, KliknietoMnie()) powoduje to, że do obserwatora wędruje OnClick oraz KliknietoMnie.\u003c/p\u003e","title":"Thor omówienie diagramu sekwencji"},{"content":"Witam po sporej przerwie :).\nPiszę to o 23:23, tuż po ustawieniu budzika na 6:20, wiadomo - kto rano wstaje temu Pan Bóg daje. Wstałem dzisiaj po 5 i jak przystało na rasowego programistę czytałem w autobusie \u0026ldquo;Thinking in Java\u0026rdquo; w wydaniu trzecim. Po kilku dniach spędzonych z tą książką czuję się zagubiony. Przykładów jest sporo, a nie miałem okazji ich nawet uruchomić. Jak na razie nie miałem trudów z przyswojeniem wiadomości, okaże się jak zrozumiałem treść kiedy zacznę robić ćwiczenia. Tak czy siak tak łatwo się nie poddam. :)\nNa polsacie właśnie leci jakieś badziewie pod postacią VIP. Normalnie nie wiem skąd oni biorą takie denne seriale.\nCo z Thorem? No jak na razie po pracy jestem zbyt wypompowany żeby wyłuskać z siebie cokolwiek entuzjazmu do kodowania. W międzyczasie przeczytałem rozdział o projektowaniu aplikacji z TiJ. Na podstawie porad, które tam wyczytałem postaram się przeanalizować budowę Thora raz jeszcze. No zadanie będę miał nieco utrudnione dlatego, że to nie jest \u0026lsquo;zwykła\u0026rsquo; aplikacja OOP tylko framework nastawiony na wykorzystanie komponentów. Po przerobieniu parsera na kształt tego z Prado mam problemy z połączeniem całości w logiczny zespół, to znaczy może inaczej - nie wiem w którym miejscu tworzyć obiekty komponentów na podstawie uzyskanej z parsera tablicy, która ma kształt drzewa. To znaczy:\nTree[korzeń][numer] = array(type,attr,childs); gdzie korzeń to kolejne komponenty występujace w dokumencie:\n\u0026lt;!-- tutaj nagłówki meta itp. --\u0026gt; \u0026lt;thor:panel\u0026gt; treść 1 \u0026lt;/thor:panel\u0026gt; \u0026lt;thor:panel\u0026gt; treść 2 \u0026lt;/thor:panel\u0026gt; tablica Tree będzie w tym przypadku wyglądać tak: Tree[0][0] = array(panel); Tree[1][0] = array(panel);\nW przypadku gdy komponent posiada dzieci są one dodawane poprzez referencję pod kluczem childs. Po var_dump-ie widać ładne drzewko.\nAby wyświetlić całe drzewo wystarczy zacząć od Tree[n][\u0026lsquo;childs\u0026rsquo;]\nPodczas prac miałem na prawdę spore problemy z uzyskaniem tego wyniku. Najpierw nie mogłem stworzyć odpowiedniej referencji następnie były problemy z tagiem prop:atrybut\u0026lt;/prop:atrybut\u0026gt;. Teraz kolejnym problemem jest uzyskiwanie wnętrza komponentu. Gdy wewnątrz komponentu znajduje się inny uzyskany kod jest znacznie okrojony, a dokładniej pozbawiony znajdujących się wewnątrz niego dzieci. Będę musiał zajrzeć do Prado i podejrzeć jak to jest rozwiązane. :)\nWracają do lektur, które przerabiam - po TiJ czeka na mnie \u0026ldquo;Java. Aplikacje bazodanowe, najlepsze rozwiązania\u0026rdquo; oraz \u0026ldquo;Java. Programowanie sieciowe\u0026rdquo;. Wszystkie książki pożyczyłem od kolegów z pracy. Dodatkowo obok mnie siedzi osoba zajmująca się Javą więc w razie problemów mam do kogo się zwracać.\nObecnie na pierwszy plan przed Thora wychodzi LiveChat, który piszę. Jest to poniekąd typowy chat, lecz nie mogę zdradzić póki co większej ilości informacji ponieważ ktoś może mnie uprzedzić z rozwiazaniem i będę na przegranej pozycji :).\nW pracy jestem zmuszony do pracy na Auroksie którego zaczynam powoli mieć dość. Raz - problemy z Xami, dwa ogólna niechęć do tej dystrybucji. Zaczynam się coraz bardziej zastanawiać nad Slackware\u0026rsquo;m.\nJeśli już robię notkę zbiorczą to wspomnę, że zmartwychwstało OPB (Open Powe Board). Miejmy nadzieję, że czasy anarchii już nie wrócą. Mam do siebie spory żal za to, że zaniedbuję Pomocnik XUL, na prawdę nie mam usprawiedliwienia, kurde leń ze mnie i tyle. :(\nPS. Jedyną rzeczą na która mogę na prawdę narzekać w Bydgoszczy jest jedzenie, a właściwie jego częsty brak w odpowiedniej ilości i jakości\u0026hellip;\n","permalink":"https://blog.dywicki.pl/2005/07/19/nota-zbiorcza/","summary":"\u003cp\u003eWitam po sporej przerwie :).\u003c/p\u003e\n\u003cp\u003ePiszę to o 23:23, tuż po ustawieniu budzika na 6:20, wiadomo - kto rano wstaje temu Pan Bóg daje. Wstałem dzisiaj po 5 i jak przystało na rasowego programistę czytałem w autobusie \u0026ldquo;Thinking in Java\u0026rdquo; w wydaniu trzecim. Po kilku dniach spędzonych z tą książką czuję się zagubiony. Przykładów jest sporo, a nie miałem okazji ich nawet uruchomić. Jak na razie nie miałem trudów z przyswojeniem wiadomości, okaże się jak zrozumiałem treść kiedy zacznę robić ćwiczenia. Tak czy siak tak łatwo się nie poddam. :)\u003c/p\u003e","title":"Nota zbiorcza"},{"content":"Właśnie jestem w pracy. Jest ok, podoba mi się tutaj. Wczoraj pospacerowałem sobie po Bydgoszczy (od PKSu do Czyżówka), kto wie jaki to jest odcinek ten ma wyobrażenie jak bardzo się błąkałem. ;) Znalazłem pokój na poddaszu, normalnie super, prawie jak w domu. Niestety problem jest z netem, bo ulica przy której mieszkam to póki co gruntówka i nie ma jak podciągnąć kabla. Pozostaje mi chyba radiówka\u0026hellip; ale na to trzeba poczekać. Póki co mam internet na miejscu (czyt. w biurze).\n","permalink":"https://blog.dywicki.pl/2005/06/30/praca/","summary":"\u003cp\u003eWłaśnie jestem w pracy. Jest ok, podoba mi się tutaj. Wczoraj pospacerowałem sobie po Bydgoszczy (od PKSu do Czyżówka), kto wie jaki to jest odcinek ten ma wyobrażenie jak bardzo się błąkałem. ;) Znalazłem pokój na poddaszu, normalnie super, prawie jak w domu. Niestety problem jest z netem, bo ulica przy której mieszkam to póki co gruntówka i nie ma jak podciągnąć kabla. Pozostaje mi chyba radiówka\u0026hellip; ale na to trzeba poczekać. Póki co mam internet na miejscu (czyt. w biurze).\u003c/p\u003e","title":"Praca"},{"content":"Jako, że od tego poniedziałku rozpoczynam pracę nie będę mógł tyle czasu poświęcać Thorowi. Dodatkowym utrudnieniem będzie brak kompa po pracy. To nie koniec trudności. Po zciągnięciu komputera do Bydgoszczy (gdzie znalazłem pracę) będę miał problem z internetem. Ogólnie trudno mi powiedzieć coś więcej niż to, że mam zacząć prace. Poważnie zapowiada się hardokorowy tydzień, nie tylko ze względu na to, że będę wstawać rano. ;)\nPierwsze wrażenia z biura pozytywne. Nie mogę się doczekać pierwszego zadania, słowem zżera mnie ciekawość\u0026hellip; o tym czy Bydgoszcz zmieni w moich wizerunek z brzydkiego miasta na gorszą lub milszą mieścinę będę pisał\u0026hellip; (za jakiś czas), o wrażeniach z pracy i o pierwszym zadaniu powiem tyle, ile będę mógł (test już miałem!).\nCo do Thora. Totalnie zmieniła się budowa parsera. Obecny, jeszcze nie do końca sprawny przechowuje obiekty do samego wyświetlenia aplikacji, czyli zmiany wykonywane z poziomu aplikacji nie będą problemem, a nawet te z poziomu szablonu winny być przeprowadzane względnie łatwo. Stary parser zaraz po znalezieniu komponentu parsował go, dodatkowo nie miał możliwości zagnieżdżania komponentów wewnątrz siebie, co było bardzo poważną wadą. Długie godziny spędzone nad Prado jednak zaowocowały nowym parserem (swoją drogą zasada działania bardzo zbliżona). Mam nadzieję, że uda mi się zaaplikować cache do parsera, myślę też o tym, czy nie zapisywać \u0026lsquo;względnie\u0026rsquo; skompilowanych szablonów. Przetrawię to w tym tygodniu.. co do buforowania obiektów - myślę, że starczy serializowanie obiektu na podstawie ID i zapisywanie w pliku\u0026hellip;\nGarść koncepcji rzucę na pewno za jakiś czas, póki co przestudiuję raz jeszcze wzorce projektowe.\n","permalink":"https://blog.dywicki.pl/2005/06/26/przerwa/","summary":"\u003cp\u003eJako, że od tego poniedziałku rozpoczynam pracę nie będę mógł tyle czasu poświęcać Thorowi. Dodatkowym utrudnieniem będzie brak kompa po pracy. To nie koniec trudności. Po zciągnięciu komputera do Bydgoszczy (gdzie znalazłem pracę) będę miał problem z internetem. Ogólnie trudno mi powiedzieć coś więcej niż to, że mam zacząć prace. Poważnie zapowiada się hardokorowy tydzień, nie tylko ze względu na to, że będę wstawać rano. ;)\u003c/p\u003e\n\u003cp\u003ePierwsze wrażenia z biura pozytywne. Nie mogę się doczekać pierwszego zadania, słowem zżera mnie ciekawość\u0026hellip; o tym czy Bydgoszcz zmieni w moich wizerunek z brzydkiego miasta na gorszą lub milszą mieścinę będę pisał\u0026hellip; (za jakiś czas), o wrażeniach z pracy i o pierwszym zadaniu powiem tyle, ile będę mógł (test już miałem!).\u003c/p\u003e","title":"Przerwa"},{"content":"Thor, szczegóły no.2\nZ wpisów zamieszczanych tutaj można wywnioskować, że pracuję tylko nad Thorem. Nie zaprzeczam, że poświęcam mu dużo czasu, można powiedzieć, że aż za wiele.\nChciałem rzucić garścią informacji – co dodałem.\nZaaplikowane różne wersje językowe na poziomie wyjątków, czyli przy pojawieniu się jakiegoś problemu wystarczy użyć: throw new Exception( LanguageContainer(‘Blad skladni’, ’JakisTamKominukat’) );\nMyślę nad dodaniem do komponentów źródeł danych, to znaczy – w kodzie dawałoby się tylko: \u0026lt;thor:Komponent datasource=”tutaj_jakies_zrodlo” /\u0026gt; Dalsze pomysły związane z komponentami to możliwość ustawiania atrybutów HTML takich jak style, border, class aby maksymalnie uprościć ich budowę.\nW fazie testów jest też coś na kształt magazynu zmiennych. Można powiedzieć, że jest to klasa, która ma za zadanie przy użyciu sesji utrzymywać dane, aby same komponenty wiedziały co z nimi się wcześniej stało. Ot, przykładowo czy panel ma być ukryty czy też widoczny.\nWpadłem na niebanalny pomysł z CMSem – pomyślałem, ze skoro Thor staje się coraz bardziej komponentowy to czemu by nie zainwestować w coś na kształt panelu treści? Jedyne, co trzeba zrobić to określić skąd pobierać dane (tutaj miejsce dla źródeł danych) oraz typ klasy (news, artykuł itp.). Planuję użyć do uzyskania odpowiedniego efektu wzorca stratega, gdzie poszczególne klasy we własnym zakresie aplikują metodę zwracającą kod.\nJeśli wszystko się pozytywnie rozwinie to za jakiś czas wrzucę jakąś prezentację.\nChciałbym też wspomnieć, że znalazłem pracę.:)\n","permalink":"https://blog.dywicki.pl/2005/06/23/thor-plany-i-rozterki/","summary":"\u003cp\u003eThor, szczegóły no.2\u003c/p\u003e\n\u003cp\u003eZ wpisów zamieszczanych tutaj można wywnioskować, że pracuję tylko nad Thorem. Nie zaprzeczam, że poświęcam mu dużo czasu, można powiedzieć, że aż za wiele.\u003c/p\u003e\n\u003cp\u003eChciałem rzucić garścią informacji – co dodałem.\u003c/p\u003e\n\u003cp\u003eZaaplikowane różne wersje językowe na poziomie wyjątków, czyli przy pojawieniu się jakiegoś problemu wystarczy użyć: \u003ccode\u003ethrow new Exception( LanguageContainer(‘Blad skladni’, ’JakisTamKominukat’) );\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eMyślę nad dodaniem do komponentów źródeł danych, to znaczy – w kodzie dawałoby się tylko: \u003ccode\u003e\u0026lt;thor:Komponent datasource=”tutaj_jakies_zrodlo” /\u0026gt;\u003c/code\u003e Dalsze pomysły związane z komponentami to możliwość ustawiania atrybutów HTML takich jak style, border, class aby maksymalnie uprościć ich budowę.\u003c/p\u003e","title":"Thor, plany i rozterki"},{"content":"Prace nad Thorem posunęły się do przodu. Mam teraz podstawowe klasy – TComponent, TParser (parser komponentów), ConfigParser i fabrykę do niego. Przy okazji chciałbym się pochwalić rozwiązaniem, jakie wymyśliłem.\nPodobnie jak w Prado każdy komponent to klasa, która ma określone metody i atrybuty. W We wcześniej wymienionym frameworku w pliku konfiguracyjnym komponentu definiuje się metody do pobierania/ustawiania atrybutów poprzez wpisanie w pliku specyfikacji danego komponentu. U mnie wygląda to nieco inaczej – klasa TComponent, z której dziedziczą wszystkie pozostałe komponenty ma zaaplikowaną metodę __call(), która umożliwia tworzenie ‘wirtualnych metod’. Tzn. metod, które nie istnieją w klasie macierzystej.\nMoże przedstawię fragment pliku konfiguracyjnego:\n[properts] Action = text Method = text DefaultLogin = text DefaultPassword = text [events] OnClick OnSubmit [Action] get = true set = true [Method] get = true Teraz, chyba będzie łatwiej zrozumieć ;), wszystkie sekcje, które rozpoczynają się od wielkiej litery traktowane są jak atrybuty komponentu. Sekcja Method odnosi się do atrybutu Komponent::$Method. Teraz, gdy w sekcji Metod jest ustawiona dyrektywa get na true będzie można odwoływać się w kodzie do tego atrybutu poprzez getMethod w szablonie.\nWiem, że to troszkę niejasne, ale kiedy uda mi się stworzyć jakiś działający przykład to nie omieszkam pokazać. Przykładowy kod szablonu to:\n\u0026lt;thor:Komponent ID=”C1” params=\u0026#34;true\u0026#34;\u0026gt;Tutaj jakoś kod\u0026lt;/thor:komponent\u0026gt; tutaj kod html \u0026lt;thor:Inny ID=\u0026#34;C2\u0026#34; onclick=\u0026#34;doSth();\u0026#34; /\u0026gt; ","permalink":"https://blog.dywicki.pl/2005/06/19/thor/","summary":"\u003cp\u003ePrace nad Thorem posunęły się do przodu. Mam teraz podstawowe klasy – TComponent, TParser (parser komponentów), ConfigParser i fabrykę do niego. Przy okazji chciałbym się pochwalić rozwiązaniem, jakie wymyśliłem.\u003c/p\u003e\n\u003cp\u003ePodobnie jak w Prado każdy komponent to klasa, która ma określone metody i atrybuty. W We wcześniej wymienionym frameworku w pliku konfiguracyjnym komponentu definiuje się metody do pobierania/ustawiania atrybutów poprzez wpisanie w pliku specyfikacji danego komponentu. U mnie wygląda to nieco inaczej – klasa TComponent, z której dziedziczą wszystkie pozostałe komponenty ma zaaplikowaną metodę __call(), która umożliwia tworzenie ‘wirtualnych metod’. Tzn. metod, które nie istnieją w klasie macierzystej.\u003c/p\u003e","title":"Thor - postępy"},{"content":"Projekt, o którym wspomianłem wcześniej został nazwany. Inspiracją nazwy był Odin beli. Sięgnąłem do historii o wikingach i znalazłem tam inne bóstwo - Thora. Silniki swoich poprzednich aplikacji nazywałem imieniem Sachmet - egipskiego bóstwa wojny i płodności. Thor w mitologii nordyckiej jest bogiem burz błyskawic jak również rolnictwa. Thor patronował ognisku domowemu i małżeństwu. [ 1]\nProjekt postaram się tworzyć przy wykorzystaniu tego, co przeczytałem w książce o wzorcach projektowych. Podstawą będzie ogólny schemat, który pozwoli przejść od ogółu do szczegółu. Na pewno postaram się przed napisaniem czegokolwiek stworzyć diagram UML. Zacząłem pisać, następnie stworzyłem diagram. Dyskutując o zapisanym rozwiązaniu znalazłem w nim nieścisłość. Obiekt LanguageContainter będzie zawierał poszczególne języki (może zajść potrzeba odwołania się do domyślnego języka - np. z angielskiego do polskiego). Całość oparta jest na statycznej tablicy languages. Przy próbie użycia języka trzeba się odwołać do kontenera - LanguageContainer::getLanguage(\u0026lsquo;PL\u0026rsquo;,\u0026lsquo;Main\u0026rsquo;) i następnie operować na zwróconym obiekcie. Gdzie zatem nieścisłość? Po wywołaniu wcześniejszego kodu kontener przy wywołaniu LanguageContainer::getLanguage(\u0026lsquo;PL\u0026rsquo;,\u0026lsquo;User\u0026rsquo;) zwróci obiekt, który utworzył wcześniej, ponieważ w tablicy languages jest już indeks PL. Rozwiązanie te dyskryminuje też nieco jego obszerność.\nWydaje się, że odwołanie Language::getMessage(\u0026lsquo;Main\u0026rsquo;,\u0026lsquo;Section\u0026rsquo;) jest prostsze i szybsze. Niestety utrudnia ono korzystanie z dwu języków podczas jednego żądania..\nNotes [ 1] Na podstawie http://pl.wikipedia.org/wiki/Thor\n","permalink":"https://blog.dywicki.pl/2005/06/15/thor-bostwo-w-powijkach/","summary":"\u003cp\u003eProjekt, o którym wspomianłem wcześniej został nazwany. Inspiracją nazwy był Odin beli. Sięgnąłem do historii o wikingach i znalazłem tam inne bóstwo - Thora. Silniki swoich poprzednich aplikacji nazywałem imieniem Sachmet - egipskiego bóstwa wojny i płodności. Thor w mitologii nordyckiej jest bogiem burz błyskawic jak również rolnictwa. Thor patronował ognisku domowemu i małżeństwu. [ \u003ca href=\"#pnote-15-1\"\u003e1\u003c/a\u003e]\u003c/p\u003e\n\u003cp\u003eProjekt postaram się tworzyć przy wykorzystaniu tego, co przeczytałem w książce o wzorcach projektowych. Podstawą będzie ogólny schemat, który pozwoli przejść \u003cstrong\u003eod ogółu do szczegółu\u003c/strong\u003e. Na pewno postaram się przed napisaniem czegokolwiek stworzyć diagram UML. \u003cimg alt=\"kliknij aby powiększyć\" loading=\"lazy\" src=\"/images/Class_Diagram2_m.png\"\u003eZacząłem pisać, następnie stworzyłem diagram. Dyskutując o zapisanym rozwiązaniu znalazłem w nim nieścisłość. Obiekt LanguageContainter będzie zawierał poszczególne języki (może zajść potrzeba odwołania się do domyślnego języka - np. z angielskiego do polskiego). Całość oparta jest na statycznej tablicy languages. Przy próbie użycia języka trzeba się odwołać do kontenera - LanguageContainer::getLanguage(\u0026lsquo;PL\u0026rsquo;,\u0026lsquo;Main\u0026rsquo;) i następnie operować na zwróconym obiekcie. Gdzie zatem nieścisłość? Po wywołaniu wcześniejszego kodu kontener przy wywołaniu LanguageContainer::getLanguage(\u0026lsquo;PL\u0026rsquo;,\u0026lsquo;User\u0026rsquo;) zwróci obiekt, który utworzył wcześniej, ponieważ w tablicy languages jest już indeks PL. Rozwiązanie te dyskryminuje też nieco jego obszerność.\u003c/p\u003e","title":"Thor, bóstwo w powijkach"},{"content":" Złap najbliższą książkę. Otwórz ją na 123 stronie. Znajdź piąte zdanie. Opublikuj je na swoim blogu razem z tą instrukcją. Nie szukaj najfajniejszej książki jaką można znaleźć. Użyj tej, która faktycznie leży najbliżej Ciebie. Najbliżej mnie leży książka Programowanie zorientowane obiektowo. Wzorce projektowe autorstwa Alana Shalloway\u0026rsquo;a oraz Jamesa Trotta. Piąte zdanie na 123 stronie wygląda tak:\nWzorzec mostu pozwala mi rozumieć przez implementację wszystko to, co istnieje \u0026ldquo;na zewnątrz\u0026rdquo; moich obiektów i jest przez nie używane.\nZobacz również http://exsite.edigo.pl/index.php/2005/06/11/114-jogger-cytat-kolejna-zabawa-blogowa http://devblog.strefaphp.net/?postid=87\n","permalink":"https://blog.dywicki.pl/2005/06/12/piate-zdanie/","summary":"\u003col\u003e\n\u003cli\u003eZłap najbliższą książkę.\u003c/li\u003e\n\u003cli\u003eOtwórz ją na 123 stronie.\u003c/li\u003e\n\u003cli\u003eZnajdź piąte zdanie.\u003c/li\u003e\n\u003cli\u003eOpublikuj je na swoim blogu razem z tą instrukcją.\u003c/li\u003e\n\u003cli\u003eNie szukaj najfajniejszej książki jaką można znaleźć. Użyj tej, która faktycznie leży najbliżej Ciebie.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eNajbliżej mnie leży książka \u003cstrong\u003eProgramowanie zorientowane obiektowo. Wzorce projektowe\u003c/strong\u003e autorstwa Alana Shalloway\u0026rsquo;a oraz Jamesa Trotta. Piąte zdanie na 123 stronie wygląda tak:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWzorzec mostu pozwala mi rozumieć przez implementację wszystko to, co istnieje \u0026ldquo;na zewnątrz\u0026rdquo; moich obiektów i jest przez \u003cem\u003enie używane\u003c/em\u003e.\u003c/p\u003e","title":"Piąte zdanie"},{"content":"Jako, że skończyłem szkołę, zdałem egzamin dyplmowy czeka mnie przekroczenie progu dorosłości i wejście na rynek pracy. Już pojawiła się oferta odbycia stażu absolwenckiego (za śmieszne pieniądze), ale nie rezygnuję i szukam dalej. Być może, ktoś (czyt. jakaś firma) zainwestuje we mnie i rozwój moich zdolności?\nW międzyczasie postaram się zająć planowaniem swojego frameworka (wszycy mają je, mam i ja!), bo CMS skończony/zawieszony. Przyglądałem się bliżej kilku aplikacjom. Moje zainteresowanie wzbudziło Prado. Gdy spojrzałem na przykład loginClicked od razu mi się skojarzyło delphi. Przyglądając się dalej kontrolkom doszedłem do wniosku, że to miks z ASP. Wpływ na mnie zaczyna też wywierać książka o wzorcach. Zaczynam patrzeć na obiekty nie jak na reprezentację klas tylko jak na określone instnienia/byty, które wiedzą co mają zrobić (w jednym rozdziale padło pojęcie \u0026lsquo;inteligentne dane, które mi się bardzo spodobało).\nSwoje parę groszy wtrącił również Seth i Carbon[ 1] oraz system klas treści znany z Ez Publisha. Na prawdę trudno mi określić w jakim kierunku się udam.. póki co to wymieszanie CMSa i frameworka.\nPodstawowe cele, które sobie stawiam: - łatwość rozszeżania o nowe moduły i akcje - parser plików konfiguracyjnych i precontroller jak w projekcie NuLLa[ 2] - budowa podobna do Prado[ 3] - użycie JPSpana[ 4] - własny system szablonów na pewno nie klon Smarty, raczej coś na podobę Savanta [ 5]\nWszytko się okaże, jak na razie to tylko koncepcje.\nNotes [ 1] http://www.binarychoice.pl/item/28/\n[ 2] http://nulldev.users.idn.net.pl/?p=38\n[ 3] http://www.xisc.com/\n[ 4] http://jpspan.sourceforge.net\n[ 5] http://phpsavant.com/\n","permalink":"https://blog.dywicki.pl/2005/06/08/plany-na-najbliszy-miesic/","summary":"\u003cp\u003eJako, że skończyłem szkołę, zdałem egzamin dyplmowy czeka mnie przekroczenie progu dorosłości i wejście na rynek pracy. Już pojawiła się oferta odbycia stażu absolwenckiego (za śmieszne pieniądze), ale nie rezygnuję i szukam dalej. Być może, ktoś (czyt. jakaś firma) zainwestuje we mnie i rozwój moich zdolności?\u003c/p\u003e\n\u003cp\u003eW międzyczasie postaram się zająć planowaniem swojego frameworka (wszycy mają je, mam i ja!), bo CMS skończony/zawieszony. Przyglądałem się bliżej kilku aplikacjom. Moje zainteresowanie wzbudziło Prado. Gdy spojrzałem na przykład loginClicked od razu mi się skojarzyło delphi. Przyglądając się dalej kontrolkom doszedłem do wniosku, że to miks z ASP. Wpływ na mnie zaczyna też wywierać książka o wzorcach. Zaczynam patrzeć na obiekty nie jak na reprezentację klas tylko jak na określone instnienia/byty, które wiedzą co mają zrobić (w jednym rozdziale padło pojęcie \u0026lsquo;inteligentne dane, które mi się bardzo spodobało).\u003c/p\u003e","title":"Plany na najbliższy miesiąc"},{"content":"Diziaj znajomy grafik poprosił mnie o stworzenie skryptu, który ma wykrywać przeglądarkę i w zależności od nazwy przekierowywać na odpowiednią stronę. Nieco rozszeżyłem swoje zadanie tworząc obiekt Java Script, który zwraca zarówno nazwę jak i wersję programu, z którego korzysta internauta. Obiekt wykrywa następujące programy: Internet Exploler, Mozilla / Mozilla Firefox, Opera. Całość opiera się na obiekcie navigator dostarczanym przez JS. Zainteresowanych zapraszam do zapoznania się z kodem.\n/** * Wykrywacz przegladarki * autor: Łukasza Dywicki * * licencja: freeware * 7.06.2005 **/ /** * @var array * Adresy, gdzie beda kierowane poszczegolne przegladarki **/ var locations = new Array(); locations['IE'] = 'index_ie.html'; locations['Firefox'] = 'index_ff.html'; locations['undefined'] = 'index_inne.html'; /** * @var object * obiekt do wykrywania nazwy i wersji przegladarki * Uzycie: * \u0026lt;code\u0026gt; * p = browser.metoda() * \u0026lt;/code\u0026gt; **/ var browser = { /** * Metoda zwracajaca nazwe przegladarki * @return string **/ getName : function() { switch(navigator.appName){ case 'Netscape': if( navigator.userAgent.indexOf('Firefox') ) { this.name = 'Firefox'; } else { this.name = 'Mozilla'; } break; case 'Microsoft Internet Explorer': this.name = 'IE'; break; case 'Opera': this.name = 'Opera'; break; defalut: this.name = 'undefined'; break; } return this.name; }, /** * Metoda zwracajaca wersje przegladarki * @return string|integer **/ getVersion : function() { if( !this.name ) { this.getName(); } if( this.name == 'Mozilla' ) { this.version = parseFloat(navigator.appVersion); } else if( this.name == 'Firefox' ) { temp=navigator.userAgent.split('Firefox/'); this.version = parseFloat(temp[1]); } else if( this.name == 'IE' ) { temp=navigator.appVersion.split(\u0026quot;MSIE\u0026quot;) this.version = parseFloat(temp[0]); } else if( this.name == 'Opera' ) { this.version = parseFloat(navigator.appVersion); } else { this.version = 'undefined'; } return this.version; } } browser.getVersion(); /** * Funkcja ktora przekierowywuje **/function detectBrowser() { n = browser.name; location.href = locations[n] ? locations[n] : locations['undefined']; }\n","permalink":"https://blog.dywicki.pl/2005/06/08/wykrywanie-przegldarki/","summary":"Diziaj znajomy grafik poprosił mnie o stworzenie skryptu, który ma wykrywać przeglądarkę i w zależności od nazwy przekierowywać na odpowiednią stronę. Nieco rozszeżyłem swoje zadanie tworząc obiekt Java Script, który zwraca zarówno nazwę jak i wersję programu, z którego korzysta internauta. Obiekt wykrywa następujące programy: Internet Exploler, Mozilla / Mozilla Firefox, Opera.\nCałość opiera się na obiekcie \u003cstrong\u003enavigator\u003c/strong\u003e dostarczanym przez JS. Zainteresowanych zapraszam do zapoznania się z kodem.","title":"Wykrywanie przeglądarki"},{"content":"Wspominałem wcześniej o książce pod tytułem PostgreSQL, którą pożyczyłem od znajomego. Jak się okazało jej pełny tytuł brzmi PostgreSQL. Biblioteka problemów.\nPo zagłębieniu sięw szczegóły doszedłem do wniosku, że to świetny system bazodanowy. Sam się zacząłem dziwić dlaczego tak mało ludzi. Postgres dostarcza wielu możliwości, które są imponujące. Np. obsługuje widoki, które MySQL dopiero wprowadza od wersji 5.1, ma transakcje, znowu MySQL dopiero to udostępnia w wersji 4.1.\nSłowem świetna baza. Udało mi się stworzyć własny widok, ba nawet kursor! Postanowiłem – przyszłe aplikacje zaczynam przystosowywać do dobrych systemów bazodanowych. Koniec z prostymi zapytaniami SELECT i samymi złączeniami.\nMoje zainteresowanie wzbudził również Firebird. Czytałem gdzieś o tym systemie i wydawał się interesujący z perspektywy MySQL, a teraz po bliższym poznaniu Postgresa wydaje się jeszcze ciekawszy. Nie mniej musi nieco poczekać… czasu tak mało, że trudno znaleźć chwilkę na poczytanie (znowu czytanie w autobusie).\n","permalink":"https://blog.dywicki.pl/2005/06/05/postgresql/","summary":"\u003cp\u003e\u003cimg alt=\"PostgrSQL\" loading=\"lazy\" src=\"/images/postgresql.gif\"\u003eWspominałem wcześniej o książce pod tytułem PostgreSQL, którą pożyczyłem od znajomego. Jak się okazało jej pełny tytuł brzmi \u003cstrong\u003ePostgreSQL. Biblioteka problemów.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003ePo zagłębieniu sięw szczegóły doszedłem do wniosku, że to świetny system bazodanowy. Sam się zacząłem dziwić dlaczego tak mało ludzi. Postgres dostarcza wielu możliwości, które są imponujące. Np. obsługuje widoki, które MySQL dopiero wprowadza od wersji 5.1, ma transakcje, znowu MySQL dopiero to udostępnia w wersji 4.1.\u003c/p\u003e\n\u003cp\u003eSłowem świetna baza. Udało mi się stworzyć własny widok, ba nawet kursor! Postanowiłem – przyszłe aplikacje zaczynam przystosowywać do dobrych systemów bazodanowych. Koniec z prostymi zapytaniami SELECT i samymi złączeniami.\u003c/p\u003e","title":"PostgreSQL"},{"content":"Cóż za piękny dzień dziecka! Pada od rana, z małymi przerwami, żeby wiatr mógł sobie pohulać bez slalomu pomiędzy kroplami.\nW taki właśnie dzień wybrałem się w przymusowe odwiedziny do siostry. Oddałem jej tablice matematyczne, które pożyczyła od koleżanki na moją maturę. Podróż nic miłego, ponad 90 minut w autobusie, w którym nie można wygodnie usiąść (mam za długie nogi?). Jako, że siostra udawała się zaraz na wykłady to nie gościłem zbyt długo u niej. 20 minut i kolejny autobus, w którym spędziłem kolejne 90 minut. Szczęście, że nie było tak ciepło jak w piątek, bo bym wyparował z niego. ;)\nSpytasz zapewne czytelniku jaki to ma (cenzura) związek z wzorcami projektowymi i UMLem? 90+90 to 180, czyli 3 godziny w autobusie z książką. Po ostatnim razie, gdy wracałem z książką na temat PostgreSQL postanowiłem nie tracić czasu na patrzenie się przez okno. Przeczytałem blisko 80 stron interesujących wywodów.\nDowiedziałem się w końcu jak się projektuje diagramy UML, które są wykorzystywane, aby obrazować powiązania w kodzie. Książka dość rozległa. Zaczyna się od programowania strukturalnego i dekompozycji funkcjonalnej (o jak to mądrze brzmi!) i rysowania figur poprzez wykład na uczelni, wykrawanie różnych kształtów w blasze po wzorce architektoniczne. Spektrum problemów jest bardzo szerokie i sprzyja wyjaśnieniu problemów. Muszę przyznać, że styl, w jakim jest napisana książka bardzo mi się spodobał. Obrazowe przedstawienie problemu i rozwiązania.\nNo i wreszcie się dowiedziałem jak odczytać diagram sekwencji. Właśnie zacząłem poszukiwania jakiego programu do tworzenia diagramów w UMLu, ale jak na razie trafiam na jakieś mało funkcjonalne bądź zrobione w Javie, których interfejs po prostu mnie odrzuca. Może ktoś coś poleci? Ja zaczynam studiowanie wzorca fasady..\n","permalink":"https://blog.dywicki.pl/2005/06/01/wzorce-projektowe-i-uml/","summary":"\u003cp\u003eCóż za piękny dzień dziecka! Pada od rana, z małymi przerwami, żeby wiatr mógł sobie pohulać bez slalomu pomiędzy kroplami.\u003cbr\u003e\n\u003cimg alt=\"Książka, którą czytałem w autobusie :)\" loading=\"lazy\" src=\"/images/ksiazka.gif\"\u003eW taki właśnie dzień wybrałem się w przymusowe odwiedziny do siostry. Oddałem jej tablice matematyczne, które pożyczyła od koleżanki na moją maturę. Podróż nic miłego, ponad 90 minut w autobusie, w którym nie można wygodnie usiąść (mam za długie nogi?). Jako, że siostra udawała się zaraz na wykłady to nie gościłem zbyt długo u niej. 20 minut i kolejny autobus, w którym spędziłem kolejne 90 minut. Szczęście, że nie było tak ciepło jak w piątek, bo bym wyparował z niego. ;)\u003c/p\u003e","title":"Wzorce projektowe i UML"},{"content":"Nadszedł ten czas - pierwsze \u0026ldquo;poważne\u0026rdquo; boje ze studiem. Postanowiłem zacząć od aplikacji konsolowych, ponieważ jest przy nich najmniej problemów, nie ma otoczki graficznej, formularzy, zasobów, jest tylko sam kod. Z resztą trzy miesiące temu udało mi się ściągnąć VS 2005 C# Express i troszkę się nim nacieszyłem (czyt. do formatu). Wtedy to właśnie udało mi się napisać (a bardziej zrobić) program okienkowy który ładował dane do XMLa. Nie było to nic ambitnego, ponieważ wszytko odbywało się poprzez (poniekąd) ręczne wpisanie kodu do pliku (czyli +\u0026ldquo;zmienna+\u0026rdquo; i tak dalej). Słowem nic specjalnego, zakręcony formularz i zero funkcjonalności.\nTym razem moje ambicje sięgały wyżej niż witaj świecie. Chciałem napisać witaj łukaszu! :) Ten jakże odległy szczyt udało mi się osiągnąć dwiema podobnymi drogami - przy pomocy J# i C#. Podstawy Javy mam (nikłe bo nikłe ale są), jak wyżej pisałem C# to też dla mnie nie pierwszyzna ;) poszło dość szybko. Niestety nie dałem rady zrobić tego w VB i C++, ale jest czas.\nZacząłem od C#. Pamiętałem, żeby nie używać strzałeczek bo to nie php. Trzeba było się przesiąść na kropeczki. Pamiętałem że interesująca mnie klasa (?) to System.Console. No trudno byłoby zapomnieć - już na samym początku została dołączona. Stąd było już blisko ReadLine, Write i znowu Read. W najbliższym czasie w programie nauczania C# liczenie pola i obwodu prostokąta.\nZ J# poszło mi szybciej niż myślałem. Nazewnictwo metod identyczne, jedyna różnica to początek programu. W dalszej części do oglądnięcia kody programów.\nKsiążkę do ASP mam.. tylko, że ASP Kompendium to nie jest tytuł pierwszej świeżości. Będzie trzeba odłożyć na jakiś porządny tytuł (ostatnie pieniądze poszły na świętowanie z okazji zdania matury).\nJ# package PierwszaAplikacja; public class Program { public static void main(String[] args) { System.Console.Write(\u0026#34;Wpisz swoje imie: \u0026#34;); String text = System.Console.ReadLine(); System.Console.Write(\u0026#34;Witaj \u0026#34; + text + \u0026#34;!\\n\u0026#34; + \u0026#34;Wcisnij dowolny klawisz aby zakonczyc dzialanie aplikacji\u0026#34;); System.Console.ReadKey(); } } C# using System; namespace PierwszaAplikacja { class Program { static void Main(string[] args) { System.Console.Write(\u0026#34;Wpisz swoje imie: \u0026#34;); String text = System.Console.ReadLine(); System.Console.Write(\u0026#34;Witaj \u0026#34;+text+\u0026#34;\\n\u0026#34;+ \u0026#34;Wcisnij dowolny klawisz aby zakonczyc dzialanie aplikacji\u0026#34;); System.Console.ReadKey(); } } } ","permalink":"https://blog.dywicki.pl/2005/05/30/visual-studio-pierwsze-aplikacje/","summary":"\u003cp\u003eNadszedł ten czas - pierwsze \u0026ldquo;poważne\u0026rdquo; boje ze studiem. Postanowiłem zacząć od aplikacji konsolowych, ponieważ jest przy nich najmniej problemów, nie ma otoczki graficznej, formularzy, zasobów, jest tylko sam kod. Z resztą trzy miesiące temu udało mi się ściągnąć VS 2005 C# Express i troszkę się nim nacieszyłem (czyt. do formatu). Wtedy to właśnie udało mi się napisać (a bardziej zrobić) program okienkowy który ładował dane do XMLa. Nie było to nic ambitnego, ponieważ wszytko odbywało się poprzez (poniekąd) ręczne wpisanie kodu do pliku (czyli +\u0026ldquo;zmienna+\u0026rdquo; i tak dalej). Słowem nic specjalnego, zakręcony formularz i zero funkcjonalności.\u003c/p\u003e\n\u003cp\u003eTym razem moje ambicje sięgały wyżej niż witaj świecie. Chciałem napisać witaj łukaszu! :) Ten jakże odległy szczyt udało mi się osiągnąć dwiema podobnymi drogami - przy pomocy J# i C#. Podstawy Javy mam (nikłe bo nikłe ale są), jak wyżej pisałem C# to też dla mnie nie pierwszyzna ;) poszło dość szybko. Niestety nie dałem rady zrobić tego w VB i C++, ale jest czas.\u003c/p\u003e\n\u003cp\u003eZacząłem od C#. Pamiętałem, żeby nie używać strzałeczek bo to nie php. Trzeba było się przesiąść na kropeczki. Pamiętałem że interesująca mnie klasa (?) to \u003cstrong\u003eSystem.Console\u003c/strong\u003e. No trudno byłoby zapomnieć - już na samym początku została dołączona. Stąd było już blisko ReadLine, Write i znowu Read. W najbliższym czasie w programie nauczania C# liczenie pola i obwodu prostokąta.\u003c/p\u003e\n\u003cp\u003eZ J# poszło mi szybciej niż myślałem. Nazewnictwo metod identyczne, jedyna różnica to początek programu. W dalszej części do oglądnięcia kody programów.\u003c/p\u003e\n\u003cp\u003eKsiążkę do ASP mam.. tylko, że ASP Kompendium to nie jest tytuł pierwszej świeżości. Będzie trzeba odłożyć na jakiś porządny tytuł (ostatnie pieniądze poszły na świętowanie z okazji zdania matury).\u003c/p\u003e\n","title":"Visual Studio - pierwsze aplikacje"},{"content":"Jakiś czas temu na PHP.pl ukazał się news na temat techniki AJAX. Na forum zauważyłem temat w którym autor pytał o opinie na temat strony wykonanej w SAJAX-ie (zobacz temat[1], i stronę[2]).\nNie mniej zainteresował mnie bardziej JPSPAN, który umożliwia odwoływanie się do klas PHP. Jako, że ja mam zawsze spóźnioną reakcję dopiero w zeszłym tygodniu zacząłem się bawić.\nPierwsze co zrobiłem to alert tekstu zwróconego z klasy Hello. Następnie sprawdzenie jak wygląda tablica z serwera w przeglądarce. Okazało się, że identycznie.. jedyny problem jaki powstaje to wyjątki. Trzeba je zwracać poprzez specjalną klasę/funkcję.\nPostanowiłem zrobić przeglądarkę plików, ale mam poważne problemy – raz nie działa pod IE, dwa pod Operą, trzy nie mogę pokolorować składni, ponieważ wyskakuje błąd (serwera!?) \u0026ldquo;unterminated string literal while halling mojametoda\u0026rdquo;… Wysiadam po prostu.\nNotes [1] http://forum.php.pl/index.php?showtopic=30329\n[2] http://www.sepolno.wroclaw.pl/ajax/\n","permalink":"https://blog.dywicki.pl/2005/05/29/robi-si-gorco/","summary":"\u003cp\u003eJakiś czas temu na PHP.pl ukazał się news na temat techniki AJAX. Na forum zauważyłem temat w którym autor pytał o opinie na temat strony wykonanej w SAJAX-ie (zobacz temat[1], i stronę[2]).\u003c/p\u003e\n\u003cp\u003eNie mniej zainteresował mnie bardziej JPSPAN, który umożliwia odwoływanie się do klas PHP. Jako, że ja mam zawsze spóźnioną reakcję dopiero w zeszłym tygodniu zacząłem się bawić.\u003c/p\u003e\n\u003cp\u003ePierwsze co zrobiłem to alert tekstu zwróconego z klasy Hello. Następnie sprawdzenie jak wygląda tablica z serwera w przeglądarce. Okazało się, że identycznie.. jedyny problem jaki powstaje to wyjątki. Trzeba je zwracać poprzez specjalną klasę/funkcję.\u003c/p\u003e","title":"Robi się gorąco"},{"content":"Jakiś czas temu postanowiłem zamówić Visual Studio. Nie musiałem długo czekać aby je dostać.\nMuszę przyznać, że byłem mile zaskoczony. Kurier dostarcza przesyłkę prosto do domu, wszystko co trzeba zrobić to (najpierw) się zarejestrować a potem podpisać potwierdzenie odbioru.\nWewnątrz koperty znalazłem bardzo ładne pudełko. Muszę przyznać, że wywiera ono bardzo dobre wrażenie. Ciemna zieleń mile się komponuje z białym napisem Visual Studio 2005 Beta 2. W środku znajdują się 4 krążki DVD, które już tak estetyczne nie są. Srebrne z czarnymi napisami i zielonymi puzzlami. Srebrne z czarnymi napisami i zielonymi puzzlami. Za to na pocieszenie estetów dodano dwie ulotki w kolorze okładki (w tym jedna ze świetną larwą). Krążki zawierają kolejno Visual Studio Team Suite, Visual Studio Team Fundation Server oraz SQL Server 2005 Developer Edition (dla Windows Server 2003). Ostatni z wymienionych krążków jest najbrzydszy - białe, przechodzące w szare tło i czarne napisy. Fuj! Dodatkowo w pudełku jest jeszcze jedno DVD zatytułowane wefly247.net. Nadruk na płytce głosi, że znajduje się na niej \u0026ldquo;Wszystko czek potrzebuje developer do tworzenia aplikacji w Visual Studio\u0026rdquo; (możliwe że skłamałem bo to moje tłumaczenie).\nNie zwlekając włożyłem pierwsze DVD do nowego napędu. Kilka kliknięć na odczepne (instaluj, tak, zgadzam się) wyskoczył alert - nie masz SP 2. Kurde skąd ja wezmę SP 2? Pierwsze co microsoft.com -\u0026gt; order SP 2. Płytka powinna już wędrować do mnie.. no ale tak długo nie mogłem czekać. Udałem się do zaprzyjaźnionego sklepu komputerowego z okupem (2 filmy) i poprosiłem w zamian o Service Packa. Transakcja przeszła bez zakłóceń.\nPo powrocie do domu szybka instalacja SP, restart. Po uruchomieniu systemu wkładam DVD, znowu 3 kliknięcia, przechodzimy dalej. Okazuje się, że mam za mało miejsca na partycji systemowej (jest 690 megabajtów, potrzeba jeszcze 900!). Porządkowanie dysku, usunięcie Open Office\u0026rsquo;a i replay. W dalszym ciągu brakuje miejsca.. nie pozostało nic jak zmienić opcje instalacji. Po wszystkim. Na C: został Framework i SQL Server, reszta powędrowała na partycję F. Po instalacji ubyło 3.5 GB wolnego miejsca.\nPierwsze odpalenie i nie widzę nic nowego - to samo co w VS 2005 Express. Dodatkowe opcje to chyba możliwość pracy w grupach i odblokowanie projektów, które w expressie były zablokowane.\nSprawozdanie z tworzenia pierwszych projektów już wkrótce \u0026hellip;\n","permalink":"https://blog.dywicki.pl/2005/05/24/visual-studio/","summary":"\u003cp\u003eJakiś czas temu postanowiłem zamówić Visual Studio. Nie musiałem długo czekać aby je dostać.\u003c/p\u003e\n\u003cp\u003eMuszę przyznać, że byłem mile zaskoczony. Kurier dostarcza przesyłkę prosto do domu, wszystko co trzeba zrobić to (najpierw) się zarejestrować a potem podpisać potwierdzenie odbioru.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Pudełko jakie otrzymałem :)\" loading=\"lazy\" src=\"/images/vs2k5.jpg\"\u003eWewnątrz koperty znalazłem bardzo ładne pudełko. Muszę przyznać, że wywiera ono bardzo dobre wrażenie. Ciemna zieleń mile się komponuje z białym napisem \u003cstrong\u003eVisual Studio 2005 Beta 2\u003c/strong\u003e. W środku znajdują się 4 krążki DVD, które już tak estetyczne nie są. Srebrne z czarnymi napisami i zielonymi puzzlami. Srebrne z czarnymi napisami i zielonymi puzzlami. Za to na pocieszenie estetów dodano dwie ulotki w kolorze okładki (w tym jedna ze świetną larwą). Krążki zawierają kolejno \u003cstrong\u003eVisual Studio Team Suite\u003c/strong\u003e, \u003cstrong\u003eVisual Studio Team Fundation Server\u003c/strong\u003e oraz \u003cstrong\u003eSQL Server 2005 Developer Edition\u003c/strong\u003e (dla Windows Server 2003). Ostatni z wymienionych krążków jest najbrzydszy - białe, przechodzące w szare tło i czarne napisy. Fuj! Dodatkowo w pudełku jest jeszcze jedno DVD zatytułowane \u003cstrong\u003ewefly247.net\u003c/strong\u003e. Nadruk na płytce głosi, że znajduje się na niej \u0026ldquo;Wszystko czek potrzebuje developer do tworzenia aplikacji w Visual Studio\u0026rdquo; (możliwe że skłamałem bo to moje tłumaczenie).\u003c/p\u003e","title":"Visual Studio"},{"content":"Drugim nabytkiem jest pamięć. Byłem bardzo zawiedzony gdy nawet na najniższych detalach SWAT 4 perfidnie rwał. Nie pozostało nic innego jak dokupić ramu. Do obecnej kości Kingstone’a 256 MB / 400 MHz doszła kolejna, już nie markowa, 512 MB. Łączenie 768. SWAT od tej pory chodzi płynnie tak, że można spokojnie grać. Nie mogę się doczekać aż dostanę w swoje łapska Undergrounda 2. Jedyne, co mnie smuci to, to że system dalej uruchamia się bardzo wolno. Najwyraźniej nie pozostaje mi nic innego jak ponowna instalacja. Ale z tym chyba poczekam, ponieważ nie chce mi się na nowo instalować tego wszystkiego.\n","permalink":"https://blog.dywicki.pl/2005/05/20/256512-756/","summary":"\u003cp\u003e\u003cimg alt=\"Wilk Electronics ;)\" loading=\"lazy\" src=\"/images/ram.jpg\"\u003eDrugim nabytkiem jest pamięć. Byłem bardzo zawiedzony gdy nawet na najniższych detalach SWAT 4 perfidnie rwał. Nie pozostało nic innego jak dokupić ramu. Do obecnej kości Kingstone’a 256 MB / 400 MHz doszła kolejna, już nie markowa, 512 MB. Łączenie 768. SWAT od tej pory chodzi płynnie tak, że można spokojnie grać. Nie mogę się doczekać aż dostanę w swoje łapska Undergrounda 2. Jedyne, co mnie smuci to, to że system dalej uruchamia się bardzo wolno. Najwyraźniej nie pozostaje mi nic innego jak ponowna instalacja. Ale z tym chyba poczekam, ponieważ nie chce mi się na nowo instalować tego wszystkiego.\u003c/p\u003e","title":"256+512 = 756?"},{"content":"I kolejny powrót\u0026hellip; po kilkutygodniowej przerwie wracamy do sieci. Niestety, są straty.. w wyniku awarii poprzedniego serwera (na który już nie zamierzam wracać) straciłem wszystkie dane na nim zapisane, łącznie z wpisami z bazy danych. Tak więc część postów przestała istnieć, a ja znowu zaczynam niemal od zera. Przykra sprawa, ale cóż, nic sie nie poradzi.\n","permalink":"https://blog.dywicki.pl/2005/05/18/znowu-razem/","summary":"\u003cp\u003eI kolejny powrót\u0026hellip; po kilkutygodniowej przerwie wracamy do sieci. Niestety, są straty.. w wyniku awarii poprzedniego serwera (na który już nie zamierzam wracać) straciłem wszystkie dane na nim zapisane, łącznie z wpisami z bazy danych. Tak więc część postów przestała istnieć, a ja znowu zaczynam \u003ca href=\"niemal\"\u003eniemal\u003c/a\u003e od zera. Przykra sprawa, ale cóż, nic sie nie poradzi.\u003c/p\u003e","title":"Znowu razem :-)"},{"content":"Całkiem niedawno kupiłem sobie nowy napęd. Stary CD-ROM sprzedałem razem z komputerem kuzyna tak, że przez ponad dwa miesiące nie miałem możliwości zainstalowania czegokolwiek z płyty. Jako, że udało mi się zarobić parę groszy zainwestowałem w nowy napęd … DVD+/-RW. Pierwsze co zrobiłem gdy już go zainstalowałem to było nagranie filmów, które zajmują zbyt wiele miejsca. Do tego parę plików ISO pobranych z sieci i na dysku przybyło 10 GB wolnego miejsca. Nagrałem też na krążek dvd obraz Half Life’a 2, zajmujący ponad 3 GB. Z napędu jestem bardzo zadowolony. Fakt, że najszybszy nie jest (maksymalna prędkość nagrywania CD to 40x, a DVD 12x) i nie przegrywa szybciej niż Gołota, ale nie zależy mi aż tak bardzo na czasie. Zapłaciłem za ten napęd w sumie 250 zł, ale przy okazji odwiedzin w zaprzyjaźnionym sklepie nabyłem kilkanaście płyt CD i dwie DVD.\n","permalink":"https://blog.dywicki.pl/2005/05/12/nagrywarka-dvd/","summary":"\u003cp\u003e\u003cimg alt=\"Nowa nagrywarka\" loading=\"lazy\" src=\"/images/dvd.jpg\"\u003eCałkiem niedawno kupiłem sobie nowy napęd. Stary CD-ROM sprzedałem razem z komputerem kuzyna tak, że przez ponad dwa miesiące nie miałem możliwości zainstalowania czegokolwiek z płyty. Jako, że udało mi się zarobić parę groszy zainwestowałem w nowy napęd … DVD+/-RW. Pierwsze co zrobiłem gdy już go zainstalowałem to było nagranie filmów, które zajmują zbyt wiele miejsca. Do tego parę plików ISO pobranych z sieci i na dysku przybyło 10 GB wolnego miejsca. Nagrałem też na krążek dvd obraz Half Life’a 2, zajmujący ponad 3 GB. Z napędu jestem bardzo zadowolony. Fakt, że najszybszy nie jest (maksymalna prędkość nagrywania CD to 40x, a DVD 12x) i nie przegrywa szybciej niż Gołota, ale nie zależy mi aż tak bardzo na czasie. Zapłaciłem za ten napęd w sumie 250 zł, ale przy okazji odwiedzin w zaprzyjaźnionym sklepie nabyłem kilkanaście płyt CD i dwie DVD.\u003c/p\u003e","title":"Nagrywarka DVD"},{"content":"Po bardzo długim czasie użytkowania myszy bez rolki zatrzymałem sobie staruszkę kuzyna (moja myszka powędrowała za 2 zł do kolegi).\nMysz sprawowała się dość dobrze, ale miała jedną wadę. Czasami gdy kursor stał chwilkę w miejscu zaczynał drgać. Wierzcie mi gdy się pisze na klawiaturze to drgający kursor bardzo przykuwa uwagę.\nPo pewnym czasie podczas odwiedzin zaprzyjaźnionego sklepu komputerowego dowiedziałem się, że w zamian za wprowadzone niegdyś modyfikację w Os Commerce otrzymam mysz. Jak to mówi przysłowie lepszy rydz niż nic. Po kilku dniach zostałem wezwany do zaprzyjaźnionego sklepu. Czekała tam na mnie nowiutka mysz. Model był mi znany nie tylko z widzenia, ponieważ używałem identycznego podczas pracy na komputerze kuzyna. Dość spora bryła leży dobrze w dłoni. Optyka też się dobrze sprawuje dlatego też stara podkładka powędrowała do szuflady (nie wyrzuciłem jej ze względu na sentyment).\nZ myszką już teraz wiąże się zabawny epizod – gdy odwiedził mnie znajomy (chciał sprawdzić pocztę) zamiast używać dużych przycisków używał małych, umieszczonych obok rolki. Skutkiem tego było „skakanie” strony z góry na dół, ponieważ miałem wtedy przypisane do tych 2 przycisków funkcję następna/poprzednia strona.\nJakież było zdziwienie znajomego gdy zobaczył, że to duże, płaskie i srebrne też można klikać trudno opisać. :)\n","permalink":"https://blog.dywicki.pl/2005/05/06/nowa-myszka/","summary":"\u003cp\u003e\u003cimg alt=\"Mysz w ujęciu pierwszym\" loading=\"lazy\" src=\"/images/mysz.jpg\"\u003ePo bardzo długim czasie użytkowania myszy bez rolki zatrzymałem sobie staruszkę kuzyna (moja myszka powędrowała za 2 zł do kolegi).\u003c/p\u003e\n\u003cp\u003eMysz sprawowała się dość dobrze, ale miała jedną wadę. Czasami gdy kursor stał chwilkę w miejscu zaczynał drgać. Wierzcie mi gdy się pisze na klawiaturze to drgający kursor bardzo przykuwa uwagę.\u003cbr\u003e\n\u003cimg alt=\"Zadanie-znajdź PPM\" loading=\"lazy\" src=\"/images/mysz2.jpg\"\u003ePo pewnym czasie podczas odwiedzin zaprzyjaźnionego sklepu komputerowego dowiedziałem się, że w zamian za wprowadzone niegdyś modyfikację w Os Commerce otrzymam mysz. Jak to mówi przysłowie lepszy rydz niż nic. Po kilku dniach zostałem wezwany do zaprzyjaźnionego sklepu. Czekała tam na mnie nowiutka mysz. Model był mi znany nie tylko z widzenia, ponieważ używałem identycznego podczas pracy na komputerze kuzyna. Dość spora bryła leży dobrze w dłoni. Optyka też się dobrze sprawuje dlatego też stara podkładka powędrowała do szuflady (nie wyrzuciłem jej ze względu na sentyment).\u003c/p\u003e","title":"Nowa myszka"},{"content":"W dalszej części posta kod bota napisanego przeze mnie w pythonie (wspomagałem się kodem beli). [python]import sys import socket import string import time import re #wyrazenia regularne! ;)\n#ustawienia :) class MyIrcConfig: server = ‘ircnet.pl‘ port = 6667 nick = ‘tete‘ ident = ‘MyIrc‘ realname = ‘bot‘ channel = ‘splatch‘\n#klasa do wyswietlania tekstow #TODO: mozliwosc blokowania komunikatow (tryb cichy)\nclass Output: def __init__(self): self.printer(’Test wyjscia . . .‘)\ndef printer(self,x): print x #klasa do komunikacji bot\u0026lt;\u0026gt;irc\nclass MyIrc(MyIrcConfig): socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) output = Output()\ndef connect(self): #probuj sie polaczyc try: self.socket.connect((self.server, self.port)) except: self.output.printer( ‘Nie moge sie polaczyc z serweremn‘ )\n#powiedz serwerowi kim jestes self.socket.send(’NICK %srn‘ % self.nick) self.socket.send(’USER %s %s bla: %srn‘ % (self.ident, self.server, self.realname)) self.output.printer(’Connected to irc servern‘) self.output.printer(’user \u0026ldquo;%s\u0026rdquo; (%s@%s * %s)‘ % (self.nick, self.ident, self.server, self.realname))\n#odczyt serwera def read(self): data = self.socket.recv(1024) self.output.printer(data) return data\n#wejdz na kanal def join(self): self.socket.send(’JOIN #%srn ‘ % self.channel )\n#wykonaj def write(self,msg): self.output.printer(msg) self.socket.send(msg) #klasa zasadnicza\nclass PyAeewe: MyIrc = MyIrc()\ndef start(self): self.MyIrc.connect() while 1: data = self.MyIrc.read() #tutaj odbieranie MOTD itp #jesli wszystko ok break;\nself.MyIrc.join() #wskocz na kanal\nwhile 1: data = self.MyIrc.read() #daj mozliwosc wykonywania komend\ntry: #data = raw_input(’Komenda: ‘) #self.MyIrc.write(data) self.MyIrc.output.printer(data) except: self.MyIrc.output.printer(’Blad‘)\naeewe = PyAeewe() aeewe.start()[/python]\n","permalink":"https://blog.dywicki.pl/2005/04/08/pythonowe-potyczki/","summary":"\u003cp\u003eW dalszej części posta kod bota napisanego przeze mnie w pythonie (wspomagałem się kodem beli).\n[python]import sys\nimport socket\nimport string\nimport time\nimport re #wyrazenia regularne! ;)\u003c/p\u003e\n\u003cp\u003e#ustawienia :)\nclass MyIrcConfig:\nserver = ‘ircnet.pl‘\nport = 6667\nnick = ‘tete‘\nident = ‘MyIrc‘\nrealname = ‘bot‘\nchannel = ‘splatch‘\u003c/p\u003e\n\u003cp\u003e#klasa do wyswietlania tekstow #TODO: mozliwosc blokowania komunikatow (tryb cichy)\u003c/p\u003e\n\u003cp\u003eclass Output:\ndef __init__(self):\nself.printer(’Test wyjscia . . .‘)\u003c/p\u003e\n\u003cp\u003edef printer(self,x):\nprint x #klasa do komunikacji bot\u0026lt;\u0026gt;irc\u003c/p\u003e","title":"Pythonowe potyczki"},{"content":"Od niechcenia spojrzałem dzisiaj na forum. I co widzę? Temat (php) Problem - regexy. Jako, że mam jako-takie pojęcie na temat regexpów to zobaczyłem o co chodzi. Okazało się, że to nic wielkiego, problem ze zmianą [[link]] na wersję zdatną do klikania. Jedynym problemem było to, że drugi parametr jest opcjonalny. Zacząłem myśleć, już po chwili miałem gotowy wzór, który pasował do [[link]] oraz [[link|opis]]. Zastanawiało mnie jedno - czy da się wykorzystać w preg_replace; ten wzór.. Niestety nie udało mi się do tego dojść mimo lektury bardzo dobrego poradnika na temat wyrażeń. Udało mi się w końcu zrodzić drugi wzór, znacznie bardziej skomplikowany, na zasadzie pod-wyrażeń warunkowych.\n[sourcecode lang=\u0026ldquo;php\u0026rdquo;]\n\u003c?php // tekst do przerobki $text = '\\[\\[link\\|tata\\]\\]'; // wersja z podwyrazeniami (niezaimpletowana w funkcji) $regexp = '/(?(?=\\[\\[(?:.+)\\|(?:.+)\\]\\])\\[\\[(.+)\\|(.+)\\]\\]\\|\\[\\[(.+)\\]\\])/'; // wersja alternatywna;) $regexp = '/\\[\\[(.+?)(?:\\|(.+))?\\]\\]/'; $tex2 = preg\\_replace\\_callback($regexp,'wiki\\_link',$text); function wiki\\_link($mat) { if (sizeof($mat) == 3) { // jest drugi parametr - \\[link\\|opis\\] return ''. $mat\\[2\\] .''; } return ''. $mat\\[1\\] .''; } ?\u003e [/sourcecode]\n","permalink":"https://blog.dywicki.pl/2005/03/16/first-post/","summary":"\u003cp\u003eOd niechcenia spojrzałem dzisiaj na forum. I co widzę? Temat \u003cstrong\u003e(php) Problem - regexy\u003c/strong\u003e. Jako, że mam jako-takie pojęcie na temat regexpów to zobaczyłem o co chodzi. Okazało się, że to nic wielkiego, problem ze zmianą [[link]] na wersję zdatną do klikania. Jedynym problemem było to, że drugi parametr jest opcjonalny. Zacząłem myśleć, już po chwili miałem gotowy wzór, który pasował do [[link]] oraz [[link|opis]]. Zastanawiało mnie jedno - czy da się wykorzystać w \u003cstrong\u003epreg_replace\u003c/strong\u003e; ten wzór.. Niestety nie udało mi się do tego dojść mimo lektury bardzo dobrego \u003ca href=\"http://thebat.pl/podrecznik/TB_regx.php\"\u003eporadnika\u003c/a\u003e na temat wyrażeń. Udało mi się w końcu zrodzić drugi wzór, znacznie bardziej skomplikowany, na zasadzie \u003ca href=\"http://thebat.pl/podrecznik/TB_regx_advsy_cnd.php\"\u003epod-wyrażeń warunkowych\u003c/a\u003e.\u003c/p\u003e","title":"Wyrażenia regularne"}]